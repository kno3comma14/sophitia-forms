if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.597";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  if (typeof setTimeout !== "undefined") {
    var and__4174__auto__ = setTimeout(f, 0);
    if (cljs.core.truth_(and__4174__auto__)) {
      return true;
    } else {
      return and__4174__auto__;
    }
  } else {
    return false;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4174__auto__ = ty;
    if (cljs.core.truth_(and__4174__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4174__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5751__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5751__auto__)) {
    var s = temp__5751__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__6148 = arguments.length;
  switch(G__6148) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6150 = arguments.length;
      var i__4790__auto___6151 = 0;
      while (true) {
        if (i__4790__auto___6151 < len__4789__auto___6150) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6151]);
          var G__6152 = i__4790__auto___6151 + 1;
          i__4790__auto___6151 = G__6152;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4666__auto___6153 = dimarray.length;
  var i_6154 = 0;
  while (true) {
    if (i_6154 < n__4666__auto___6153) {
      dimarray[i_6154] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__6155 = i_6154 + 1;
      i_6154 = G__6155;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq6145) {
  var G__6146 = cljs.core.first(seq6145);
  var seq6145__$1 = cljs.core.next(seq6145);
  var G__6147 = cljs.core.first(seq6145__$1);
  var seq6145__$2 = cljs.core.next(seq6145__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6146, G__6147, seq6145__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4666__auto___6156 = len;
  var i_6157 = 0;
  while (true) {
    if (i_6157 < n__4666__auto___6156) {
      new_arr[i_6157] = arr[i_6157];
      var G__6158 = i_6157 + 1;
      i_6157 = G__6158;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6159 = i + 1;
      i = G__6159;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__6164 = arguments.length;
  switch(G__6164) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6167 = arguments.length;
      var i__4790__auto___6168 = 0;
      while (true) {
        if (i__4790__auto___6168 < len__4789__auto___6167) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6168]);
          var G__6169 = i__4790__auto___6168 + 1;
          i__4790__auto___6168 = G__6169;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.array_QMARK_(array);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e6165) {
    var e_6170 = e6165;
    cljs.core.maybe_warn(e_6170);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq6161) {
  var G__6162 = cljs.core.first(seq6161);
  var seq6161__$1 = cljs.core.next(seq6161);
  var G__6163 = cljs.core.first(seq6161__$1);
  var seq6161__$2 = cljs.core.next(seq6161__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6162, G__6163, seq6161__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__6176 = arguments.length;
  switch(G__6176) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6179 = arguments.length;
      var i__4790__auto___6180 = 0;
      while (true) {
        if (i__4790__auto___6180 < len__4789__auto___6179) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6180]);
          var G__6181 = i__4790__auto___6180 + 1;
          i__4790__auto___6180 = G__6181;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.array_QMARK_(array);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e6177) {
    var e_6182 = e6177;
    cljs.core.maybe_warn(e_6182);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq6172) {
  var G__6173 = cljs.core.first(seq6172);
  var seq6172__$1 = cljs.core.next(seq6172);
  var G__6174 = cljs.core.first(seq6172__$1);
  var seq6172__$2 = cljs.core.next(seq6172__$1);
  var G__6175 = cljs.core.first(seq6172__$2);
  var seq6172__$3 = cljs.core.next(seq6172__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6173, G__6174, G__6175, seq6172__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__6187 = arguments.length;
  switch(G__6187) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6189 = arguments.length;
      var i__4790__auto___6190 = 0;
      while (true) {
        if (i__4790__auto___6190 < len__4789__auto___6189) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6190]);
          var G__6191 = i__4790__auto___6190 + 1;
          i__4790__auto___6190 = G__6191;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = cljs.core.array_QMARK_(array);
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq6184) {
  var G__6185 = cljs.core.first(seq6184);
  var seq6184__$1 = cljs.core.next(seq6184);
  var G__6186 = cljs.core.first(seq6184__$1);
  var seq6184__$2 = cljs.core.next(seq6184__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6185, G__6186, seq6184__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__6197 = arguments.length;
  switch(G__6197) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6199 = arguments.length;
      var i__4790__auto___6200 = 0;
      while (true) {
        if (i__4790__auto___6200 < len__4789__auto___6199) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6200]);
          var G__6201 = i__4790__auto___6200 + 1;
          i__4790__auto___6200 = G__6201;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = cljs.core.array_QMARK_(array);
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq6193) {
  var G__6194 = cljs.core.first(seq6193);
  var seq6193__$1 = cljs.core.next(seq6193);
  var G__6195 = cljs.core.first(seq6193__$1);
  var seq6193__$2 = cljs.core.next(seq6193__$1);
  var G__6196 = cljs.core.first(seq6193__$2);
  var seq6193__$3 = cljs.core.next(seq6193__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6194, G__6195, G__6196, seq6193__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__6206 = arguments.length;
  switch(G__6206) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6208 = arguments.length;
      var i__4790__auto___6209 = 0;
      while (true) {
        if (i__4790__auto___6209 < len__4789__auto___6208) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6209]);
          var G__6210 = i__4790__auto___6209 + 1;
          i__4790__auto___6209 = G__6210;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6203) {
  var G__6204 = cljs.core.first(seq6203);
  var seq6203__$1 = cljs.core.next(seq6203);
  var G__6205 = cljs.core.first(seq6203__$1);
  var seq6203__$2 = cljs.core.next(seq6203__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6204, G__6205, seq6203__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__6216 = arguments.length;
  switch(G__6216) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6218 = arguments.length;
      var i__4790__auto___6219 = 0;
      while (true) {
        if (i__4790__auto___6219 < len__4789__auto___6218) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6219]);
          var G__6220 = i__4790__auto___6219 + 1;
          i__4790__auto___6219 = G__6220;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6212) {
  var G__6213 = cljs.core.first(seq6212);
  var seq6212__$1 = cljs.core.next(seq6212);
  var G__6214 = cljs.core.first(seq6212__$1);
  var seq6212__$2 = cljs.core.next(seq6212__$1);
  var G__6215 = cljs.core.first(seq6212__$2);
  var seq6212__$3 = cljs.core.next(seq6212__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6213, G__6214, G__6215, seq6212__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__6222 = arguments.length;
  switch(G__6222) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___6227 = arguments.length;
  var i__4790__auto___6228 = 0;
  while (true) {
    if (i__4790__auto___6228 < len__4789__auto___6227) {
      args__4795__auto__.push(arguments[i__4790__auto___6228]);
      var G__6229 = i__4790__auto___6228 + 1;
      i__4790__auto___6228 = G__6229;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6224) {
  var G__6225 = cljs.core.first(seq6224);
  var seq6224__$1 = cljs.core.next(seq6224);
  var G__6226 = cljs.core.first(seq6224__$1);
  var seq6224__$2 = cljs.core.next(seq6224__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6225, G__6226, seq6224__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__6231 = arguments.length;
  switch(G__6231) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4488__auto__.call(null, this$, a);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4485__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4488__auto__.call(null, this$, a, b);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4485__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4488__auto__.call(null, this$, a, b, c);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4485__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4488__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4485__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4488__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4485__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4488__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4485__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._invoke[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4488__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4485__auto__ = cljs.core._invoke["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4485__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4487__auto__ = value == null ? null : value;
    var m__4488__auto__ = cljs.core._clone[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4488__auto__.call(null, value);
    } else {
      var m__4485__auto__ = cljs.core._clone["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4485__auto__.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._count[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._count["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._empty[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._empty["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._conj[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4488__auto__.call(null, coll, o);
    } else {
      var m__4485__auto__ = cljs.core._conj["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4485__auto__.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__6234 = arguments.length;
  switch(G__6234) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._nth[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4488__auto__.call(null, coll, n);
    } else {
      var m__4485__auto__ = cljs.core._nth["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4485__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._nth[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4488__auto__.call(null, coll, n, not_found);
    } else {
      var m__4485__auto__ = cljs.core._nth["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4485__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._first[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._first["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._rest[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._rest["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._next[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._next["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__6237 = arguments.length;
  switch(G__6237) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._lookup[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4488__auto__.call(null, o, k);
    } else {
      var m__4485__auto__ = cljs.core._lookup["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4485__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._lookup[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4488__auto__.call(null, o, k, not_found);
    } else {
      var m__4485__auto__ = cljs.core._lookup["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4485__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4488__auto__.call(null, coll, k);
    } else {
      var m__4485__auto__ = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4485__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._assoc[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4488__auto__.call(null, coll, k, v);
    } else {
      var m__4485__auto__ = cljs.core._assoc["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4485__auto__.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._find[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4488__auto__.call(null, coll, k);
    } else {
      var m__4485__auto__ = cljs.core._find["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4485__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._dissoc[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4488__auto__.call(null, coll, k);
    } else {
      var m__4485__auto__ = cljs.core._dissoc["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4485__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._key[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._key["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._val[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._val["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._disjoin[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4488__auto__.call(null, coll, v);
    } else {
      var m__4485__auto__ = cljs.core._disjoin["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4485__auto__.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._peek[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._peek["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._pop[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._pop["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._assoc_n[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4488__auto__.call(null, coll, n, val);
    } else {
      var m__4485__auto__ = cljs.core._assoc_n["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4485__auto__.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._deref[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4488__auto__.call(null, o);
    } else {
      var m__4485__auto__ = cljs.core._deref["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4485__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4488__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4485__auto__ = cljs.core._deref_with_timeout["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4485__auto__.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._meta[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4488__auto__.call(null, o);
    } else {
      var m__4485__auto__ = cljs.core._meta["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4485__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._with_meta[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4488__auto__.call(null, o, meta);
    } else {
      var m__4485__auto__ = cljs.core._with_meta["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4485__auto__.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__6240 = arguments.length;
  switch(G__6240) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._reduce[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4488__auto__.call(null, coll, f);
    } else {
      var m__4485__auto__ = cljs.core._reduce["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4485__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._reduce[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4488__auto__.call(null, coll, f, start);
    } else {
      var m__4485__auto__ = cljs.core._reduce["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4485__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4488__auto__.call(null, coll, f, init);
    } else {
      var m__4485__auto__ = cljs.core._kv_reduce["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4485__auto__.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._equiv[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4488__auto__.call(null, o, other);
    } else {
      var m__4485__auto__ = cljs.core._equiv["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4485__auto__.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._hash[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4488__auto__.call(null, o);
    } else {
      var m__4485__auto__ = cljs.core._hash["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4485__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._seq[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4488__auto__.call(null, o);
    } else {
      var m__4485__auto__ = cljs.core._seq["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4485__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._rseq[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._rseq["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4488__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4485__auto__ = cljs.core._sorted_seq["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4485__auto__.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4488__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4485__auto__ = cljs.core._sorted_seq_from["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4485__auto__.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._entry_key[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4488__auto__.call(null, coll, entry);
    } else {
      var m__4485__auto__ = cljs.core._entry_key["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4485__auto__.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._comparator[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._comparator["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4487__auto__ = writer == null ? null : writer;
    var m__4488__auto__ = cljs.core._write[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4488__auto__.call(null, writer, s);
    } else {
      var m__4485__auto__ = cljs.core._write["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4485__auto__.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4487__auto__ = writer == null ? null : writer;
    var m__4488__auto__ = cljs.core._flush[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4488__auto__.call(null, writer);
    } else {
      var m__4485__auto__ = cljs.core._flush["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4485__auto__.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._pr_writer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4488__auto__.call(null, o, writer, opts);
    } else {
      var m__4485__auto__ = cljs.core._pr_writer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4485__auto__.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = cljs.core._realized_QMARK_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._notify_watches[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4488__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4485__auto__ = cljs.core._notify_watches["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4485__auto__.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._add_watch[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4488__auto__.call(null, this$, key, f);
    } else {
      var m__4485__auto__ = cljs.core._add_watch["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4485__auto__.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = cljs.core._remove_watch[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4488__auto__.call(null, this$, key);
    } else {
      var m__4485__auto__ = cljs.core._remove_watch["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4485__auto__.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._as_transient[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._as_transient["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4488__auto__.call(null, tcoll, val);
    } else {
      var m__4485__auto__ = cljs.core._conj_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4485__auto__.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4488__auto__.call(null, tcoll);
    } else {
      var m__4485__auto__ = cljs.core._persistent_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4485__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4488__auto__.call(null, tcoll, key, val);
    } else {
      var m__4485__auto__ = cljs.core._assoc_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4485__auto__.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4488__auto__.call(null, tcoll, key);
    } else {
      var m__4485__auto__ = cljs.core._dissoc_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4485__auto__.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4488__auto__.call(null, tcoll, n, val);
    } else {
      var m__4485__auto__ = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4485__auto__.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4488__auto__.call(null, tcoll);
    } else {
      var m__4485__auto__ = cljs.core._pop_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4485__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4487__auto__ = tcoll == null ? null : tcoll;
    var m__4488__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4488__auto__.call(null, tcoll, v);
    } else {
      var m__4485__auto__ = cljs.core._disjoin_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4485__auto__.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._compare[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4488__auto__.call(null, x, y);
    } else {
      var m__4485__auto__ = cljs.core._compare["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4485__auto__.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._drop_first[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._drop_first["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._chunked_first[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._chunked_first["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._chunked_rest["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._chunked_next[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._chunked_next["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._name[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = cljs.core._name["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._namespace[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = cljs.core._namespace["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4488__auto__.call(null, o, new_value);
    } else {
      var m__4485__auto__ = cljs.core._reset_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4485__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__6243 = arguments.length;
  switch(G__6243) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4488__auto__.call(null, o, f);
    } else {
      var m__4485__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4485__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4488__auto__.call(null, o, f, a);
    } else {
      var m__4485__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4485__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4488__auto__.call(null, o, f, a, b);
    } else {
      var m__4485__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4485__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4488__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4485__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4485__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4487__auto__ = o == null ? null : o;
    var m__4488__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4488__auto__.call(null, o, new_value);
    } else {
      var m__4485__auto__ = cljs.core._vreset_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4485__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4487__auto__ = coll == null ? null : coll;
    var m__4488__auto__ = cljs.core._iterator[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4488__auto__.call(null, coll);
    } else {
      var m__4485__auto__ = cljs.core._iterator["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4485__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6245 = i + 2;
        var G__6246 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6245;
        h1 = G__6246;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6249 = i + 1;
          var G__6250 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__6249;
          hash = G__6250;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__6254 = o;
        switch(G__6254) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__6257 = null;
  var G__6257__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__6257__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__6257 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6257__2.call(this, self__, coll);
      case 3:
        return G__6257__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__6257.cljs$core$IFn$_invoke$arity$2 = G__6257__2;
  G__6257.cljs$core$IFn$_invoke$arity$3 = G__6257__3;
  return G__6257;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6256) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6256)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4297__auto__ = self__._hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__6259 = arguments.length;
  switch(G__6259) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__6261 = name.fqn;
            name = G__6261;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__6305 = null;
  var G__6305__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6263 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6263.cljs$core$IFn$_invoke$arity$0 ? fexpr__6263.cljs$core$IFn$_invoke$arity$0() : fexpr__6263.call(null);
  };
  var G__6305__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6264 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6264.cljs$core$IFn$_invoke$arity$1 ? fexpr__6264.cljs$core$IFn$_invoke$arity$1(a) : fexpr__6264.call(null, a);
  };
  var G__6305__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6265 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6265.cljs$core$IFn$_invoke$arity$2 ? fexpr__6265.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__6265.call(null, a, b);
  };
  var G__6305__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6266 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6266.cljs$core$IFn$_invoke$arity$3 ? fexpr__6266.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__6266.call(null, a, b, c);
  };
  var G__6305__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6267 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6267.cljs$core$IFn$_invoke$arity$4 ? fexpr__6267.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__6267.call(null, a, b, c, d);
  };
  var G__6305__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6268 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6268.cljs$core$IFn$_invoke$arity$5 ? fexpr__6268.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__6268.call(null, a, b, c, d, e);
  };
  var G__6305__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6269 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6269.cljs$core$IFn$_invoke$arity$6 ? fexpr__6269.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__6269.call(null, a, b, c, d, e, f);
  };
  var G__6305__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6270 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6270.cljs$core$IFn$_invoke$arity$7 ? fexpr__6270.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__6270.call(null, a, b, c, d, e, f, g);
  };
  var G__6305__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6271 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6271.cljs$core$IFn$_invoke$arity$8 ? fexpr__6271.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__6271.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6305__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6272 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6272.cljs$core$IFn$_invoke$arity$9 ? fexpr__6272.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__6272.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6305__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6273 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6273.cljs$core$IFn$_invoke$arity$10 ? fexpr__6273.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__6273.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6305__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6274 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6274.cljs$core$IFn$_invoke$arity$11 ? fexpr__6274.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__6274.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6305__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6275 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6275.cljs$core$IFn$_invoke$arity$12 ? fexpr__6275.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__6275.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6305__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6276 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6276.cljs$core$IFn$_invoke$arity$13 ? fexpr__6276.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__6276.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6305__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6277 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6277.cljs$core$IFn$_invoke$arity$14 ? fexpr__6277.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__6277.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6305__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6278 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6278.cljs$core$IFn$_invoke$arity$15 ? fexpr__6278.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__6278.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6305__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6279 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6279.cljs$core$IFn$_invoke$arity$16 ? fexpr__6279.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__6279.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6305__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6280 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6280.cljs$core$IFn$_invoke$arity$17 ? fexpr__6280.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__6280.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6305__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6281 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6281.cljs$core$IFn$_invoke$arity$18 ? fexpr__6281.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__6281.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6305__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6282 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6282.cljs$core$IFn$_invoke$arity$19 ? fexpr__6282.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__6282.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6305__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__6283 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__6283.cljs$core$IFn$_invoke$arity$20 ? fexpr__6283.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__6283.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6305__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__6305 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6305__1.call(this, self__);
      case 2:
        return G__6305__2.call(this, self__, a);
      case 3:
        return G__6305__3.call(this, self__, a, b);
      case 4:
        return G__6305__4.call(this, self__, a, b, c);
      case 5:
        return G__6305__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6305__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6305__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6305__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6305__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6305__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6305__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6305__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6305__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6305__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6305__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6305__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6305__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6305__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6305__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6305__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6305__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6305__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__6305.cljs$core$IFn$_invoke$arity$1 = G__6305__1;
  G__6305.cljs$core$IFn$_invoke$arity$2 = G__6305__2;
  G__6305.cljs$core$IFn$_invoke$arity$3 = G__6305__3;
  G__6305.cljs$core$IFn$_invoke$arity$4 = G__6305__4;
  G__6305.cljs$core$IFn$_invoke$arity$5 = G__6305__5;
  G__6305.cljs$core$IFn$_invoke$arity$6 = G__6305__6;
  G__6305.cljs$core$IFn$_invoke$arity$7 = G__6305__7;
  G__6305.cljs$core$IFn$_invoke$arity$8 = G__6305__8;
  G__6305.cljs$core$IFn$_invoke$arity$9 = G__6305__9;
  G__6305.cljs$core$IFn$_invoke$arity$10 = G__6305__10;
  G__6305.cljs$core$IFn$_invoke$arity$11 = G__6305__11;
  G__6305.cljs$core$IFn$_invoke$arity$12 = G__6305__12;
  G__6305.cljs$core$IFn$_invoke$arity$13 = G__6305__13;
  G__6305.cljs$core$IFn$_invoke$arity$14 = G__6305__14;
  G__6305.cljs$core$IFn$_invoke$arity$15 = G__6305__15;
  G__6305.cljs$core$IFn$_invoke$arity$16 = G__6305__16;
  G__6305.cljs$core$IFn$_invoke$arity$17 = G__6305__17;
  G__6305.cljs$core$IFn$_invoke$arity$18 = G__6305__18;
  G__6305.cljs$core$IFn$_invoke$arity$19 = G__6305__19;
  G__6305.cljs$core$IFn$_invoke$arity$20 = G__6305__20;
  G__6305.cljs$core$IFn$_invoke$arity$21 = G__6305__21;
  G__6305.cljs$core$IFn$_invoke$arity$22 = G__6305__22;
  return G__6305;
}();
cljs.core.Var.prototype.apply = function(self__, args6262) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6262)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__6284 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6284.cljs$core$IFn$_invoke$arity$0 ? fexpr__6284.cljs$core$IFn$_invoke$arity$0() : fexpr__6284.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__6285 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6285.cljs$core$IFn$_invoke$arity$1 ? fexpr__6285.cljs$core$IFn$_invoke$arity$1(a) : fexpr__6285.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__6286 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6286.cljs$core$IFn$_invoke$arity$2 ? fexpr__6286.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__6286.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__6287 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6287.cljs$core$IFn$_invoke$arity$3 ? fexpr__6287.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__6287.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__6288 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6288.cljs$core$IFn$_invoke$arity$4 ? fexpr__6288.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__6288.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__6289 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6289.cljs$core$IFn$_invoke$arity$5 ? fexpr__6289.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__6289.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__6290 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6290.cljs$core$IFn$_invoke$arity$6 ? fexpr__6290.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__6290.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__6291 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6291.cljs$core$IFn$_invoke$arity$7 ? fexpr__6291.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__6291.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__6292 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6292.cljs$core$IFn$_invoke$arity$8 ? fexpr__6292.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__6292.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__6293 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6293.cljs$core$IFn$_invoke$arity$9 ? fexpr__6293.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__6293.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__6294 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6294.cljs$core$IFn$_invoke$arity$10 ? fexpr__6294.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__6294.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__6295 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6295.cljs$core$IFn$_invoke$arity$11 ? fexpr__6295.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__6295.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__6296 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6296.cljs$core$IFn$_invoke$arity$12 ? fexpr__6296.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__6296.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__6297 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6297.cljs$core$IFn$_invoke$arity$13 ? fexpr__6297.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__6297.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__6298 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6298.cljs$core$IFn$_invoke$arity$14 ? fexpr__6298.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__6298.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__6299 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6299.cljs$core$IFn$_invoke$arity$15 ? fexpr__6299.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__6299.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__6300 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6300.cljs$core$IFn$_invoke$arity$16 ? fexpr__6300.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__6300.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__6301 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6301.cljs$core$IFn$_invoke$arity$17 ? fexpr__6301.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__6301.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__6302 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6302.cljs$core$IFn$_invoke$arity$18 ? fexpr__6302.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__6302.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__6303 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6303.cljs$core$IFn$_invoke$arity$19 ? fexpr__6303.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__6303.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__6304 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__6304.cljs$core$IFn$_invoke$arity$20 ? fexpr__6304.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__6304.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__6316 = arguments.length;
  switch(G__6316) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6318 = arguments.length;
      var i__4790__auto___6319 = 0;
      while (true) {
        if (i__4790__auto___6319 < len__4789__auto___6318) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6319]);
          var G__6320 = i__4790__auto___6319 + 1;
          i__4790__auto___6319 = G__6320;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__6321 = y;
        var G__6322 = cljs.core.first(more);
        var G__6323 = cljs.core.next(more);
        x = G__6321;
        y = G__6322;
        more = G__6323;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq6313) {
  var G__6314 = cljs.core.first(seq6313);
  var seq6313__$1 = cljs.core.next(seq6313);
  var G__6315 = cljs.core.first(seq6313__$1);
  var seq6313__$2 = cljs.core.next(seq6313__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6314, G__6315, seq6313__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6324 = n + 1;
      var G__6325 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6326 = cljs.core.next(coll__$1);
      n = G__6324;
      hash_code = G__6325;
      coll__$1 = G__6326;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6327 = n + 1;
      var G__6328 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6329 = cljs.core.next(coll__$1);
      n = G__6327;
      hash_code = G__6328;
      coll__$1 = G__6329;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
goog.object.set(cljs.core._count, "null", function(_) {
  return 0;
});
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    return goog.array.defaultCompare(this$__$1.valueOf(), other.valueOf());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__4487__auto__ = inst == null ? null : inst;
    var m__4488__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4488__auto__.call(null, inst);
    } else {
      var m__4485__auto__ = cljs.core.inst_ms_STAR_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4485__auto__.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
goog.object.set(cljs.core._equiv, "number", function(x, o) {
  return x === o;
});
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
goog.object.set(cljs.core._meta, "function", function(_) {
  return null;
});
goog.object.set(cljs.core.IHash, "_", true);
goog.object.set(cljs.core._hash, "_", function(o) {
  return goog.getUid(o);
});
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__6332 = arguments.length;
  switch(G__6332) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cicoll.cljs$core$IIndexed$_nth$arity$2(null, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6333 = val;
          var G__6334 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6333, G__6334) : f.call(null, G__6333, G__6334);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6338 = nval;
          var G__6339 = n + 1;
          val = G__6338;
          n = G__6339;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6335 = val__$1;
        var G__6336 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6335, G__6336) : f.call(null, G__6335, G__6336);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6340 = nval;
        var G__6341 = n + 1;
        val__$1 = G__6340;
        n = G__6341;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__6343 = arguments.length;
  switch(G__6343) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6344 = val;
          var G__6345 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6344, G__6345) : f.call(null, G__6344, G__6345);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6351 = nval;
          var G__6352 = n + 1;
          val = G__6351;
          n = G__6352;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6346 = val__$1;
        var G__6347 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6346, G__6347) : f.call(null, G__6346, G__6347);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6353 = nval;
        var G__6354 = n + 1;
        val__$1 = G__6353;
        n = G__6354;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6348 = val__$1;
        var G__6349 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6348, G__6349) : f.call(null, G__6348, G__6349);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6355 = nval;
        var G__6356 = n + 1;
        val__$1 = G__6355;
        n = G__6356;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__6360 = arguments.length;
  switch(G__6360) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4273__auto__ = 0;
      var y__4274__auto__ = start + len;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__6362 = idx + 1;
          idx = G__6362;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__6364 = arguments.length;
  switch(G__6364) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4276__auto__ = len - 1;
      var y__4277__auto__ = start;
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__6366 = idx - 1;
          idx = G__6366;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__6367 = null;
  var G__6367__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6367__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6367 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6367__1.call(this, x);
      case 2:
        return G__6367__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6367.cljs$core$IFn$_invoke$arity$1 = G__6367__1;
  G__6367.cljs$core$IFn$_invoke$arity$2 = G__6367__2;
  return G__6367;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__6368 = null;
  var G__6368__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6368__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6368 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6368__1.call(this, x);
      case 2:
        return G__6368__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6368.cljs$core$IFn$_invoke$arity$1 = G__6368__1;
  G__6368.cljs$core$IFn$_invoke$arity$2 = G__6368__2;
  return G__6368;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4273__auto__ = 0;
  var y__4274__auto__ = self__.arr.length - self__.i;
  return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
goog.object.set(cljs.core.IndexedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__6370 = arguments.length;
  switch(G__6370) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__6373 = arguments.length;
  switch(G__6373) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__6375 = null;
  var G__6375__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6375__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6375 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6375__1.call(this, x);
      case 2:
        return G__6375__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6375.cljs$core$IFn$_invoke$arity$1 = G__6375__1;
  G__6375.cljs$core$IFn$_invoke$arity$2 = G__6375__2;
  return G__6375;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__6376 = null;
  var G__6376__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6376__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6376 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6376__1.call(this, x);
      case 2:
        return G__6376__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6376.cljs$core$IFn$_invoke$arity$1 = G__6376__1;
  G__6376.cljs$core$IFn$_invoke$arity$2 = G__6376__2;
  return G__6376;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
goog.object.set(cljs.core.RSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6377 = sn;
      s = G__6377;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
goog.object.set(cljs.core._equiv, "_", function(x, o) {
  return x === o;
});
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__6382 = arguments.length;
  switch(G__6382) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6384 = arguments.length;
      var i__4790__auto___6385 = 0;
      while (true) {
        if (i__4790__auto___6385 < len__4789__auto___6384) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6385]);
          var G__6386 = i__4790__auto___6385 + 1;
          i__4790__auto___6385 = G__6386;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6387 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__6388 = cljs.core.first(xs);
      var G__6389 = cljs.core.next(xs);
      coll = G__6387;
      x = G__6388;
      xs = G__6389;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq6379) {
  var G__6380 = cljs.core.first(seq6379);
  var seq6379__$1 = cljs.core.next(seq6379);
  var G__6381 = cljs.core.first(seq6379__$1);
  var seq6379__$2 = cljs.core.next(seq6379__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6380, G__6381, seq6379__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6392 = cljs.core.next(s);
      var G__6393 = acc + 1;
      s = G__6392;
      acc = G__6393;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__6397 = arguments.length;
  switch(G__6397) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6399 = cljs.core.next(coll);
            var G__6400 = n - 1;
            coll = G__6399;
            n = G__6400;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6401 = cljs.core.next(coll);
            var G__6402 = n - 1;
            var G__6403 = not_found;
            coll = G__6401;
            n = G__6402;
            not_found = G__6403;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__6405 = arguments.length;
  switch(G__6405) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4185__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4185__auto__) {
                return or__4185__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4185__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4185__auto__) {
                return or__4185__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5751__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5751__auto__) {
      var xs__$1 = temp__5751__auto__;
      var G__6415 = n__$1 - 1;
      var G__6416 = cljs.core.rest(xs__$1);
      n__$1 = G__6415;
      xs = G__6416;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__6418 = arguments.length;
  switch(G__6418) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__6427 = arguments.length;
  switch(G__6427) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6430 = arguments.length;
      var i__4790__auto___6431 = 0;
      while (true) {
        if (i__4790__auto___6431 < len__4789__auto___6430) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6431]);
          var G__6432 = i__4790__auto___6431 + 1;
          i__4790__auto___6431 = G__6432;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(null, k, v);
  } else {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
    }
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__6433 = ret;
      var G__6434 = cljs.core.first(kvs);
      var G__6435 = cljs.core.second(kvs);
      var G__6436 = cljs.core.nnext(kvs);
      coll = G__6433;
      k = G__6434;
      v = G__6435;
      kvs = G__6436;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq6423) {
  var G__6424 = cljs.core.first(seq6423);
  var seq6423__$1 = cljs.core.next(seq6423);
  var G__6425 = cljs.core.first(seq6423__$1);
  var seq6423__$2 = cljs.core.next(seq6423__$1);
  var G__6426 = cljs.core.first(seq6423__$2);
  var seq6423__$3 = cljs.core.next(seq6423__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6424, G__6425, G__6426, seq6423__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__6441 = arguments.length;
  switch(G__6441) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6443 = arguments.length;
      var i__4790__auto___6444 = 0;
      while (true) {
        if (i__4790__auto___6444 < len__4789__auto___6443) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6444]);
          var G__6445 = i__4790__auto___6444 + 1;
          i__4790__auto___6444 = G__6445;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6446 = ret;
        var G__6447 = cljs.core.first(ks);
        var G__6448 = cljs.core.next(ks);
        coll = G__6446;
        k = G__6447;
        ks = G__6448;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq6438) {
  var G__6439 = cljs.core.first(seq6438);
  var seq6438__$1 = cljs.core.next(seq6438);
  var G__6440 = cljs.core.first(seq6438__$1);
  var seq6438__$2 = cljs.core.next(seq6438__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6439, G__6440, seq6438__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4185__auto__ = goog.isFunction(f);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__6452 = null;
  var G__6452__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6452__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__6452__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__6452__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__6452__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__6452__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__6452__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6452__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6452__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6452__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6452__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6452__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6452__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6452__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6452__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6452__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6452__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6452__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6452__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6452__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6452__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6452__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__6452 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6452__1.call(this, self__);
      case 2:
        return G__6452__2.call(this, self__, a);
      case 3:
        return G__6452__3.call(this, self__, a, b);
      case 4:
        return G__6452__4.call(this, self__, a, b, c);
      case 5:
        return G__6452__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6452__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6452__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6452__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6452__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6452__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6452__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6452__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6452__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6452__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6452__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6452__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6452__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6452__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6452__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6452__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6452__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6452__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__6452.cljs$core$IFn$_invoke$arity$1 = G__6452__1;
  G__6452.cljs$core$IFn$_invoke$arity$2 = G__6452__2;
  G__6452.cljs$core$IFn$_invoke$arity$3 = G__6452__3;
  G__6452.cljs$core$IFn$_invoke$arity$4 = G__6452__4;
  G__6452.cljs$core$IFn$_invoke$arity$5 = G__6452__5;
  G__6452.cljs$core$IFn$_invoke$arity$6 = G__6452__6;
  G__6452.cljs$core$IFn$_invoke$arity$7 = G__6452__7;
  G__6452.cljs$core$IFn$_invoke$arity$8 = G__6452__8;
  G__6452.cljs$core$IFn$_invoke$arity$9 = G__6452__9;
  G__6452.cljs$core$IFn$_invoke$arity$10 = G__6452__10;
  G__6452.cljs$core$IFn$_invoke$arity$11 = G__6452__11;
  G__6452.cljs$core$IFn$_invoke$arity$12 = G__6452__12;
  G__6452.cljs$core$IFn$_invoke$arity$13 = G__6452__13;
  G__6452.cljs$core$IFn$_invoke$arity$14 = G__6452__14;
  G__6452.cljs$core$IFn$_invoke$arity$15 = G__6452__15;
  G__6452.cljs$core$IFn$_invoke$arity$16 = G__6452__16;
  G__6452.cljs$core$IFn$_invoke$arity$17 = G__6452__17;
  G__6452.cljs$core$IFn$_invoke$arity$18 = G__6452__18;
  G__6452.cljs$core$IFn$_invoke$arity$19 = G__6452__19;
  G__6452.cljs$core$IFn$_invoke$arity$20 = G__6452__20;
  G__6452.cljs$core$IFn$_invoke$arity$21 = G__6452__21;
  G__6452.cljs$core$IFn$_invoke$arity$22 = G__6452__22;
  return G__6452;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6451) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6451)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (!(o == null) ? !(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__6459 = arguments.length;
  switch(G__6459) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6461 = arguments.length;
      var i__4790__auto___6462 = 0;
      while (true) {
        if (i__4790__auto___6462 < len__4789__auto___6461) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6462]);
          var G__6463 = i__4790__auto___6462 + 1;
          i__4790__auto___6462 = G__6463;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6464 = ret;
        var G__6465 = cljs.core.first(ks);
        var G__6466 = cljs.core.next(ks);
        coll = G__6464;
        k = G__6465;
        ks = G__6466;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq6456) {
  var G__6457 = cljs.core.first(seq6456);
  var seq6456__$1 = cljs.core.next(seq6456);
  var G__6458 = cljs.core.first(seq6456__$1);
  var seq6456__$2 = cljs.core.next(seq6456__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6457, G__6458, seq6456__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__6480 = arguments.length;
  switch(G__6480) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6484 = arguments.length;
      var i__4790__auto___6485 = 0;
      while (true) {
        if (i__4790__auto___6485 < len__4789__auto___6484) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6485]);
          var G__6486 = i__4790__auto___6485 + 1;
          i__4790__auto___6485 = G__6486;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4811__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq6479) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6479));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6487 = i__$1 + 1;
      var G__6488 = j__$1 + 1;
      var G__6489 = len__$1 - 1;
      i__$1 = G__6487;
      j__$1 = G__6488;
      len__$1 = G__6489;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6490 = i__$1 - 1;
      var G__6491 = j__$1 - 1;
      var G__6492 = len__$1 - 1;
      i__$1 = G__6490;
      j__$1 = G__6491;
      len__$1 = G__6492;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4185__auto__ = s == null;
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4185__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__6505 = arguments.length;
  switch(G__6505) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6507 = arguments.length;
      var i__4790__auto___6508 = 0;
      while (true) {
        if (i__4790__auto___6508 < len__4789__auto___6507) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6508]);
          var G__6509 = i__4790__auto___6508 + 1;
          i__4790__auto___6508 = G__6509;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__6510 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__6511 = etc;
          s = G__6510;
          xs = G__6511;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq6502) {
  var G__6503 = cljs.core.first(seq6502);
  var seq6502__$1 = cljs.core.next(seq6502);
  var G__6504 = cljs.core.first(seq6502__$1);
  var seq6502__$2 = cljs.core.next(seq6502__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6503, G__6504, seq6502__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__6514 = arguments.length;
  switch(G__6514) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__6516 = xs;
      var G__6517 = ys;
      var G__6518 = len;
      var G__6519 = n + 1;
      xs = G__6516;
      ys = G__6517;
      len = G__6518;
      n = G__6519;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__6521 = arguments.length;
  switch(G__6521) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__6524 = arguments.length;
  switch(G__6524) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__6526 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__6527 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__6525 = cljs.core.fn__GT_comparator(comp);
    return fexpr__6525.cljs$core$IFn$_invoke$arity$2 ? fexpr__6525.cljs$core$IFn$_invoke$arity$2(G__6526, G__6527) : fexpr__6525.call(null, G__6526, G__6527);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__6530 = arguments.length;
  switch(G__6530) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5751__auto__ = cljs.core.seq(coll);
  if (temp__5751__auto__) {
    var s = temp__5751__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__6531 = val__$1;
        var G__6532 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6531, G__6532) : f.call(null, G__6531, G__6532);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6534 = nval;
        var G__6535 = cljs.core.next(coll__$1);
        val__$1 = G__6534;
        coll__$1 = G__6535;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__6537 = arguments.length;
  switch(G__6537) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__6538 = acc;
          var G__6539 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6538, G__6539) : f.call(null, G__6538, G__6539);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__6543 = nacc;
          acc = G__6543;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__6540 = acc;
        var G__6541 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6540, G__6541) : f.call(null, G__6540, G__6541);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__6544 = nacc;
        acc = G__6544;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__6546 = arguments.length;
  switch(G__6546) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__6551 = arguments.length;
  switch(G__6551) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__6553 = null;
    var G__6553__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__6553__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__6553__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__6553 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__6553__0.call(this);
        case 1:
          return G__6553__1.call(this, x);
        case 2:
          return G__6553__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6553.cljs$core$IFn$_invoke$arity$0 = G__6553__0;
    G__6553.cljs$core$IFn$_invoke$arity$1 = G__6553__1;
    G__6553.cljs$core$IFn$_invoke$arity$2 = G__6553__2;
    return G__6553;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__6555 = arguments.length;
  switch(G__6555) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__6561 = arguments.length;
  switch(G__6561) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6563 = arguments.length;
      var i__4790__auto___6564 = 0;
      while (true) {
        if (i__4790__auto___6564 < len__4789__auto___6563) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6564]);
          var G__6565 = i__4790__auto___6564 + 1;
          i__4790__auto___6564 = G__6565;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq6558) {
  var G__6559 = cljs.core.first(seq6558);
  var seq6558__$1 = cljs.core.next(seq6558);
  var G__6560 = cljs.core.first(seq6558__$1);
  var seq6558__$2 = cljs.core.next(seq6558__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6559, G__6560, seq6558__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__6570 = arguments.length;
  switch(G__6570) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6572 = arguments.length;
      var i__4790__auto___6573 = 0;
      while (true) {
        if (i__4790__auto___6573 < len__4789__auto___6572) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6573]);
          var G__6574 = i__4790__auto___6573 + 1;
          i__4790__auto___6573 = G__6574;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq6567) {
  var G__6568 = cljs.core.first(seq6567);
  var seq6567__$1 = cljs.core.next(seq6567);
  var G__6569 = cljs.core.first(seq6567__$1);
  var seq6567__$2 = cljs.core.next(seq6567__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6568, G__6569, seq6567__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__6579 = arguments.length;
  switch(G__6579) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6581 = arguments.length;
      var i__4790__auto___6582 = 0;
      while (true) {
        if (i__4790__auto___6582 < len__4789__auto___6581) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6582]);
          var G__6583 = i__4790__auto___6582 + 1;
          i__4790__auto___6582 = G__6583;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq6576) {
  var G__6577 = cljs.core.first(seq6576);
  var seq6576__$1 = cljs.core.next(seq6576);
  var G__6578 = cljs.core.first(seq6576__$1);
  var seq6576__$2 = cljs.core.next(seq6576__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6577, G__6578, seq6576__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__6588 = arguments.length;
  switch(G__6588) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6590 = arguments.length;
      var i__4790__auto___6591 = 0;
      while (true) {
        if (i__4790__auto___6591 < len__4789__auto___6590) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6591]);
          var G__6592 = i__4790__auto___6591 + 1;
          i__4790__auto___6591 = G__6592;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq6585) {
  var G__6586 = cljs.core.first(seq6585);
  var seq6585__$1 = cljs.core.next(seq6585);
  var G__6587 = cljs.core.first(seq6585__$1);
  var seq6585__$2 = cljs.core.next(seq6585__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6586, G__6587, seq6585__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__6597 = arguments.length;
  switch(G__6597) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6599 = arguments.length;
      var i__4790__auto___6600 = 0;
      while (true) {
        if (i__4790__auto___6600 < len__4789__auto___6599) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6600]);
          var G__6601 = i__4790__auto___6600 + 1;
          i__4790__auto___6600 = G__6601;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__6602 = y;
        var G__6603 = cljs.core.first(more);
        var G__6604 = cljs.core.next(more);
        x = G__6602;
        y = G__6603;
        more = G__6604;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq6594) {
  var G__6595 = cljs.core.first(seq6594);
  var seq6594__$1 = cljs.core.next(seq6594);
  var G__6596 = cljs.core.first(seq6594__$1);
  var seq6594__$2 = cljs.core.next(seq6594__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6595, G__6596, seq6594__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__6609 = arguments.length;
  switch(G__6609) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6611 = arguments.length;
      var i__4790__auto___6612 = 0;
      while (true) {
        if (i__4790__auto___6612 < len__4789__auto___6611) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6612]);
          var G__6613 = i__4790__auto___6612 + 1;
          i__4790__auto___6612 = G__6613;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__6614 = y;
        var G__6615 = cljs.core.first(more);
        var G__6616 = cljs.core.next(more);
        x = G__6614;
        y = G__6615;
        more = G__6616;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq6606) {
  var G__6607 = cljs.core.first(seq6606);
  var seq6606__$1 = cljs.core.next(seq6606);
  var G__6608 = cljs.core.first(seq6606__$1);
  var seq6606__$2 = cljs.core.next(seq6606__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6607, G__6608, seq6606__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__6621 = arguments.length;
  switch(G__6621) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6623 = arguments.length;
      var i__4790__auto___6624 = 0;
      while (true) {
        if (i__4790__auto___6624 < len__4789__auto___6623) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6624]);
          var G__6625 = i__4790__auto___6624 + 1;
          i__4790__auto___6624 = G__6625;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__6626 = y;
        var G__6627 = cljs.core.first(more);
        var G__6628 = cljs.core.next(more);
        x = G__6626;
        y = G__6627;
        more = G__6628;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq6618) {
  var G__6619 = cljs.core.first(seq6618);
  var seq6618__$1 = cljs.core.next(seq6618);
  var G__6620 = cljs.core.first(seq6618__$1);
  var seq6618__$2 = cljs.core.next(seq6618__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6619, G__6620, seq6618__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__6633 = arguments.length;
  switch(G__6633) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6635 = arguments.length;
      var i__4790__auto___6636 = 0;
      while (true) {
        if (i__4790__auto___6636 < len__4789__auto___6635) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6636]);
          var G__6637 = i__4790__auto___6636 + 1;
          i__4790__auto___6636 = G__6637;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__6638 = y;
        var G__6639 = cljs.core.first(more);
        var G__6640 = cljs.core.next(more);
        x = G__6638;
        y = G__6639;
        more = G__6640;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq6630) {
  var G__6631 = cljs.core.first(seq6630);
  var seq6630__$1 = cljs.core.next(seq6630);
  var G__6632 = cljs.core.first(seq6630__$1);
  var seq6630__$2 = cljs.core.next(seq6630__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6631, G__6632, seq6630__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__6645 = arguments.length;
  switch(G__6645) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6647 = arguments.length;
      var i__4790__auto___6648 = 0;
      while (true) {
        if (i__4790__auto___6648 < len__4789__auto___6647) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6648]);
          var G__6649 = i__4790__auto___6648 + 1;
          i__4790__auto___6648 = G__6649;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4273__auto__ = x;
  var y__4274__auto__ = y;
  return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4273__auto__ = x;
    var y__4274__auto__ = y;
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq6642) {
  var G__6643 = cljs.core.first(seq6642);
  var seq6642__$1 = cljs.core.next(seq6642);
  var G__6644 = cljs.core.first(seq6642__$1);
  var seq6642__$2 = cljs.core.next(seq6642__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6643, G__6644, seq6642__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__6654 = arguments.length;
  switch(G__6654) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6656 = arguments.length;
      var i__4790__auto___6657 = 0;
      while (true) {
        if (i__4790__auto___6657 < len__4789__auto___6656) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6657]);
          var G__6658 = i__4790__auto___6657 + 1;
          i__4790__auto___6657 = G__6658;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4276__auto__ = x;
  var y__4277__auto__ = y;
  return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4276__auto__ = x;
    var y__4277__auto__ = y;
    return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq6651) {
  var G__6652 = cljs.core.first(seq6651);
  var seq6651__$1 = cljs.core.next(seq6651);
  var G__6653 = cljs.core.first(seq6651__$1);
  var seq6651__$2 = cljs.core.next(seq6651__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6652, G__6653, seq6651__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__6663 = arguments.length;
  switch(G__6663) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6665 = arguments.length;
      var i__4790__auto___6666 = 0;
      while (true) {
        if (i__4790__auto___6666 < len__4789__auto___6665) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6666]);
          var G__6667 = i__4790__auto___6666 + 1;
          i__4790__auto___6666 = G__6667;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq6660) {
  var G__6661 = cljs.core.first(seq6660);
  var seq6660__$1 = cljs.core.next(seq6660);
  var G__6662 = cljs.core.first(seq6660__$1);
  var seq6660__$2 = cljs.core.next(seq6660__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6661, G__6662, seq6660__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__6672 = arguments.length;
  switch(G__6672) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6674 = arguments.length;
      var i__4790__auto___6675 = 0;
      while (true) {
        if (i__4790__auto___6675 < len__4789__auto___6674) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6675]);
          var G__6676 = i__4790__auto___6675 + 1;
          i__4790__auto___6675 = G__6676;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq6669) {
  var G__6670 = cljs.core.first(seq6669);
  var seq6669__$1 = cljs.core.next(seq6669);
  var G__6671 = cljs.core.first(seq6669__$1);
  var seq6669__$2 = cljs.core.next(seq6669__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6670, G__6671, seq6669__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__6681 = arguments.length;
  switch(G__6681) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6683 = arguments.length;
      var i__4790__auto___6684 = 0;
      while (true) {
        if (i__4790__auto___6684 < len__4789__auto___6683) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6684]);
          var G__6685 = i__4790__auto___6684 + 1;
          i__4790__auto___6684 = G__6685;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq6678) {
  var G__6679 = cljs.core.first(seq6678);
  var seq6678__$1 = cljs.core.next(seq6678);
  var G__6680 = cljs.core.first(seq6678__$1);
  var seq6678__$2 = cljs.core.next(seq6678__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6679, G__6680, seq6678__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__6690 = arguments.length;
  switch(G__6690) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6692 = arguments.length;
      var i__4790__auto___6693 = 0;
      while (true) {
        if (i__4790__auto___6693 < len__4789__auto___6692) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6693]);
          var G__6694 = i__4790__auto___6693 + 1;
          i__4790__auto___6693 = G__6694;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq6687) {
  var G__6688 = cljs.core.first(seq6687);
  var seq6687__$1 = cljs.core.next(seq6687);
  var G__6689 = cljs.core.first(seq6687__$1);
  var seq6687__$2 = cljs.core.next(seq6687__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6688, G__6689, seq6687__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__6699 = arguments.length;
  switch(G__6699) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6701 = arguments.length;
      var i__4790__auto___6702 = 0;
      while (true) {
        if (i__4790__auto___6702 < len__4789__auto___6701) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6702]);
          var G__6703 = i__4790__auto___6702 + 1;
          i__4790__auto___6702 = G__6703;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq6696) {
  var G__6697 = cljs.core.first(seq6696);
  var seq6696__$1 = cljs.core.next(seq6696);
  var G__6698 = cljs.core.first(seq6696__$1);
  var seq6696__$2 = cljs.core.next(seq6696__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6697, G__6698, seq6696__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__6708 = arguments.length;
  switch(G__6708) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6710 = arguments.length;
      var i__4790__auto___6711 = 0;
      while (true) {
        if (i__4790__auto___6711 < len__4789__auto___6710) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6711]);
          var G__6712 = i__4790__auto___6711 + 1;
          i__4790__auto___6711 = G__6712;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq6705) {
  var G__6706 = cljs.core.first(seq6705);
  var seq6705__$1 = cljs.core.next(seq6705);
  var G__6707 = cljs.core.first(seq6705__$1);
  var seq6705__$2 = cljs.core.next(seq6705__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6706, G__6707, seq6705__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__6717 = arguments.length;
  switch(G__6717) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6719 = arguments.length;
      var i__4790__auto___6720 = 0;
      while (true) {
        if (i__4790__auto___6720 < len__4789__auto___6719) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6720]);
          var G__6721 = i__4790__auto___6720 + 1;
          i__4790__auto___6720 = G__6721;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq6714) {
  var G__6715 = cljs.core.first(seq6714);
  var seq6714__$1 = cljs.core.next(seq6714);
  var G__6716 = cljs.core.first(seq6714__$1);
  var seq6714__$2 = cljs.core.next(seq6714__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6715, G__6716, seq6714__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__6726 = arguments.length;
  switch(G__6726) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6728 = arguments.length;
      var i__4790__auto___6729 = 0;
      while (true) {
        if (i__4790__auto___6729 < len__4789__auto___6728) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6729]);
          var G__6730 = i__4790__auto___6729 + 1;
          i__4790__auto___6729 = G__6730;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq6723) {
  var G__6724 = cljs.core.first(seq6723);
  var seq6723__$1 = cljs.core.next(seq6723);
  var G__6725 = cljs.core.first(seq6723__$1);
  var seq6723__$2 = cljs.core.next(seq6723__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6724, G__6725, seq6723__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__6735 = arguments.length;
  switch(G__6735) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6737 = arguments.length;
      var i__4790__auto___6738 = 0;
      while (true) {
        if (i__4790__auto___6738 < len__4789__auto___6737) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6738]);
          var G__6739 = i__4790__auto___6738 + 1;
          i__4790__auto___6738 = G__6739;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq6732) {
  var G__6733 = cljs.core.first(seq6732);
  var seq6732__$1 = cljs.core.next(seq6732);
  var G__6734 = cljs.core.first(seq6732__$1);
  var seq6732__$2 = cljs.core.next(seq6732__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6733, G__6734, seq6732__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__6744 = arguments.length;
  switch(G__6744) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6746 = arguments.length;
      var i__4790__auto___6747 = 0;
      while (true) {
        if (i__4790__auto___6747 < len__4789__auto___6746) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6747]);
          var G__6748 = i__4790__auto___6747 + 1;
          i__4790__auto___6747 = G__6748;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq6741) {
  var G__6742 = cljs.core.first(seq6741);
  var seq6741__$1 = cljs.core.next(seq6741);
  var G__6743 = cljs.core.first(seq6741__$1);
  var seq6741__$2 = cljs.core.next(seq6741__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6742, G__6743, seq6741__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__6753 = arguments.length;
  switch(G__6753) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6755 = arguments.length;
      var i__4790__auto___6756 = 0;
      while (true) {
        if (i__4790__auto___6756 < len__4789__auto___6755) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6756]);
          var G__6757 = i__4790__auto___6756 + 1;
          i__4790__auto___6756 = G__6757;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq6750) {
  var G__6751 = cljs.core.first(seq6750);
  var seq6750__$1 = cljs.core.next(seq6750);
  var G__6752 = cljs.core.first(seq6750__$1);
  var seq6750__$2 = cljs.core.next(seq6750__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6751, G__6752, seq6750__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__6762 = arguments.length;
  switch(G__6762) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6764 = arguments.length;
      var i__4790__auto___6765 = 0;
      while (true) {
        if (i__4790__auto___6765 < len__4789__auto___6764) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6765]);
          var G__6766 = i__4790__auto___6765 + 1;
          i__4790__auto___6765 = G__6766;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__6767 = y;
        var G__6768 = cljs.core.first(more);
        var G__6769 = cljs.core.next(more);
        x = G__6767;
        y = G__6768;
        more = G__6769;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq6759) {
  var G__6760 = cljs.core.first(seq6759);
  var seq6759__$1 = cljs.core.next(seq6759);
  var G__6761 = cljs.core.first(seq6759__$1);
  var seq6759__$2 = cljs.core.next(seq6759__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6760, G__6761, seq6759__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6770 = n__$1 - 1;
      var G__6771 = cljs.core.next(xs);
      n__$1 = G__6770;
      xs = G__6771;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__6775 = arguments.length;
  switch(G__6775) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6777 = arguments.length;
      var i__4790__auto___6778 = 0;
      while (true) {
        if (i__4790__auto___6778 < len__4789__auto___6777) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6778]);
          var G__6779 = i__4790__auto___6778 + 1;
          i__4790__auto___6778 = G__6779;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__6780 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__6781 = cljs.core.next(more);
      sb = G__6780;
      more = G__6781;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq6773) {
  var G__6774 = cljs.core.first(seq6773);
  var seq6773__$1 = cljs.core.next(seq6773);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6774, seq6773__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__6783 = arguments.length;
  switch(G__6783) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6785 = cljs.core.next(xs);
            var G__6786 = cljs.core.next(ys);
            xs = G__6785;
            ys = G__6786;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6787 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6788 = cljs.core.next(s);
        res = G__6787;
        s = G__6788;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6789 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__6790 = cljs.core.next(s);
      h = G__6789;
      s = G__6790;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6791 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6792 = cljs.core.next(s__$1);
      h = G__6791;
      s__$1 = G__6792;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__6793_6809 = cljs.core.seq(fn_map);
  var chunk__6794_6810 = null;
  var count__6795_6811 = 0;
  var i__6796_6812 = 0;
  while (true) {
    if (i__6796_6812 < count__6795_6811) {
      var vec__6803_6813 = chunk__6794_6810.cljs$core$IIndexed$_nth$arity$2(null, i__6796_6812);
      var key_name_6814 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6803_6813, 0, null);
      var f_6815 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6803_6813, 1, null);
      var str_name_6816 = cljs.core.name(key_name_6814);
      goog.object.set(obj, str_name_6816, f_6815);
      var G__6817 = seq__6793_6809;
      var G__6818 = chunk__6794_6810;
      var G__6819 = count__6795_6811;
      var G__6820 = i__6796_6812 + 1;
      seq__6793_6809 = G__6817;
      chunk__6794_6810 = G__6818;
      count__6795_6811 = G__6819;
      i__6796_6812 = G__6820;
      continue;
    } else {
      var temp__5753__auto___6821 = cljs.core.seq(seq__6793_6809);
      if (temp__5753__auto___6821) {
        var seq__6793_6822__$1 = temp__5753__auto___6821;
        if (cljs.core.chunked_seq_QMARK_(seq__6793_6822__$1)) {
          var c__4609__auto___6823 = cljs.core.chunk_first(seq__6793_6822__$1);
          var G__6824 = cljs.core.chunk_rest(seq__6793_6822__$1);
          var G__6825 = c__4609__auto___6823;
          var G__6826 = cljs.core.count(c__4609__auto___6823);
          var G__6827 = 0;
          seq__6793_6809 = G__6824;
          chunk__6794_6810 = G__6825;
          count__6795_6811 = G__6826;
          i__6796_6812 = G__6827;
          continue;
        } else {
          var vec__6806_6828 = cljs.core.first(seq__6793_6822__$1);
          var key_name_6829 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6806_6828, 0, null);
          var f_6830 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6806_6828, 1, null);
          var str_name_6831 = cljs.core.name(key_name_6829);
          goog.object.set(obj, str_name_6831, f_6830);
          var G__6832 = cljs.core.next(seq__6793_6822__$1);
          var G__6833 = null;
          var G__6834 = 0;
          var G__6835 = 0;
          seq__6793_6809 = G__6832;
          chunk__6794_6810 = G__6833;
          count__6795_6811 = G__6834;
          i__6796_6812 = G__6835;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__6836 = null;
  var G__6836__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6836__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6836 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6836__1.call(this, x);
      case 2:
        return G__6836__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6836.cljs$core$IFn$_invoke$arity$1 = G__6836__1;
  G__6836.cljs$core$IFn$_invoke$arity$2 = G__6836__2;
  return G__6836;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__6837 = null;
  var G__6837__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__6837__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6837 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6837__1.call(this, x);
      case 2:
        return G__6837__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6837.cljs$core$IFn$_invoke$arity$1 = G__6837__1;
  G__6837.cljs$core$IFn$_invoke$arity$2 = G__6837__2;
  return G__6837;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
goog.object.set(cljs.core.List.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__6839 = null;
  var G__6839__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6839__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6839 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6839__1.call(this, x);
      case 2:
        return G__6839__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6839.cljs$core$IFn$_invoke$arity$1 = G__6839__1;
  G__6839.cljs$core$IFn$_invoke$arity$2 = G__6839__2;
  return G__6839;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__6840 = null;
  var G__6840__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6840__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6840 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6840__1.call(this, x);
      case 2:
        return G__6840__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6840.cljs$core$IFn$_invoke$arity$1 = G__6840__1;
  G__6840.cljs$core$IFn$_invoke$arity$2 = G__6840__2;
  return G__6840;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
goog.object.set(cljs.core.EmptyList.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4185__auto__ = cljs.core.rseq(coll);
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___6843 = arguments.length;
  var i__4790__auto___6844 = 0;
  while (true) {
    if (i__4790__auto___6844 < len__4789__auto___6843) {
      args__4795__auto__.push(arguments[i__4790__auto___6844]);
      var G__6845 = i__4790__auto___6844 + 1;
      i__4790__auto___6844 = G__6845;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__6846 = cljs.core._next(xs__$1);
        xs__$1 = G__6846;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__6847 = i - 1;
      var G__6848 = cljs.core._conj(r, arr[i - 1]);
      i = G__6847;
      r = G__6848;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq6842) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6842));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__6849 = null;
  var G__6849__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6849__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6849 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6849__1.call(this, x);
      case 2:
        return G__6849__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6849.cljs$core$IFn$_invoke$arity$1 = G__6849__1;
  G__6849.cljs$core$IFn$_invoke$arity$2 = G__6849__2;
  return G__6849;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__6850 = null;
  var G__6850__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6850__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6850 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6850__1.call(this, x);
      case 2:
        return G__6850__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6850.cljs$core$IFn$_invoke$arity$1 = G__6850__1;
  G__6850.cljs$core$IFn$_invoke$arity$2 = G__6850__2;
  return G__6850;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
goog.object.set(cljs.core.Cons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6853 = null;
  var G__6853__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6853__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6853 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6853__2.call(this, self__, coll);
      case 3:
        return G__6853__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__6853.cljs$core$IFn$_invoke$arity$2 = G__6853__2;
  G__6853.cljs$core$IFn$_invoke$arity$3 = G__6853__3;
  return G__6853;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6852) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6852)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4297__auto__ = self__._hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(cljs.core.ident_QMARK_(x) ? function() {
    var and__4174__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4174__auto__)) {
      return true;
    } else {
      return and__4174__auto__;
    }
  }() : false);
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Symbol ? function() {
    var and__4174__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4174__auto__)) {
      return true;
    } else {
      return and__4174__auto__;
    }
  }() : false);
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Keyword ? function() {
    var and__4174__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4174__auto__)) {
      return true;
    } else {
      return and__4174__auto__;
    }
  }() : false);
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__6856 = arguments.length;
  switch(G__6856) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__6858 = null;
  var G__6858__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6858__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6858 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6858__1.call(this, x);
      case 2:
        return G__6858__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6858.cljs$core$IFn$_invoke$arity$1 = G__6858__1;
  G__6858.cljs$core$IFn$_invoke$arity$2 = G__6858__2;
  return G__6858;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__6859 = null;
  var G__6859__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6859__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6859 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6859__1.call(this, x);
      case 2:
        return G__6859__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6859.cljs$core$IFn$_invoke$arity$1 = G__6859__1;
  G__6859.cljs$core$IFn$_invoke$arity$2 = G__6859__2;
  return G__6859;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6860 = ls.sval();
        ls = G__6860;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    }, null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
goog.object.set(cljs.core.LazySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__6862 = arguments.length;
  switch(G__6862) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__6864 = null;
  var G__6864__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__6864__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6864 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6864__1.call(this, x);
      case 2:
        return G__6864__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6864.cljs$core$IFn$_invoke$arity$1 = G__6864__1;
  G__6864.cljs$core$IFn$_invoke$arity$2 = G__6864__2;
  return G__6864;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__6865 = null;
  var G__6865__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__6865__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__6865 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__6865__1.call(this, x);
      case 2:
        return G__6865__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6865.cljs$core$IFn$_invoke$arity$1 = G__6865__1;
  G__6865.cljs$core$IFn$_invoke$arity$2 = G__6865__2;
  return G__6865;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
goog.object.set(cljs.core.ChunkedCons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__6867 = cljs.core.next(s);
      s = G__6867;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6868 = 0;
  var xs_6869 = cljs.core.seq(coll);
  while (true) {
    if (xs_6869 == null) {
    } else {
      ret[i_6868] = cljs.core.to_array(cljs.core.first(xs_6869));
      var G__6870 = i_6868 + 1;
      var G__6871 = cljs.core.next(xs_6869);
      i_6868 = G__6870;
      xs_6869 = G__6871;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__6873 = arguments.length;
  switch(G__6873) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__6875 = i + 1;
        var G__6876 = cljs.core.next(s__$1);
        i = G__6875;
        s__$1 = G__6876;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4666__auto___6877 = size;
    var i_6878 = 0;
    while (true) {
      if (i_6878 < n__4666__auto___6877) {
        a[i_6878] = init_val_or_seq;
        var G__6879 = i_6878 + 1;
        i_6878 = G__6879;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__6881 = arguments.length;
  switch(G__6881) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__6883 = i + 1;
        var G__6884 = cljs.core.next(s__$1);
        i = G__6883;
        s__$1 = G__6884;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4666__auto___6885 = size;
    var i_6886 = 0;
    while (true) {
      if (i_6886 < n__4666__auto___6885) {
        a[i_6886] = init_val_or_seq;
        var G__6887 = i_6886 + 1;
        i_6886 = G__6887;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__6889 = arguments.length;
  switch(G__6889) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__6891 = i + 1;
        var G__6892 = cljs.core.next(s__$1);
        i = G__6891;
        s__$1 = G__6892;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4666__auto___6893 = size;
    var i_6894 = 0;
    while (true) {
      if (i_6894 < n__4666__auto___6893) {
        a[i_6894] = init_val_or_seq;
        var G__6895 = i_6894 + 1;
        i_6894 = G__6895;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__6897 = arguments.length;
  switch(G__6897) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__6899 = i + 1;
        var G__6900 = cljs.core.next(s__$1);
        i = G__6899;
        s__$1 = G__6900;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4666__auto___6901 = size;
    var i_6902 = 0;
    while (true) {
      if (i_6902 < n__4666__auto___6901) {
        a[i_6902] = init_val_or_seq;
        var G__6903 = i_6902 + 1;
        i_6902 = G__6903;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__6904 = i + 1;
        var G__6905 = cljs.core.next(s);
        i = G__6904;
        s = G__6905;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__6910 = arguments.length;
  switch(G__6910) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6912 = arguments.length;
      var i__4790__auto___6913 = 0;
      while (true) {
        if (i__4790__auto___6913 < len__4789__auto___6912) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6913]);
          var G__6914 = i__4790__auto___6913 + 1;
          i__4790__auto___6913 = G__6914;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq6907) {
  var G__6908 = cljs.core.first(seq6907);
  var seq6907__$1 = cljs.core.next(seq6907);
  var G__6909 = cljs.core.first(seq6907__$1);
  var seq6907__$2 = cljs.core.next(seq6907__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6908, G__6909, seq6907__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__6921 = arguments.length;
  switch(G__6921) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6923 = arguments.length;
      var i__4790__auto___6924 = 0;
      while (true) {
        if (i__4790__auto___6924 < len__4789__auto___6923) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6924]);
          var G__6925 = i__4790__auto___6924 + 1;
          i__4790__auto___6924 = G__6925;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq6916) {
  var G__6917 = cljs.core.first(seq6916);
  var seq6916__$1 = cljs.core.next(seq6916);
  var G__6918 = cljs.core.first(seq6916__$1);
  var seq6916__$2 = cljs.core.next(seq6916__$1);
  var G__6919 = cljs.core.first(seq6916__$2);
  var seq6916__$3 = cljs.core.next(seq6916__$2);
  var G__6920 = cljs.core.first(seq6916__$3);
  var seq6916__$4 = cljs.core.next(seq6916__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6917, G__6918, G__6919, G__6920, seq6916__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__6930 = arguments.length;
  switch(G__6930) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6932 = arguments.length;
      var i__4790__auto___6933 = 0;
      while (true) {
        if (i__4790__auto___6933 < len__4789__auto___6932) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6933]);
          var G__6934 = i__4790__auto___6933 + 1;
          i__4790__auto___6933 = G__6934;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__6935 = ntcoll;
      var G__6936 = cljs.core.first(vals);
      var G__6937 = cljs.core.next(vals);
      tcoll = G__6935;
      val = G__6936;
      vals = G__6937;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq6927) {
  var G__6928 = cljs.core.first(seq6927);
  var seq6927__$1 = cljs.core.next(seq6927);
  var G__6929 = cljs.core.first(seq6927__$1);
  var seq6927__$2 = cljs.core.next(seq6927__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6928, G__6929, seq6927__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__6943 = arguments.length;
  switch(G__6943) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6945 = arguments.length;
      var i__4790__auto___6946 = 0;
      while (true) {
        if (i__4790__auto___6946 < len__4789__auto___6945) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6946]);
          var G__6947 = i__4790__auto___6946 + 1;
          i__4790__auto___6946 = G__6947;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__6948 = ntcoll;
      var G__6949 = cljs.core.first(kvs);
      var G__6950 = cljs.core.second(kvs);
      var G__6951 = cljs.core.nnext(kvs);
      tcoll = G__6948;
      key = G__6949;
      val = G__6950;
      kvs = G__6951;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq6939) {
  var G__6940 = cljs.core.first(seq6939);
  var seq6939__$1 = cljs.core.next(seq6939);
  var G__6941 = cljs.core.first(seq6939__$1);
  var seq6939__$2 = cljs.core.next(seq6939__$1);
  var G__6942 = cljs.core.first(seq6939__$2);
  var seq6939__$3 = cljs.core.next(seq6939__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6940, G__6941, G__6942, seq6939__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__6956 = arguments.length;
  switch(G__6956) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6958 = arguments.length;
      var i__4790__auto___6959 = 0;
      while (true) {
        if (i__4790__auto___6959 < len__4789__auto___6958) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6959]);
          var G__6960 = i__4790__auto___6959 + 1;
          i__4790__auto___6959 = G__6960;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__6961 = ntcoll;
      var G__6962 = cljs.core.first(ks);
      var G__6963 = cljs.core.next(ks);
      tcoll = G__6961;
      key = G__6962;
      ks = G__6963;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq6953) {
  var G__6954 = cljs.core.first(seq6953);
  var seq6953__$1 = cljs.core.next(seq6953);
  var G__6955 = cljs.core.first(seq6953__$1);
  var seq6953__$2 = cljs.core.next(seq6953__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6954, G__6955, seq6953__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__6968 = arguments.length;
  switch(G__6968) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6970 = arguments.length;
      var i__4790__auto___6971 = 0;
      while (true) {
        if (i__4790__auto___6971 < len__4789__auto___6970) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6971]);
          var G__6972 = i__4790__auto___6971 + 1;
          i__4790__auto___6971 = G__6972;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__6973 = ntcoll;
      var G__6974 = cljs.core.first(vals);
      var G__6975 = cljs.core.next(vals);
      tcoll = G__6973;
      val = G__6974;
      vals = G__6975;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq6965) {
  var G__6966 = cljs.core.first(seq6965);
  var seq6965__$1 = cljs.core.next(seq6965);
  var G__6967 = cljs.core.first(seq6965__$1);
  var seq6965__$2 = cljs.core.next(seq6965__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6966, G__6967, seq6965__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a254 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a254) : f.call(null, a254);
    } else {
      var b255 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a254, b255) : f.call(null, a254, b255);
      } else {
        var c256 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a254, b255, c256) : f.call(null, a254, b255, c256);
        } else {
          var d257 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a254, b255, c256, d257) : f.call(null, a254, b255, c256, d257);
          } else {
            var e258 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a254, b255, c256, d257, e258) : f.call(null, a254, b255, c256, d257, e258);
            } else {
              var f259 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a254, b255, c256, d257, e258, f259) : f.call(null, a254, b255, c256, d257, e258, f259);
              } else {
                var g260 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a254, b255, c256, d257, e258, f259, g260) : f.call(null, a254, b255, c256, d257, e258, f259, g260);
                } else {
                  var h261 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a254, b255, c256, d257, e258, f259, g260, h261) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261);
                  } else {
                    var i262 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a254, b255, c256, d257, e258, f259, g260, h261, i262) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262);
                    } else {
                      var j263 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263);
                      } else {
                        var k264 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264);
                        } else {
                          var l265 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265);
                          } else {
                            var m266 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266);
                            } else {
                              var n267 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267);
                              } else {
                                var o268 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268);
                                } else {
                                  var p269 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269);
                                  } else {
                                    var q270 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270);
                                    } else {
                                      var r271 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271);
                                      } else {
                                        var s272 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272);
                                        } else {
                                          var t273 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__6978 = arguments.length;
  switch(G__6978) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4714__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4715__auto___6980 = next_19;
                                    while (true) {
                                      if (s__4715__auto___6980) {
                                        arr__4714__auto__.push(cljs.core._first(s__4715__auto___6980));
                                        var G__6981 = cljs.core.next(s__4715__auto___6980);
                                        s__4715__auto___6980 = G__6981;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4714__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__6989 = arguments.length;
  switch(G__6989) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___6991 = arguments.length;
      var i__4790__auto___6992 = 0;
      while (true) {
        if (i__4790__auto___6992 < len__4789__auto___6991) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___6992]);
          var G__6993 = i__4790__auto___6992 + 1;
          i__4790__auto___6992 = G__6993;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4811__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq6983) {
  var G__6984 = cljs.core.first(seq6983);
  var seq6983__$1 = cljs.core.next(seq6983);
  var G__6985 = cljs.core.first(seq6983__$1);
  var seq6983__$2 = cljs.core.next(seq6983__$1);
  var G__6986 = cljs.core.first(seq6983__$2);
  var seq6983__$3 = cljs.core.next(seq6983__$2);
  var G__6987 = cljs.core.first(seq6983__$3);
  var seq6983__$4 = cljs.core.next(seq6983__$3);
  var G__6988 = cljs.core.first(seq6983__$4);
  var seq6983__$5 = cljs.core.next(seq6983__$4);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6984, G__6985, G__6986, G__6987, G__6988, seq6983__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__7002 = arguments.length;
  switch(G__7002) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7019 = arguments.length;
      var i__4790__auto___7020 = 0;
      while (true) {
        if (i__4790__auto___7020 < len__4789__auto___7019) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7020]);
          var G__7021 = i__4790__auto___7020 + 1;
          i__4790__auto___7020 = G__7021;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4811__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__7003 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7003) : f.call(null, G__7003);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__7004 = cljs.core.meta(obj);
    var G__7005 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7004, G__7005) : f.call(null, G__7004, G__7005);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__7006 = cljs.core.meta(obj);
    var G__7007 = a;
    var G__7008 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7006, G__7007, G__7008) : f.call(null, G__7006, G__7007, G__7008);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__7009 = cljs.core.meta(obj);
    var G__7010 = a;
    var G__7011 = b;
    var G__7012 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7009, G__7010, G__7011, G__7012) : f.call(null, G__7009, G__7010, G__7011, G__7012);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__7013 = cljs.core.meta(obj);
    var G__7014 = a;
    var G__7015 = b;
    var G__7016 = c;
    var G__7017 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7013, G__7014, G__7015, G__7016, G__7017) : f.call(null, G__7013, G__7014, G__7015, G__7016, G__7017);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq6995) {
  var G__6996 = cljs.core.first(seq6995);
  var seq6995__$1 = cljs.core.next(seq6995);
  var G__6997 = cljs.core.first(seq6995__$1);
  var seq6995__$2 = cljs.core.next(seq6995__$1);
  var G__6998 = cljs.core.first(seq6995__$2);
  var seq6995__$3 = cljs.core.next(seq6995__$2);
  var G__6999 = cljs.core.first(seq6995__$3);
  var seq6995__$4 = cljs.core.next(seq6995__$3);
  var G__7000 = cljs.core.first(seq6995__$4);
  var seq6995__$5 = cljs.core.next(seq6995__$4);
  var G__7001 = cljs.core.first(seq6995__$5);
  var seq6995__$6 = cljs.core.next(seq6995__$5);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__6996, G__6997, G__6998, G__6999, G__7000, G__7001, seq6995__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__7026 = arguments.length;
  switch(G__7026) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7028 = arguments.length;
      var i__4790__auto___7029 = 0;
      while (true) {
        if (i__4790__auto___7029 < len__4789__auto___7028) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7029]);
          var G__7030 = i__4790__auto___7029 + 1;
          i__4790__auto___7029 = G__7030;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq7023) {
  var G__7024 = cljs.core.first(seq7023);
  var seq7023__$1 = cljs.core.next(seq7023);
  var G__7025 = cljs.core.first(seq7023__$1);
  var seq7023__$2 = cljs.core.next(seq7023__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7024, G__7025, seq7023__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core7031 !== "undefined") {
  } else {
    cljs.core.t_cljs$core7031 = function(meta7032) {
      this.meta7032 = meta7032;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core7031.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7033, meta7032__$1) {
      var self__ = this;
      var _7033__$1 = this;
      return new cljs.core.t_cljs$core7031(meta7032__$1);
    };
    cljs.core.t_cljs$core7031.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7033) {
      var self__ = this;
      var _7033__$1 = this;
      return self__.meta7032;
    };
    cljs.core.t_cljs$core7031.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core7031.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core7031.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core7031.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta7032", "meta7032", -151061376, null)], null);
    };
    cljs.core.t_cljs$core7031.cljs$lang$type = true;
    cljs.core.t_cljs$core7031.cljs$lang$ctorStr = "cljs.core/t_cljs$core7031";
    cljs.core.t_cljs$core7031.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write(writer__4429__auto__, "cljs.core/t_cljs$core7031");
    };
    cljs.core.__GT_t_cljs$core7031 = function cljs$core$nil_iter_$___GT_t_cljs$core7031(meta7032) {
      return new cljs.core.t_cljs$core7031(meta7032);
    };
  }
  return new cljs.core.t_cljs$core7031(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__7034 = cljs.core.next(iters__$1);
        iters__$1 = G__7034;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4666__auto___7035 = self__.iters.length;
  var i_7036 = 0;
  while (true) {
    if (i_7036 < n__4666__auto___7035) {
      nexts[i_7036] = self__.iters[i_7036].next();
      var G__7037 = i_7036 + 1;
      i_7036 = G__7037;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4174__auto__)) {
            return n < 32;
          } else {
            return and__4174__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__7038 = n + 1;
          n = G__7038;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__7039 = null;
                var G__7040 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__7039, G__7040) : self__.xf.call(null, G__7039, G__7040);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
goog.object.set(cljs.core.TransformerIterator.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__7041 = function() {
      var G__7042 = null;
      var G__7042__0 = function() {
        return null;
      };
      var G__7042__1 = function(acc) {
        return acc;
      };
      var G__7042__2 = function(acc, o) {
        iterator.buffer = iterator.buffer.add(o);
        return acc;
      };
      G__7042 = function(acc, o) {
        switch(arguments.length) {
          case 0:
            return G__7042__0.call(this);
          case 1:
            return G__7042__1.call(this, acc);
          case 2:
            return G__7042__2.call(this, acc, o);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7042.cljs$core$IFn$_invoke$arity$0 = G__7042__0;
      G__7042.cljs$core$IFn$_invoke$arity$1 = G__7042__1;
      G__7042.cljs$core$IFn$_invoke$arity$2 = G__7042__2;
      return G__7042;
    }();
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7041) : xform.call(null, G__7041);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__7047 = arguments.length;
  switch(G__7047) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7049 = arguments.length;
      var i__4790__auto___7050 = 0;
      while (true) {
        if (i__4790__auto___7050 < len__4789__auto___7049) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7050]);
          var G__7051 = i__4790__auto___7050 + 1;
          i__4790__auto___7050 = G__7051;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4185__auto__ = cljs.core.seq(coll);
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4185__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4185__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq7044) {
  var G__7045 = cljs.core.first(seq7044);
  var seq7044__$1 = cljs.core.next(seq7044);
  var G__7046 = cljs.core.first(seq7044__$1);
  var seq7044__$2 = cljs.core.next(seq7044__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7045, G__7046, seq7044__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7052 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7052) : pred.call(null, G__7052);
      }())) {
        var G__7053 = pred;
        var G__7054 = cljs.core.next(coll);
        pred = G__7053;
        coll = G__7054;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var or__4185__auto__ = function() {
        var G__7056 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7056) : pred.call(null, G__7056);
      }();
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var G__7057 = pred;
        var G__7058 = cljs.core.next(s);
        pred = G__7057;
        coll = G__7058;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__7059 = null;
    var G__7059__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__7059__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__7059__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__7059__3 = function() {
      var G__7060__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7060 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7061__i = 0, G__7061__a = new Array(arguments.length - 2);
          while (G__7061__i < G__7061__a.length) {
            G__7061__a[G__7061__i] = arguments[G__7061__i + 2];
            ++G__7061__i;
          }
          zs = new cljs.core.IndexedSeq(G__7061__a, 0, null);
        }
        return G__7060__delegate.call(this, x, y, zs);
      };
      G__7060.cljs$lang$maxFixedArity = 2;
      G__7060.cljs$lang$applyTo = function(arglist__7062) {
        var x = cljs.core.first(arglist__7062);
        arglist__7062 = cljs.core.next(arglist__7062);
        var y = cljs.core.first(arglist__7062);
        var zs = cljs.core.rest(arglist__7062);
        return G__7060__delegate(x, y, zs);
      };
      G__7060.cljs$core$IFn$_invoke$arity$variadic = G__7060__delegate;
      return G__7060;
    }();
    G__7059 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7059__0.call(this);
        case 1:
          return G__7059__1.call(this, x);
        case 2:
          return G__7059__2.call(this, x, y);
        default:
          var G__7063 = null;
          if (arguments.length > 2) {
            var G__7064__i = 0, G__7064__a = new Array(arguments.length - 2);
            while (G__7064__i < G__7064__a.length) {
              G__7064__a[G__7064__i] = arguments[G__7064__i + 2];
              ++G__7064__i;
            }
            G__7063 = new cljs.core.IndexedSeq(G__7064__a, 0, null);
          }
          return G__7059__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7063);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7059.cljs$lang$maxFixedArity = 2;
    G__7059.cljs$lang$applyTo = G__7059__3.cljs$lang$applyTo;
    G__7059.cljs$core$IFn$_invoke$arity$0 = G__7059__0;
    G__7059.cljs$core$IFn$_invoke$arity$1 = G__7059__1;
    G__7059.cljs$core$IFn$_invoke$arity$2 = G__7059__2;
    G__7059.cljs$core$IFn$_invoke$arity$variadic = G__7059__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7059;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__7065__delegate = function(args) {
      return x;
    };
    var G__7065 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7066__i = 0, G__7066__a = new Array(arguments.length - 0);
        while (G__7066__i < G__7066__a.length) {
          G__7066__a[G__7066__i] = arguments[G__7066__i + 0];
          ++G__7066__i;
        }
        args = new cljs.core.IndexedSeq(G__7066__a, 0, null);
      }
      return G__7065__delegate.call(this, args);
    };
    G__7065.cljs$lang$maxFixedArity = 0;
    G__7065.cljs$lang$applyTo = function(arglist__7067) {
      var args = cljs.core.seq(arglist__7067);
      return G__7065__delegate(args);
    };
    G__7065.cljs$core$IFn$_invoke$arity$variadic = G__7065__delegate;
    return G__7065;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__7073 = arguments.length;
  switch(G__7073) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7091 = arguments.length;
      var i__4790__auto___7092 = 0;
      while (true) {
        if (i__4790__auto___7092 < len__4789__auto___7091) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7092]);
          var G__7093 = i__4790__auto___7092 + 1;
          i__4790__auto___7092 = G__7093;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__7094 = null;
    var G__7094__0 = function() {
      var G__7074 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7074) : f.call(null, G__7074);
    };
    var G__7094__1 = function(x) {
      var G__7075 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7075) : f.call(null, G__7075);
    };
    var G__7094__2 = function(x, y) {
      var G__7076 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7076) : f.call(null, G__7076);
    };
    var G__7094__3 = function(x, y, z) {
      var G__7077 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7077) : f.call(null, G__7077);
    };
    var G__7094__4 = function() {
      var G__7095__delegate = function(x, y, z, args) {
        var G__7078 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7078) : f.call(null, G__7078);
      };
      var G__7095 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7096__i = 0, G__7096__a = new Array(arguments.length - 3);
          while (G__7096__i < G__7096__a.length) {
            G__7096__a[G__7096__i] = arguments[G__7096__i + 3];
            ++G__7096__i;
          }
          args = new cljs.core.IndexedSeq(G__7096__a, 0, null);
        }
        return G__7095__delegate.call(this, x, y, z, args);
      };
      G__7095.cljs$lang$maxFixedArity = 3;
      G__7095.cljs$lang$applyTo = function(arglist__7097) {
        var x = cljs.core.first(arglist__7097);
        arglist__7097 = cljs.core.next(arglist__7097);
        var y = cljs.core.first(arglist__7097);
        arglist__7097 = cljs.core.next(arglist__7097);
        var z = cljs.core.first(arglist__7097);
        var args = cljs.core.rest(arglist__7097);
        return G__7095__delegate(x, y, z, args);
      };
      G__7095.cljs$core$IFn$_invoke$arity$variadic = G__7095__delegate;
      return G__7095;
    }();
    G__7094 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7094__0.call(this);
        case 1:
          return G__7094__1.call(this, x);
        case 2:
          return G__7094__2.call(this, x, y);
        case 3:
          return G__7094__3.call(this, x, y, z);
        default:
          var G__7098 = null;
          if (arguments.length > 3) {
            var G__7099__i = 0, G__7099__a = new Array(arguments.length - 3);
            while (G__7099__i < G__7099__a.length) {
              G__7099__a[G__7099__i] = arguments[G__7099__i + 3];
              ++G__7099__i;
            }
            G__7098 = new cljs.core.IndexedSeq(G__7099__a, 0, null);
          }
          return G__7094__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7098);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7094.cljs$lang$maxFixedArity = 3;
    G__7094.cljs$lang$applyTo = G__7094__4.cljs$lang$applyTo;
    G__7094.cljs$core$IFn$_invoke$arity$0 = G__7094__0;
    G__7094.cljs$core$IFn$_invoke$arity$1 = G__7094__1;
    G__7094.cljs$core$IFn$_invoke$arity$2 = G__7094__2;
    G__7094.cljs$core$IFn$_invoke$arity$3 = G__7094__3;
    G__7094.cljs$core$IFn$_invoke$arity$variadic = G__7094__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7094;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__7100 = null;
    var G__7100__0 = function() {
      var G__7079 = function() {
        var G__7080 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7080) : g.call(null, G__7080);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7079) : f.call(null, G__7079);
    };
    var G__7100__1 = function(x) {
      var G__7081 = function() {
        var G__7082 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7082) : g.call(null, G__7082);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7081) : f.call(null, G__7081);
    };
    var G__7100__2 = function(x, y) {
      var G__7083 = function() {
        var G__7084 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7084) : g.call(null, G__7084);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7083) : f.call(null, G__7083);
    };
    var G__7100__3 = function(x, y, z) {
      var G__7085 = function() {
        var G__7086 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7086) : g.call(null, G__7086);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7085) : f.call(null, G__7085);
    };
    var G__7100__4 = function() {
      var G__7101__delegate = function(x, y, z, args) {
        var G__7087 = function() {
          var G__7088 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7088) : g.call(null, G__7088);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7087) : f.call(null, G__7087);
      };
      var G__7101 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7102__i = 0, G__7102__a = new Array(arguments.length - 3);
          while (G__7102__i < G__7102__a.length) {
            G__7102__a[G__7102__i] = arguments[G__7102__i + 3];
            ++G__7102__i;
          }
          args = new cljs.core.IndexedSeq(G__7102__a, 0, null);
        }
        return G__7101__delegate.call(this, x, y, z, args);
      };
      G__7101.cljs$lang$maxFixedArity = 3;
      G__7101.cljs$lang$applyTo = function(arglist__7103) {
        var x = cljs.core.first(arglist__7103);
        arglist__7103 = cljs.core.next(arglist__7103);
        var y = cljs.core.first(arglist__7103);
        arglist__7103 = cljs.core.next(arglist__7103);
        var z = cljs.core.first(arglist__7103);
        var args = cljs.core.rest(arglist__7103);
        return G__7101__delegate(x, y, z, args);
      };
      G__7101.cljs$core$IFn$_invoke$arity$variadic = G__7101__delegate;
      return G__7101;
    }();
    G__7100 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7100__0.call(this);
        case 1:
          return G__7100__1.call(this, x);
        case 2:
          return G__7100__2.call(this, x, y);
        case 3:
          return G__7100__3.call(this, x, y, z);
        default:
          var G__7104 = null;
          if (arguments.length > 3) {
            var G__7105__i = 0, G__7105__a = new Array(arguments.length - 3);
            while (G__7105__i < G__7105__a.length) {
              G__7105__a[G__7105__i] = arguments[G__7105__i + 3];
              ++G__7105__i;
            }
            G__7104 = new cljs.core.IndexedSeq(G__7105__a, 0, null);
          }
          return G__7100__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7104);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7100.cljs$lang$maxFixedArity = 3;
    G__7100.cljs$lang$applyTo = G__7100__4.cljs$lang$applyTo;
    G__7100.cljs$core$IFn$_invoke$arity$0 = G__7100__0;
    G__7100.cljs$core$IFn$_invoke$arity$1 = G__7100__1;
    G__7100.cljs$core$IFn$_invoke$arity$2 = G__7100__2;
    G__7100.cljs$core$IFn$_invoke$arity$3 = G__7100__3;
    G__7100.cljs$core$IFn$_invoke$arity$variadic = G__7100__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7100;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function() {
    var G__7106__delegate = function(args) {
      var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
      var fs__$2 = cljs.core.next(fs__$1);
      while (true) {
        if (fs__$2) {
          var G__7107 = function() {
            var fexpr__7089 = cljs.core.first(fs__$2);
            return fexpr__7089.cljs$core$IFn$_invoke$arity$1 ? fexpr__7089.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__7089.call(null, ret);
          }();
          var G__7108 = cljs.core.next(fs__$2);
          ret = G__7107;
          fs__$2 = G__7108;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__7106 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7109__i = 0, G__7109__a = new Array(arguments.length - 0);
        while (G__7109__i < G__7109__a.length) {
          G__7109__a[G__7109__i] = arguments[G__7109__i + 0];
          ++G__7109__i;
        }
        args = new cljs.core.IndexedSeq(G__7109__a, 0, null);
      }
      return G__7106__delegate.call(this, args);
    };
    G__7106.cljs$lang$maxFixedArity = 0;
    G__7106.cljs$lang$applyTo = function(arglist__7110) {
      var args = cljs.core.seq(arglist__7110);
      return G__7106__delegate(args);
    };
    G__7106.cljs$core$IFn$_invoke$arity$variadic = G__7106__delegate;
    return G__7106;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(seq7069) {
  var G__7070 = cljs.core.first(seq7069);
  var seq7069__$1 = cljs.core.next(seq7069);
  var G__7071 = cljs.core.first(seq7069__$1);
  var seq7069__$2 = cljs.core.next(seq7069__$1);
  var G__7072 = cljs.core.first(seq7069__$2);
  var seq7069__$3 = cljs.core.next(seq7069__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7070, G__7071, G__7072, seq7069__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__7117 = arguments.length;
  switch(G__7117) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7119 = arguments.length;
      var i__4790__auto___7120 = 0;
      while (true) {
        if (i__4790__auto___7120 < len__4789__auto___7119) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7120]);
          var G__7121 = i__4790__auto___7120 + 1;
          i__4790__auto___7120 = G__7121;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__7122 = null;
    var G__7122__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__7122__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__7122__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__7122__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__7122__4 = function() {
      var G__7123__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__7123 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7124__i = 0, G__7124__a = new Array(arguments.length - 3);
          while (G__7124__i < G__7124__a.length) {
            G__7124__a[G__7124__i] = arguments[G__7124__i + 3];
            ++G__7124__i;
          }
          args = new cljs.core.IndexedSeq(G__7124__a, 0, null);
        }
        return G__7123__delegate.call(this, x, y, z, args);
      };
      G__7123.cljs$lang$maxFixedArity = 3;
      G__7123.cljs$lang$applyTo = function(arglist__7125) {
        var x = cljs.core.first(arglist__7125);
        arglist__7125 = cljs.core.next(arglist__7125);
        var y = cljs.core.first(arglist__7125);
        arglist__7125 = cljs.core.next(arglist__7125);
        var z = cljs.core.first(arglist__7125);
        var args = cljs.core.rest(arglist__7125);
        return G__7123__delegate(x, y, z, args);
      };
      G__7123.cljs$core$IFn$_invoke$arity$variadic = G__7123__delegate;
      return G__7123;
    }();
    G__7122 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7122__0.call(this);
        case 1:
          return G__7122__1.call(this, x);
        case 2:
          return G__7122__2.call(this, x, y);
        case 3:
          return G__7122__3.call(this, x, y, z);
        default:
          var G__7126 = null;
          if (arguments.length > 3) {
            var G__7127__i = 0, G__7127__a = new Array(arguments.length - 3);
            while (G__7127__i < G__7127__a.length) {
              G__7127__a[G__7127__i] = arguments[G__7127__i + 3];
              ++G__7127__i;
            }
            G__7126 = new cljs.core.IndexedSeq(G__7127__a, 0, null);
          }
          return G__7122__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7126);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7122.cljs$lang$maxFixedArity = 3;
    G__7122.cljs$lang$applyTo = G__7122__4.cljs$lang$applyTo;
    G__7122.cljs$core$IFn$_invoke$arity$0 = G__7122__0;
    G__7122.cljs$core$IFn$_invoke$arity$1 = G__7122__1;
    G__7122.cljs$core$IFn$_invoke$arity$2 = G__7122__2;
    G__7122.cljs$core$IFn$_invoke$arity$3 = G__7122__3;
    G__7122.cljs$core$IFn$_invoke$arity$variadic = G__7122__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7122;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__7128 = null;
    var G__7128__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__7128__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__7128__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__7128__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__7128__4 = function() {
      var G__7129__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__7129 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7130__i = 0, G__7130__a = new Array(arguments.length - 3);
          while (G__7130__i < G__7130__a.length) {
            G__7130__a[G__7130__i] = arguments[G__7130__i + 3];
            ++G__7130__i;
          }
          args = new cljs.core.IndexedSeq(G__7130__a, 0, null);
        }
        return G__7129__delegate.call(this, x, y, z, args);
      };
      G__7129.cljs$lang$maxFixedArity = 3;
      G__7129.cljs$lang$applyTo = function(arglist__7131) {
        var x = cljs.core.first(arglist__7131);
        arglist__7131 = cljs.core.next(arglist__7131);
        var y = cljs.core.first(arglist__7131);
        arglist__7131 = cljs.core.next(arglist__7131);
        var z = cljs.core.first(arglist__7131);
        var args = cljs.core.rest(arglist__7131);
        return G__7129__delegate(x, y, z, args);
      };
      G__7129.cljs$core$IFn$_invoke$arity$variadic = G__7129__delegate;
      return G__7129;
    }();
    G__7128 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7128__0.call(this);
        case 1:
          return G__7128__1.call(this, x);
        case 2:
          return G__7128__2.call(this, x, y);
        case 3:
          return G__7128__3.call(this, x, y, z);
        default:
          var G__7132 = null;
          if (arguments.length > 3) {
            var G__7133__i = 0, G__7133__a = new Array(arguments.length - 3);
            while (G__7133__i < G__7133__a.length) {
              G__7133__a[G__7133__i] = arguments[G__7133__i + 3];
              ++G__7133__i;
            }
            G__7132 = new cljs.core.IndexedSeq(G__7133__a, 0, null);
          }
          return G__7128__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7132);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7128.cljs$lang$maxFixedArity = 3;
    G__7128.cljs$lang$applyTo = G__7128__4.cljs$lang$applyTo;
    G__7128.cljs$core$IFn$_invoke$arity$0 = G__7128__0;
    G__7128.cljs$core$IFn$_invoke$arity$1 = G__7128__1;
    G__7128.cljs$core$IFn$_invoke$arity$2 = G__7128__2;
    G__7128.cljs$core$IFn$_invoke$arity$3 = G__7128__3;
    G__7128.cljs$core$IFn$_invoke$arity$variadic = G__7128__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7128;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__7134 = null;
    var G__7134__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__7134__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__7134__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__7134__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__7134__4 = function() {
      var G__7135__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__7135 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7136__i = 0, G__7136__a = new Array(arguments.length - 3);
          while (G__7136__i < G__7136__a.length) {
            G__7136__a[G__7136__i] = arguments[G__7136__i + 3];
            ++G__7136__i;
          }
          args = new cljs.core.IndexedSeq(G__7136__a, 0, null);
        }
        return G__7135__delegate.call(this, x, y, z, args);
      };
      G__7135.cljs$lang$maxFixedArity = 3;
      G__7135.cljs$lang$applyTo = function(arglist__7137) {
        var x = cljs.core.first(arglist__7137);
        arglist__7137 = cljs.core.next(arglist__7137);
        var y = cljs.core.first(arglist__7137);
        arglist__7137 = cljs.core.next(arglist__7137);
        var z = cljs.core.first(arglist__7137);
        var args = cljs.core.rest(arglist__7137);
        return G__7135__delegate(x, y, z, args);
      };
      G__7135.cljs$core$IFn$_invoke$arity$variadic = G__7135__delegate;
      return G__7135;
    }();
    G__7134 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7134__0.call(this);
        case 1:
          return G__7134__1.call(this, x);
        case 2:
          return G__7134__2.call(this, x, y);
        case 3:
          return G__7134__3.call(this, x, y, z);
        default:
          var G__7138 = null;
          if (arguments.length > 3) {
            var G__7139__i = 0, G__7139__a = new Array(arguments.length - 3);
            while (G__7139__i < G__7139__a.length) {
              G__7139__a[G__7139__i] = arguments[G__7139__i + 3];
              ++G__7139__i;
            }
            G__7138 = new cljs.core.IndexedSeq(G__7139__a, 0, null);
          }
          return G__7134__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7138);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7134.cljs$lang$maxFixedArity = 3;
    G__7134.cljs$lang$applyTo = G__7134__4.cljs$lang$applyTo;
    G__7134.cljs$core$IFn$_invoke$arity$0 = G__7134__0;
    G__7134.cljs$core$IFn$_invoke$arity$1 = G__7134__1;
    G__7134.cljs$core$IFn$_invoke$arity$2 = G__7134__2;
    G__7134.cljs$core$IFn$_invoke$arity$3 = G__7134__3;
    G__7134.cljs$core$IFn$_invoke$arity$variadic = G__7134__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7134;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__7140__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__7140 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7141__i = 0, G__7141__a = new Array(arguments.length - 0);
        while (G__7141__i < G__7141__a.length) {
          G__7141__a[G__7141__i] = arguments[G__7141__i + 0];
          ++G__7141__i;
        }
        args = new cljs.core.IndexedSeq(G__7141__a, 0, null);
      }
      return G__7140__delegate.call(this, args);
    };
    G__7140.cljs$lang$maxFixedArity = 0;
    G__7140.cljs$lang$applyTo = function(arglist__7142) {
      var args = cljs.core.seq(arglist__7142);
      return G__7140__delegate(args);
    };
    G__7140.cljs$core$IFn$_invoke$arity$variadic = G__7140__delegate;
    return G__7140;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq7112) {
  var G__7113 = cljs.core.first(seq7112);
  var seq7112__$1 = cljs.core.next(seq7112);
  var G__7114 = cljs.core.first(seq7112__$1);
  var seq7112__$2 = cljs.core.next(seq7112__$1);
  var G__7115 = cljs.core.first(seq7112__$2);
  var seq7112__$3 = cljs.core.next(seq7112__$2);
  var G__7116 = cljs.core.first(seq7112__$3);
  var seq7112__$4 = cljs.core.next(seq7112__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7113, G__7114, G__7115, G__7116, seq7112__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__7144 = arguments.length;
  switch(G__7144) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__7162 = null;
    var G__7162__1 = function(a) {
      var G__7145 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7145) : f.call(null, G__7145);
    };
    var G__7162__2 = function(a, b) {
      var G__7146 = a == null ? x : a;
      var G__7147 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7146, G__7147) : f.call(null, G__7146, G__7147);
    };
    var G__7162__3 = function(a, b, c) {
      var G__7148 = a == null ? x : a;
      var G__7149 = b;
      var G__7150 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7148, G__7149, G__7150) : f.call(null, G__7148, G__7149, G__7150);
    };
    var G__7162__4 = function() {
      var G__7163__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__7163 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7164__i = 0, G__7164__a = new Array(arguments.length - 3);
          while (G__7164__i < G__7164__a.length) {
            G__7164__a[G__7164__i] = arguments[G__7164__i + 3];
            ++G__7164__i;
          }
          ds = new cljs.core.IndexedSeq(G__7164__a, 0, null);
        }
        return G__7163__delegate.call(this, a, b, c, ds);
      };
      G__7163.cljs$lang$maxFixedArity = 3;
      G__7163.cljs$lang$applyTo = function(arglist__7165) {
        var a = cljs.core.first(arglist__7165);
        arglist__7165 = cljs.core.next(arglist__7165);
        var b = cljs.core.first(arglist__7165);
        arglist__7165 = cljs.core.next(arglist__7165);
        var c = cljs.core.first(arglist__7165);
        var ds = cljs.core.rest(arglist__7165);
        return G__7163__delegate(a, b, c, ds);
      };
      G__7163.cljs$core$IFn$_invoke$arity$variadic = G__7163__delegate;
      return G__7163;
    }();
    G__7162 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__7162__1.call(this, a);
        case 2:
          return G__7162__2.call(this, a, b);
        case 3:
          return G__7162__3.call(this, a, b, c);
        default:
          var G__7166 = null;
          if (arguments.length > 3) {
            var G__7167__i = 0, G__7167__a = new Array(arguments.length - 3);
            while (G__7167__i < G__7167__a.length) {
              G__7167__a[G__7167__i] = arguments[G__7167__i + 3];
              ++G__7167__i;
            }
            G__7166 = new cljs.core.IndexedSeq(G__7167__a, 0, null);
          }
          return G__7162__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7166);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7162.cljs$lang$maxFixedArity = 3;
    G__7162.cljs$lang$applyTo = G__7162__4.cljs$lang$applyTo;
    G__7162.cljs$core$IFn$_invoke$arity$1 = G__7162__1;
    G__7162.cljs$core$IFn$_invoke$arity$2 = G__7162__2;
    G__7162.cljs$core$IFn$_invoke$arity$3 = G__7162__3;
    G__7162.cljs$core$IFn$_invoke$arity$variadic = G__7162__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7162;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__7168 = null;
    var G__7168__2 = function(a, b) {
      var G__7151 = a == null ? x : a;
      var G__7152 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7151, G__7152) : f.call(null, G__7151, G__7152);
    };
    var G__7168__3 = function(a, b, c) {
      var G__7153 = a == null ? x : a;
      var G__7154 = b == null ? y : b;
      var G__7155 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7153, G__7154, G__7155) : f.call(null, G__7153, G__7154, G__7155);
    };
    var G__7168__4 = function() {
      var G__7169__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__7169 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7170__i = 0, G__7170__a = new Array(arguments.length - 3);
          while (G__7170__i < G__7170__a.length) {
            G__7170__a[G__7170__i] = arguments[G__7170__i + 3];
            ++G__7170__i;
          }
          ds = new cljs.core.IndexedSeq(G__7170__a, 0, null);
        }
        return G__7169__delegate.call(this, a, b, c, ds);
      };
      G__7169.cljs$lang$maxFixedArity = 3;
      G__7169.cljs$lang$applyTo = function(arglist__7171) {
        var a = cljs.core.first(arglist__7171);
        arglist__7171 = cljs.core.next(arglist__7171);
        var b = cljs.core.first(arglist__7171);
        arglist__7171 = cljs.core.next(arglist__7171);
        var c = cljs.core.first(arglist__7171);
        var ds = cljs.core.rest(arglist__7171);
        return G__7169__delegate(a, b, c, ds);
      };
      G__7169.cljs$core$IFn$_invoke$arity$variadic = G__7169__delegate;
      return G__7169;
    }();
    G__7168 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7168__2.call(this, a, b);
        case 3:
          return G__7168__3.call(this, a, b, c);
        default:
          var G__7172 = null;
          if (arguments.length > 3) {
            var G__7173__i = 0, G__7173__a = new Array(arguments.length - 3);
            while (G__7173__i < G__7173__a.length) {
              G__7173__a[G__7173__i] = arguments[G__7173__i + 3];
              ++G__7173__i;
            }
            G__7172 = new cljs.core.IndexedSeq(G__7173__a, 0, null);
          }
          return G__7168__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7172);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7168.cljs$lang$maxFixedArity = 3;
    G__7168.cljs$lang$applyTo = G__7168__4.cljs$lang$applyTo;
    G__7168.cljs$core$IFn$_invoke$arity$2 = G__7168__2;
    G__7168.cljs$core$IFn$_invoke$arity$3 = G__7168__3;
    G__7168.cljs$core$IFn$_invoke$arity$variadic = G__7168__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7168;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__7174 = null;
    var G__7174__2 = function(a, b) {
      var G__7156 = a == null ? x : a;
      var G__7157 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7156, G__7157) : f.call(null, G__7156, G__7157);
    };
    var G__7174__3 = function(a, b, c) {
      var G__7158 = a == null ? x : a;
      var G__7159 = b == null ? y : b;
      var G__7160 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7158, G__7159, G__7160) : f.call(null, G__7158, G__7159, G__7160);
    };
    var G__7174__4 = function() {
      var G__7175__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__7175 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7176__i = 0, G__7176__a = new Array(arguments.length - 3);
          while (G__7176__i < G__7176__a.length) {
            G__7176__a[G__7176__i] = arguments[G__7176__i + 3];
            ++G__7176__i;
          }
          ds = new cljs.core.IndexedSeq(G__7176__a, 0, null);
        }
        return G__7175__delegate.call(this, a, b, c, ds);
      };
      G__7175.cljs$lang$maxFixedArity = 3;
      G__7175.cljs$lang$applyTo = function(arglist__7177) {
        var a = cljs.core.first(arglist__7177);
        arglist__7177 = cljs.core.next(arglist__7177);
        var b = cljs.core.first(arglist__7177);
        arglist__7177 = cljs.core.next(arglist__7177);
        var c = cljs.core.first(arglist__7177);
        var ds = cljs.core.rest(arglist__7177);
        return G__7175__delegate(a, b, c, ds);
      };
      G__7175.cljs$core$IFn$_invoke$arity$variadic = G__7175__delegate;
      return G__7175;
    }();
    G__7174 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7174__2.call(this, a, b);
        case 3:
          return G__7174__3.call(this, a, b, c);
        default:
          var G__7178 = null;
          if (arguments.length > 3) {
            var G__7179__i = 0, G__7179__a = new Array(arguments.length - 3);
            while (G__7179__i < G__7179__a.length) {
              G__7179__a[G__7179__i] = arguments[G__7179__i + 3];
              ++G__7179__i;
            }
            G__7178 = new cljs.core.IndexedSeq(G__7179__a, 0, null);
          }
          return G__7174__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7178);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7174.cljs$lang$maxFixedArity = 3;
    G__7174.cljs$lang$applyTo = G__7174__4.cljs$lang$applyTo;
    G__7174.cljs$core$IFn$_invoke$arity$2 = G__7174__2;
    G__7174.cljs$core$IFn$_invoke$arity$3 = G__7174__3;
    G__7174.cljs$core$IFn$_invoke$arity$variadic = G__7174__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7174;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__7181 = arguments.length;
  switch(G__7181) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__7195 = null;
      var G__7195__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7195__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7195__2 = function(result, input) {
        var G__7182 = result;
        var G__7183 = function() {
          var G__7184 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var G__7185 = input;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7184, G__7185) : f.call(null, G__7184, G__7185);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7182, G__7183) : rf.call(null, G__7182, G__7183);
      };
      G__7195 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7195__0.call(this);
          case 1:
            return G__7195__1.call(this, result);
          case 2:
            return G__7195__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7195.cljs$core$IFn$_invoke$arity$0 = G__7195__0;
      G__7195.cljs$core$IFn$_invoke$arity$1 = G__7195__1;
      G__7195.cljs$core$IFn$_invoke$arity$2 = G__7195__2;
      return G__7195;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll__$1);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4666__auto___7196 = size;
          var i_7197 = 0;
          while (true) {
            if (i_7197 < n__4666__auto___7196) {
              cljs.core.chunk_append(b, function() {
                var G__7190 = idx + i_7197;
                var G__7191 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7197);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7190, G__7191) : f.call(null, G__7190, G__7191);
              }());
              var G__7198 = i_7197 + 1;
              i_7197 = G__7198;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__7192 = idx;
            var G__7193 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7192, G__7193) : f.call(null, G__7192, G__7193);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__7200 = arguments.length;
  switch(G__7200) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7204 = null;
      var G__7204__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7204__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7204__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__7204 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7204__0.call(this);
          case 1:
            return G__7204__1.call(this, result);
          case 2:
            return G__7204__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7204.cljs$core$IFn$_invoke$arity$0 = G__7204__0;
      G__7204.cljs$core$IFn$_invoke$arity$1 = G__7204__1;
      G__7204.cljs$core$IFn$_invoke$arity$2 = G__7204__2;
      return G__7204;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4666__auto___7205 = size;
        var i_7206 = 0;
        while (true) {
          if (i_7206 < n__4666__auto___7205) {
            var x_7207 = function() {
              var G__7201 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7206);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7201) : f.call(null, G__7201);
            }();
            if (x_7207 == null) {
            } else {
              cljs.core.chunk_append(b, x_7207);
            }
            var G__7208 = i_7206 + 1;
            i_7206 = G__7208;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__7202 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7202) : f.call(null, G__7202);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7209 = cljs.core.seq(self__.watches);
  var chunk__7210 = null;
  var count__7211 = 0;
  var i__7212 = 0;
  while (true) {
    if (i__7212 < count__7211) {
      var vec__7219 = chunk__7210.cljs$core$IIndexed$_nth$arity$2(null, i__7212);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7219, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7219, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__7225 = seq__7209;
      var G__7226 = chunk__7210;
      var G__7227 = count__7211;
      var G__7228 = i__7212 + 1;
      seq__7209 = G__7225;
      chunk__7210 = G__7226;
      count__7211 = G__7227;
      i__7212 = G__7228;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__7209);
      if (temp__5753__auto__) {
        var seq__7209__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7209__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__7209__$1);
          var G__7229 = cljs.core.chunk_rest(seq__7209__$1);
          var G__7230 = c__4609__auto__;
          var G__7231 = cljs.core.count(c__4609__auto__);
          var G__7232 = 0;
          seq__7209 = G__7229;
          chunk__7210 = G__7230;
          count__7211 = G__7231;
          i__7212 = G__7232;
          continue;
        } else {
          var vec__7222 = cljs.core.first(seq__7209__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7222, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7222, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__7233 = cljs.core.next(seq__7209__$1);
          var G__7234 = null;
          var G__7235 = 0;
          var G__7236 = 0;
          seq__7209 = G__7233;
          chunk__7210 = G__7234;
          count__7211 = G__7235;
          i__7212 = G__7236;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__7240 = arguments.length;
  switch(G__7240) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7245 = arguments.length;
      var i__4790__auto___7246 = 0;
      while (true) {
        if (i__4790__auto___7246 < len__4789__auto___7245) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7246]);
          var G__7247 = i__4790__auto___7246 + 1;
          i__4790__auto___7246 = G__7247;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__7241) {
  var map__7242 = p__7241;
  var map__7242__$1 = (!(map__7242 == null) ? map__7242.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__7242.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7242) : map__7242;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7242__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7242__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq7238) {
  var G__7239 = cljs.core.first(seq7238);
  var seq7238__$1 = cljs.core.next(seq7238);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7239, seq7238__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__7254 = arguments.length;
  switch(G__7254) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7262 = arguments.length;
      var i__4790__auto___7263 = 0;
      while (true) {
        if (i__4790__auto___7263 < len__4789__auto___7262) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7263]);
          var G__7264 = i__4790__auto___7263 + 1;
          i__4790__auto___7263 = G__7264;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7255 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7255) : f.call(null, G__7255);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7256 = a.state;
      var G__7257 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7256, G__7257) : f.call(null, G__7256, G__7257);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7258 = a.state;
      var G__7259 = x;
      var G__7260 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7258, G__7259, G__7260) : f.call(null, G__7258, G__7259, G__7260);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq7249) {
  var G__7250 = cljs.core.first(seq7249);
  var seq7249__$1 = cljs.core.next(seq7249);
  var G__7251 = cljs.core.first(seq7249__$1);
  var seq7249__$2 = cljs.core.next(seq7249__$1);
  var G__7252 = cljs.core.first(seq7249__$2);
  var seq7249__$3 = cljs.core.next(seq7249__$2);
  var G__7253 = cljs.core.first(seq7249__$3);
  var seq7249__$4 = cljs.core.next(seq7249__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7250, G__7251, G__7252, G__7253, seq7249__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__7271 = arguments.length;
  switch(G__7271) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7279 = arguments.length;
      var i__4790__auto___7280 = 0;
      while (true) {
        if (i__4790__auto___7280 < len__4789__auto___7279) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7280]);
          var G__7281 = i__4790__auto___7280 + 1;
          i__4790__auto___7280 = G__7281;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__7272 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7272) : f.call(null, G__7272);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__7273 = a.state;
    var G__7274 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7273, G__7274) : f.call(null, G__7273, G__7274);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__7275 = a.state;
    var G__7276 = x;
    var G__7277 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7275, G__7276, G__7277) : f.call(null, G__7275, G__7276, G__7277);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq7266) {
  var G__7267 = cljs.core.first(seq7266);
  var seq7266__$1 = cljs.core.next(seq7266);
  var G__7268 = cljs.core.first(seq7266__$1);
  var seq7266__$2 = cljs.core.next(seq7266__$1);
  var G__7269 = cljs.core.first(seq7266__$2);
  var seq7266__$3 = cljs.core.next(seq7266__$2);
  var G__7270 = cljs.core.first(seq7266__$3);
  var seq7266__$4 = cljs.core.next(seq7266__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7267, G__7268, G__7269, G__7270, seq7266__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__7283 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__7283) : val.call(null, G__7283);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__7285 = arguments.length;
  switch(G__7285) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__7295 = null;
      var G__7295__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7295__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7295__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__7295 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7295__0.call(this);
          case 1:
            return G__7295__1.call(this, result);
          case 2:
            return G__7295__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7295.cljs$core$IFn$_invoke$arity$0 = G__7295__0;
      G__7295.cljs$core$IFn$_invoke$arity$1 = G__7295__1;
      G__7295.cljs$core$IFn$_invoke$arity$2 = G__7295__2;
      return G__7295;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll__$1);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4666__auto___7296 = size;
          var i_7297 = 0;
          while (true) {
            if (i_7297 < n__4666__auto___7296) {
              var x_7298 = function() {
                var G__7290 = idx + i_7297;
                var G__7291 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7297);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7290, G__7291) : f.call(null, G__7290, G__7291);
              }();
              if (x_7298 == null) {
              } else {
                cljs.core.chunk_append(b, x_7298);
              }
              var G__7299 = i_7297 + 1;
              i_7297 = G__7299;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7292 = idx;
            var G__7293 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7292, G__7293) : f.call(null, G__7292, G__7293);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__7311 = arguments.length;
  switch(G__7311) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7313 = arguments.length;
      var i__4790__auto___7314 = 0;
      while (true) {
        if (i__4790__auto___7314 < len__4789__auto___7313) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7314]);
          var G__7315 = i__4790__auto___7314 + 1;
          i__4790__auto___7314 = G__7315;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__7316__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4174__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4174__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4174__auto__;
          }
        }());
      };
      var G__7316 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7317__i = 0, G__7317__a = new Array(arguments.length - 3);
          while (G__7317__i < G__7317__a.length) {
            G__7317__a[G__7317__i] = arguments[G__7317__i + 3];
            ++G__7317__i;
          }
          args = new cljs.core.IndexedSeq(G__7317__a, 0, null);
        }
        return G__7316__delegate.call(this, x, y, z, args);
      };
      G__7316.cljs$lang$maxFixedArity = 3;
      G__7316.cljs$lang$applyTo = function(arglist__7318) {
        var x = cljs.core.first(arglist__7318);
        arglist__7318 = cljs.core.next(arglist__7318);
        var y = cljs.core.first(arglist__7318);
        arglist__7318 = cljs.core.next(arglist__7318);
        var z = cljs.core.first(arglist__7318);
        var args = cljs.core.rest(arglist__7318);
        return G__7316__delegate(x, y, z, args);
      };
      G__7316.cljs$core$IFn$_invoke$arity$variadic = G__7316__delegate;
      return G__7316;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__7319 = null;
          if (arguments.length > 3) {
            var G__7320__i = 0, G__7320__a = new Array(arguments.length - 3);
            while (G__7320__i < G__7320__a.length) {
              G__7320__a[G__7320__i] = arguments[G__7320__i + 3];
              ++G__7320__i;
            }
            G__7319 = new cljs.core.IndexedSeq(G__7320__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7319);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            var and__4174__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4174__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4174__auto____$2;
            }
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            var and__4174__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4174__auto____$2)) {
              var and__4174__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4174__auto____$3)) {
                var and__4174__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4174__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4174__auto____$4;
                }
              } else {
                return and__4174__auto____$3;
              }
            } else {
              return and__4174__auto____$2;
            }
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__7321__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4174__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4174__auto__)) {
            return cljs.core.every_QMARK_(function(p1__7300_SHARP_) {
              var and__4174__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7300_SHARP_) : p1.call(null, p1__7300_SHARP_);
              if (cljs.core.truth_(and__4174__auto____$1)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7300_SHARP_) : p2.call(null, p1__7300_SHARP_);
              } else {
                return and__4174__auto____$1;
              }
            }, args);
          } else {
            return and__4174__auto__;
          }
        }());
      };
      var G__7321 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7322__i = 0, G__7322__a = new Array(arguments.length - 3);
          while (G__7322__i < G__7322__a.length) {
            G__7322__a[G__7322__i] = arguments[G__7322__i + 3];
            ++G__7322__i;
          }
          args = new cljs.core.IndexedSeq(G__7322__a, 0, null);
        }
        return G__7321__delegate.call(this, x, y, z, args);
      };
      G__7321.cljs$lang$maxFixedArity = 3;
      G__7321.cljs$lang$applyTo = function(arglist__7323) {
        var x = cljs.core.first(arglist__7323);
        arglist__7323 = cljs.core.next(arglist__7323);
        var y = cljs.core.first(arglist__7323);
        arglist__7323 = cljs.core.next(arglist__7323);
        var z = cljs.core.first(arglist__7323);
        var args = cljs.core.rest(arglist__7323);
        return G__7321__delegate(x, y, z, args);
      };
      G__7321.cljs$core$IFn$_invoke$arity$variadic = G__7321__delegate;
      return G__7321;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__7324 = null;
          if (arguments.length > 3) {
            var G__7325__i = 0, G__7325__a = new Array(arguments.length - 3);
            while (G__7325__i < G__7325__a.length) {
              G__7325__a[G__7325__i] = arguments[G__7325__i + 3];
              ++G__7325__i;
            }
            G__7324 = new cljs.core.IndexedSeq(G__7325__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7324);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            var and__4174__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4174__auto____$2)) {
              var and__4174__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4174__auto____$3)) {
                var and__4174__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4174__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4174__auto____$4;
                }
              } else {
                return and__4174__auto____$3;
              }
            } else {
              return and__4174__auto____$2;
            }
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4174__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            var and__4174__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4174__auto____$2)) {
              var and__4174__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4174__auto____$3)) {
                var and__4174__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4174__auto____$4)) {
                  var and__4174__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4174__auto____$5)) {
                    var and__4174__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4174__auto____$6)) {
                      var and__4174__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4174__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4174__auto____$7;
                      }
                    } else {
                      return and__4174__auto____$6;
                    }
                  } else {
                    return and__4174__auto____$5;
                  }
                } else {
                  return and__4174__auto____$4;
                }
              } else {
                return and__4174__auto____$3;
              }
            } else {
              return and__4174__auto____$2;
            }
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__7326__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4174__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4174__auto__)) {
            return cljs.core.every_QMARK_(function(p1__7301_SHARP_) {
              var and__4174__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7301_SHARP_) : p1.call(null, p1__7301_SHARP_);
              if (cljs.core.truth_(and__4174__auto____$1)) {
                var and__4174__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7301_SHARP_) : p2.call(null, p1__7301_SHARP_);
                if (cljs.core.truth_(and__4174__auto____$2)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7301_SHARP_) : p3.call(null, p1__7301_SHARP_);
                } else {
                  return and__4174__auto____$2;
                }
              } else {
                return and__4174__auto____$1;
              }
            }, args);
          } else {
            return and__4174__auto__;
          }
        }());
      };
      var G__7326 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7327__i = 0, G__7327__a = new Array(arguments.length - 3);
          while (G__7327__i < G__7327__a.length) {
            G__7327__a[G__7327__i] = arguments[G__7327__i + 3];
            ++G__7327__i;
          }
          args = new cljs.core.IndexedSeq(G__7327__a, 0, null);
        }
        return G__7326__delegate.call(this, x, y, z, args);
      };
      G__7326.cljs$lang$maxFixedArity = 3;
      G__7326.cljs$lang$applyTo = function(arglist__7328) {
        var x = cljs.core.first(arglist__7328);
        arglist__7328 = cljs.core.next(arglist__7328);
        var y = cljs.core.first(arglist__7328);
        arglist__7328 = cljs.core.next(arglist__7328);
        var z = cljs.core.first(arglist__7328);
        var args = cljs.core.rest(arglist__7328);
        return G__7326__delegate(x, y, z, args);
      };
      G__7326.cljs$core$IFn$_invoke$arity$variadic = G__7326__delegate;
      return G__7326;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__7329 = null;
          if (arguments.length > 3) {
            var G__7330__i = 0, G__7330__a = new Array(arguments.length - 3);
            while (G__7330__i < G__7330__a.length) {
              G__7330__a[G__7330__i] = arguments[G__7330__i + 3];
              ++G__7330__i;
            }
            G__7329 = new cljs.core.IndexedSeq(G__7330__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7329);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$epn = null;
    var cljs$core$epn__0 = function() {
      return true;
    };
    var cljs$core$epn__1 = function(x) {
      return cljs.core.every_QMARK_(function(p1__7302_SHARP_) {
        return p1__7302_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7302_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7302_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$epn__2 = function(x, y) {
      return cljs.core.every_QMARK_(function(p1__7303_SHARP_) {
        var and__4174__auto__ = p1__7303_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7303_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7303_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          return p1__7303_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7303_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7303_SHARP_.call(null, y);
        } else {
          return and__4174__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__3 = function(x, y, z) {
      return cljs.core.every_QMARK_(function(p1__7304_SHARP_) {
        var and__4174__auto__ = p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7304_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4174__auto__)) {
          var and__4174__auto____$1 = p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7304_SHARP_.call(null, y);
          if (cljs.core.truth_(and__4174__auto____$1)) {
            return p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7304_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7304_SHARP_.call(null, z);
          } else {
            return and__4174__auto____$1;
          }
        } else {
          return and__4174__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__4 = function() {
      var G__7331__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4174__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4174__auto__)) {
            return cljs.core.every_QMARK_(function(p1__7305_SHARP_) {
              return cljs.core.every_QMARK_(p1__7305_SHARP_, args);
            }, ps__$1);
          } else {
            return and__4174__auto__;
          }
        }());
      };
      var G__7331 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7332__i = 0, G__7332__a = new Array(arguments.length - 3);
          while (G__7332__i < G__7332__a.length) {
            G__7332__a[G__7332__i] = arguments[G__7332__i + 3];
            ++G__7332__i;
          }
          args = new cljs.core.IndexedSeq(G__7332__a, 0, null);
        }
        return G__7331__delegate.call(this, x, y, z, args);
      };
      G__7331.cljs$lang$maxFixedArity = 3;
      G__7331.cljs$lang$applyTo = function(arglist__7333) {
        var x = cljs.core.first(arglist__7333);
        arglist__7333 = cljs.core.next(arglist__7333);
        var y = cljs.core.first(arglist__7333);
        arglist__7333 = cljs.core.next(arglist__7333);
        var z = cljs.core.first(arglist__7333);
        var args = cljs.core.rest(arglist__7333);
        return G__7331__delegate(x, y, z, args);
      };
      G__7331.cljs$core$IFn$_invoke$arity$variadic = G__7331__delegate;
      return G__7331;
    }();
    cljs$core$epn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$epn__0.call(this);
        case 1:
          return cljs$core$epn__1.call(this, x);
        case 2:
          return cljs$core$epn__2.call(this, x, y);
        case 3:
          return cljs$core$epn__3.call(this, x, y, z);
        default:
          var G__7334 = null;
          if (arguments.length > 3) {
            var G__7335__i = 0, G__7335__a = new Array(arguments.length - 3);
            while (G__7335__i < G__7335__a.length) {
              G__7335__a[G__7335__i] = arguments[G__7335__i + 3];
              ++G__7335__i;
            }
            G__7334 = new cljs.core.IndexedSeq(G__7335__a, 0, null);
          }
          return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7334);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$epn.cljs$lang$maxFixedArity = 3;
    cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$epn;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq7307) {
  var G__7308 = cljs.core.first(seq7307);
  var seq7307__$1 = cljs.core.next(seq7307);
  var G__7309 = cljs.core.first(seq7307__$1);
  var seq7307__$2 = cljs.core.next(seq7307__$1);
  var G__7310 = cljs.core.first(seq7307__$2);
  var seq7307__$3 = cljs.core.next(seq7307__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7308, G__7309, G__7310, seq7307__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__7347 = arguments.length;
  switch(G__7347) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7349 = arguments.length;
      var i__4790__auto___7350 = 0;
      while (true) {
        if (i__4790__auto___7350 < len__4789__auto___7349) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7350]);
          var G__7351 = i__4790__auto___7350 + 1;
          i__4790__auto___7350 = G__7351;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4185__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4185__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__7352__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__7352 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7353__i = 0, G__7353__a = new Array(arguments.length - 3);
          while (G__7353__i < G__7353__a.length) {
            G__7353__a[G__7353__i] = arguments[G__7353__i + 3];
            ++G__7353__i;
          }
          args = new cljs.core.IndexedSeq(G__7353__a, 0, null);
        }
        return G__7352__delegate.call(this, x, y, z, args);
      };
      G__7352.cljs$lang$maxFixedArity = 3;
      G__7352.cljs$lang$applyTo = function(arglist__7354) {
        var x = cljs.core.first(arglist__7354);
        arglist__7354 = cljs.core.next(arglist__7354);
        var y = cljs.core.first(arglist__7354);
        arglist__7354 = cljs.core.next(arglist__7354);
        var z = cljs.core.first(arglist__7354);
        var args = cljs.core.rest(arglist__7354);
        return G__7352__delegate(x, y, z, args);
      };
      G__7352.cljs$core$IFn$_invoke$arity$variadic = G__7352__delegate;
      return G__7352;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__7355 = null;
          if (arguments.length > 3) {
            var G__7356__i = 0, G__7356__a = new Array(arguments.length - 3);
            while (G__7356__i < G__7356__a.length) {
              G__7356__a[G__7356__i] = arguments[G__7356__i + 3];
              ++G__7356__i;
            }
            G__7355 = new cljs.core.IndexedSeq(G__7356__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7355);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__7357__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(function(p1__7336_SHARP_) {
            var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7336_SHARP_) : p1.call(null, p1__7336_SHARP_);
            if (cljs.core.truth_(or__4185__auto____$1)) {
              return or__4185__auto____$1;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7336_SHARP_) : p2.call(null, p1__7336_SHARP_);
            }
          }, args);
        }
      };
      var G__7357 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7358__i = 0, G__7358__a = new Array(arguments.length - 3);
          while (G__7358__i < G__7358__a.length) {
            G__7358__a[G__7358__i] = arguments[G__7358__i + 3];
            ++G__7358__i;
          }
          args = new cljs.core.IndexedSeq(G__7358__a, 0, null);
        }
        return G__7357__delegate.call(this, x, y, z, args);
      };
      G__7357.cljs$lang$maxFixedArity = 3;
      G__7357.cljs$lang$applyTo = function(arglist__7359) {
        var x = cljs.core.first(arglist__7359);
        arglist__7359 = cljs.core.next(arglist__7359);
        var y = cljs.core.first(arglist__7359);
        arglist__7359 = cljs.core.next(arglist__7359);
        var z = cljs.core.first(arglist__7359);
        var args = cljs.core.rest(arglist__7359);
        return G__7357__delegate(x, y, z, args);
      };
      G__7357.cljs$core$IFn$_invoke$arity$variadic = G__7357__delegate;
      return G__7357;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__7360 = null;
          if (arguments.length > 3) {
            var G__7361__i = 0, G__7361__a = new Array(arguments.length - 3);
            while (G__7361__i < G__7361__a.length) {
              G__7361__a[G__7361__i] = arguments[G__7361__i + 3];
              ++G__7361__i;
            }
            G__7360 = new cljs.core.IndexedSeq(G__7361__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7360);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                var or__4185__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4185__auto____$5)) {
                  return or__4185__auto____$5;
                } else {
                  var or__4185__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4185__auto____$6)) {
                    return or__4185__auto____$6;
                  } else {
                    var or__4185__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4185__auto____$7)) {
                      return or__4185__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__7362__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(function(p1__7337_SHARP_) {
            var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7337_SHARP_) : p1.call(null, p1__7337_SHARP_);
            if (cljs.core.truth_(or__4185__auto____$1)) {
              return or__4185__auto____$1;
            } else {
              var or__4185__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7337_SHARP_) : p2.call(null, p1__7337_SHARP_);
              if (cljs.core.truth_(or__4185__auto____$2)) {
                return or__4185__auto____$2;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7337_SHARP_) : p3.call(null, p1__7337_SHARP_);
              }
            }
          }, args);
        }
      };
      var G__7362 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7363__i = 0, G__7363__a = new Array(arguments.length - 3);
          while (G__7363__i < G__7363__a.length) {
            G__7363__a[G__7363__i] = arguments[G__7363__i + 3];
            ++G__7363__i;
          }
          args = new cljs.core.IndexedSeq(G__7363__a, 0, null);
        }
        return G__7362__delegate.call(this, x, y, z, args);
      };
      G__7362.cljs$lang$maxFixedArity = 3;
      G__7362.cljs$lang$applyTo = function(arglist__7364) {
        var x = cljs.core.first(arglist__7364);
        arglist__7364 = cljs.core.next(arglist__7364);
        var y = cljs.core.first(arglist__7364);
        arglist__7364 = cljs.core.next(arglist__7364);
        var z = cljs.core.first(arglist__7364);
        var args = cljs.core.rest(arglist__7364);
        return G__7362__delegate(x, y, z, args);
      };
      G__7362.cljs$core$IFn$_invoke$arity$variadic = G__7362__delegate;
      return G__7362;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__7365 = null;
          if (arguments.length > 3) {
            var G__7366__i = 0, G__7366__a = new Array(arguments.length - 3);
            while (G__7366__i < G__7366__a.length) {
              G__7366__a[G__7366__i] = arguments[G__7366__i + 3];
              ++G__7366__i;
            }
            G__7365 = new cljs.core.IndexedSeq(G__7366__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7365);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$spn = null;
    var cljs$core$spn__0 = function() {
      return null;
    };
    var cljs$core$spn__1 = function(x) {
      return cljs.core.some(function(p1__7338_SHARP_) {
        return p1__7338_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7338_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7338_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$spn__2 = function(x, y) {
      return cljs.core.some(function(p1__7339_SHARP_) {
        var or__4185__auto__ = p1__7339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7339_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7339_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return p1__7339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7339_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7339_SHARP_.call(null, y);
        }
      }, ps__$1);
    };
    var cljs$core$spn__3 = function(x, y, z) {
      return cljs.core.some(function(p1__7340_SHARP_) {
        var or__4185__auto__ = p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7340_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7340_SHARP_.call(null, y);
          if (cljs.core.truth_(or__4185__auto____$1)) {
            return or__4185__auto____$1;
          } else {
            return p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7340_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7340_SHARP_.call(null, z);
          }
        }
      }, ps__$1);
    };
    var cljs$core$spn__4 = function() {
      var G__7367__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(function(p1__7341_SHARP_) {
            return cljs.core.some(p1__7341_SHARP_, args);
          }, ps__$1);
        }
      };
      var G__7367 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7368__i = 0, G__7368__a = new Array(arguments.length - 3);
          while (G__7368__i < G__7368__a.length) {
            G__7368__a[G__7368__i] = arguments[G__7368__i + 3];
            ++G__7368__i;
          }
          args = new cljs.core.IndexedSeq(G__7368__a, 0, null);
        }
        return G__7367__delegate.call(this, x, y, z, args);
      };
      G__7367.cljs$lang$maxFixedArity = 3;
      G__7367.cljs$lang$applyTo = function(arglist__7369) {
        var x = cljs.core.first(arglist__7369);
        arglist__7369 = cljs.core.next(arglist__7369);
        var y = cljs.core.first(arglist__7369);
        arglist__7369 = cljs.core.next(arglist__7369);
        var z = cljs.core.first(arglist__7369);
        var args = cljs.core.rest(arglist__7369);
        return G__7367__delegate(x, y, z, args);
      };
      G__7367.cljs$core$IFn$_invoke$arity$variadic = G__7367__delegate;
      return G__7367;
    }();
    cljs$core$spn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$spn__0.call(this);
        case 1:
          return cljs$core$spn__1.call(this, x);
        case 2:
          return cljs$core$spn__2.call(this, x, y);
        case 3:
          return cljs$core$spn__3.call(this, x, y, z);
        default:
          var G__7370 = null;
          if (arguments.length > 3) {
            var G__7371__i = 0, G__7371__a = new Array(arguments.length - 3);
            while (G__7371__i < G__7371__a.length) {
              G__7371__a[G__7371__i] = arguments[G__7371__i + 3];
              ++G__7371__i;
            }
            G__7370 = new cljs.core.IndexedSeq(G__7371__a, 0, null);
          }
          return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7370);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$spn.cljs$lang$maxFixedArity = 3;
    cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$spn;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq7343) {
  var G__7344 = cljs.core.first(seq7343);
  var seq7343__$1 = cljs.core.next(seq7343);
  var G__7345 = cljs.core.first(seq7343__$1);
  var seq7343__$2 = cljs.core.next(seq7343__$1);
  var G__7346 = cljs.core.first(seq7343__$2);
  var seq7343__$3 = cljs.core.next(seq7343__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7344, G__7345, G__7346, seq7343__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__7379 = arguments.length;
  switch(G__7379) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7392 = arguments.length;
      var i__4790__auto___7393 = 0;
      while (true) {
        if (i__4790__auto___7393 < len__4789__auto___7392) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7393]);
          var G__7394 = i__4790__auto___7393 + 1;
          i__4790__auto___7393 = G__7394;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7395 = null;
      var G__7395__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7395__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7395__2 = function(result, input) {
        var G__7380 = result;
        var G__7381 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7380, G__7381) : rf.call(null, G__7380, G__7381);
      };
      var G__7395__3 = function() {
        var G__7396__delegate = function(result, input, inputs) {
          var G__7382 = result;
          var G__7383 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7382, G__7383) : rf.call(null, G__7382, G__7383);
        };
        var G__7396 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__7397__i = 0, G__7397__a = new Array(arguments.length - 2);
            while (G__7397__i < G__7397__a.length) {
              G__7397__a[G__7397__i] = arguments[G__7397__i + 2];
              ++G__7397__i;
            }
            inputs = new cljs.core.IndexedSeq(G__7397__a, 0, null);
          }
          return G__7396__delegate.call(this, result, input, inputs);
        };
        G__7396.cljs$lang$maxFixedArity = 2;
        G__7396.cljs$lang$applyTo = function(arglist__7398) {
          var result = cljs.core.first(arglist__7398);
          arglist__7398 = cljs.core.next(arglist__7398);
          var input = cljs.core.first(arglist__7398);
          var inputs = cljs.core.rest(arglist__7398);
          return G__7396__delegate(result, input, inputs);
        };
        G__7396.cljs$core$IFn$_invoke$arity$variadic = G__7396__delegate;
        return G__7396;
      }();
      G__7395 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__7395__0.call(this);
          case 1:
            return G__7395__1.call(this, result);
          case 2:
            return G__7395__2.call(this, result, input);
          default:
            var G__7399 = null;
            if (arguments.length > 2) {
              var G__7400__i = 0, G__7400__a = new Array(arguments.length - 2);
              while (G__7400__i < G__7400__a.length) {
                G__7400__a[G__7400__i] = arguments[G__7400__i + 2];
                ++G__7400__i;
              }
              G__7399 = new cljs.core.IndexedSeq(G__7400__a, 0, null);
            }
            return G__7395__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__7399);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7395.cljs$lang$maxFixedArity = 2;
      G__7395.cljs$lang$applyTo = G__7395__3.cljs$lang$applyTo;
      G__7395.cljs$core$IFn$_invoke$arity$0 = G__7395__0;
      G__7395.cljs$core$IFn$_invoke$arity$1 = G__7395__1;
      G__7395.cljs$core$IFn$_invoke$arity$2 = G__7395__2;
      G__7395.cljs$core$IFn$_invoke$arity$variadic = G__7395__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__7395;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4666__auto___7401 = size;
        var i_7402 = 0;
        while (true) {
          if (i_7402 < n__4666__auto___7401) {
            cljs.core.chunk_append(b, function() {
              var G__7384 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7402);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7384) : f.call(null, G__7384);
            }());
            var G__7403 = i_7402 + 1;
            i_7402 = G__7403;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__7385 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7385) : f.call(null, G__7385);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__7386 = cljs.core.first(s1);
        var G__7387 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7386, G__7387) : f.call(null, G__7386, G__7387);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__7388 = cljs.core.first(s1);
        var G__7389 = cljs.core.first(s2);
        var G__7390 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7388, G__7389, G__7390) : f.call(null, G__7388, G__7389, G__7390);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__7372_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__7372_SHARP_);
  }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq7374) {
  var G__7375 = cljs.core.first(seq7374);
  var seq7374__$1 = cljs.core.next(seq7374);
  var G__7376 = cljs.core.first(seq7374__$1);
  var seq7374__$2 = cljs.core.next(seq7374__$1);
  var G__7377 = cljs.core.first(seq7374__$2);
  var seq7374__$3 = cljs.core.next(seq7374__$2);
  var G__7378 = cljs.core.first(seq7374__$3);
  var seq7374__$4 = cljs.core.next(seq7374__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7375, G__7376, G__7377, G__7378, seq7374__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__7405 = arguments.length;
  switch(G__7405) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__7407 = null;
      var G__7407__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7407__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7407__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
        if (!(nn > 0)) {
          return cljs.core.ensure_reduced(result__$1);
        } else {
          return result__$1;
        }
      };
      G__7407 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7407__0.call(this);
          case 1:
            return G__7407__1.call(this, result);
          case 2:
            return G__7407__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7407.cljs$core$IFn$_invoke$arity$0 = G__7407__0;
      G__7407.cljs$core$IFn$_invoke$arity$1 = G__7407__1;
      G__7407.cljs$core$IFn$_invoke$arity$2 = G__7407__2;
      return G__7407;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5753__auto__ = cljs.core.seq(coll);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__7409 = arguments.length;
  switch(G__7409) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__7411 = null;
      var G__7411__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7411__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7411__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        if (n__$1 > 0) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__7411 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7411__0.call(this);
          case 1:
            return G__7411__1.call(this, result);
          case 2:
            return G__7411__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7411.cljs$core$IFn$_invoke$arity$0 = G__7411__0;
      G__7411.cljs$core$IFn$_invoke$arity$1 = G__7411__1;
      G__7411.cljs$core$IFn$_invoke$arity$2 = G__7411__2;
      return G__7411;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__7412 = n__$1 - 1;
        var G__7413 = cljs.core.rest(s);
        n__$1 = G__7412;
        coll__$1 = G__7413;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__7415 = arguments.length;
  switch(G__7415) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__7417 = cljs.core.next(s);
      var G__7418 = cljs.core.next(lead);
      s = G__7417;
      lead = G__7418;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__7420 = arguments.length;
  switch(G__7420) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function() {
      var G__7424 = null;
      var G__7424__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7424__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7424__2 = function(result, input) {
        var drop_QMARK_ = cljs.core.deref(da);
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = drop_QMARK_;
          if (cljs.core.truth_(and__4174__auto__)) {
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
          } else {
            return and__4174__auto__;
          }
        }())) {
          return result;
        } else {
          cljs.core.vreset_BANG_(da, null);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__7424 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7424__0.call(this);
          case 1:
            return G__7424__1.call(this, result);
          case 2:
            return G__7424__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7424.cljs$core$IFn$_invoke$arity$0 = G__7424__0;
      G__7424.cljs$core$IFn$_invoke$arity$1 = G__7424__1;
      G__7424.cljs$core$IFn$_invoke$arity$2 = G__7424__2;
      return G__7424;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = s;
        if (and__4174__auto__) {
          var G__7422 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__7422) : pred__$1.call(null, G__7422);
        } else {
          return and__4174__auto__;
        }
      }())) {
        var G__7425 = pred__$1;
        var G__7426 = cljs.core.rest(s);
        pred__$1 = G__7425;
        coll__$1 = G__7426;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5751__auto___7433 = cljs.core.next(self__.prev);
    if (temp__5751__auto___7433) {
      var c_7434 = temp__5751__auto___7433;
      self__.current = c_7434;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4185__auto__ = cljs.core.next(s);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__7429 = ret;
      var G__7430 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7429, G__7430) : f.call(null, G__7429, G__7430);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__7435 = s__$1;
      var G__7436 = ret__$1;
      s = G__7435;
      ret = G__7436;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__7431 = ret;
      var G__7432 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7431, G__7432) : f.call(null, G__7431, G__7432);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__7437 = function() {
        var or__4185__auto__ = cljs.core.next(s);
        if (or__4185__auto__) {
          return or__4185__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__7438 = ret__$1;
      s = G__7437;
      ret = G__7438;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5751__auto__ = cljs.core.seq(coll);
  if (temp__5751__auto__) {
    var vals = temp__5751__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__7439 = null;
  var G__7439__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7439__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7439 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7439__1.call(this, x);
      case 2:
        return G__7439__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7439.cljs$core$IFn$_invoke$arity$1 = G__7439__1;
  G__7439.cljs$core$IFn$_invoke$arity$2 = G__7439__2;
  return G__7439;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__7440 = null;
  var G__7440__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__7440__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7440 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7440__1.call(this, x);
      case 2:
        return G__7440__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7440.cljs$core$IFn$_invoke$arity$1 = G__7440__1;
  G__7440.cljs$core$IFn$_invoke$arity$2 = G__7440__2;
  return G__7440;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__7441 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__7441;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__7442 = i + 1;
          var G__7443 = ret__$1;
          i = G__7442;
          ret = G__7443;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__7444 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__7444;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__7445 = i + 1;
          var G__7446 = ret__$1;
          i = G__7445;
          ret = G__7446;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__7448 = arguments.length;
  switch(G__7448) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__7451 = arguments.length;
  switch(G__7451) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__7453 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__7454 = v__$2;
      ret = G__7453;
      v__$1 = G__7454;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__7455 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__7456 = v__$2;
      ret = G__7455;
      v__$1 = G__7456;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__7461 = arguments.length;
  switch(G__7461) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7463 = arguments.length;
      var i__4790__auto___7464 = 0;
      while (true) {
        if (i__4790__auto___7464 < len__4789__auto___7463) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7464]);
          var G__7465 = i__4790__auto___7464 + 1;
          i__4790__auto___7464 = G__7465;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq7458) {
  var G__7459 = cljs.core.first(seq7458);
  var seq7458__$1 = cljs.core.next(seq7458);
  var G__7460 = cljs.core.first(seq7458__$1);
  var seq7458__$2 = cljs.core.next(seq7458__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7459, G__7460, seq7458__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__7467 = arguments.length;
  switch(G__7467) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function() {
      var G__7469 = null;
      var G__7469__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7469__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7469__2 = function(result, input) {
        if (cljs.core.truth_(cljs.core.deref(started))) {
          var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
          if (cljs.core.reduced_QMARK_(sepr)) {
            return sepr;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
          }
        } else {
          cljs.core.vreset_BANG_(started, true);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__7469 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7469__0.call(this);
          case 1:
            return G__7469__1.call(this, result);
          case 2:
            return G__7469__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7469.cljs$core$IFn$_invoke$arity$0 = G__7469__0;
      G__7469.cljs$core$IFn$_invoke$arity$1 = G__7469__1;
      G__7469.cljs$core$IFn$_invoke$arity$2 = G__7469__2;
      return G__7469;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5751__auto__ = cljs.core.seq(coll);
      if (temp__5751__auto__) {
        var coll__$1 = temp__5751__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__7473 = arguments.length;
  switch(G__7473) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7475 = arguments.length;
      var i__4790__auto___7476 = 0;
      while (true) {
        if (i__4790__auto___7476 < len__4789__auto___7475) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7476]);
          var G__7477 = i__4790__auto___7476 + 1;
          i__4790__auto___7476 = G__7477;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq7471) {
  var G__7472 = cljs.core.first(seq7471);
  var seq7471__$1 = cljs.core.next(seq7471);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7472, seq7471__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__7479 = arguments.length;
  switch(G__7479) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__7482 = null;
      var G__7482__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7482__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7482__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__7482 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7482__0.call(this);
          case 1:
            return G__7482__1.call(this, result);
          case 2:
            return G__7482__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7482.cljs$core$IFn$_invoke$arity$0 = G__7482__0;
      G__7482.cljs$core$IFn$_invoke$arity$1 = G__7482__1;
      G__7482.cljs$core$IFn$_invoke$arity$2 = G__7482__2;
      return G__7482;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4666__auto___7483 = size;
        var i_7484 = 0;
        while (true) {
          if (i_7484 < n__4666__auto___7483) {
            if (cljs.core.truth_(function() {
              var G__7480 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7484);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7480) : pred.call(null, G__7480);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7484));
            } else {
            }
            var G__7485 = i_7484 + 1;
            i_7484 = G__7485;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__7487 = arguments.length;
  switch(G__7487) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__7489_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__7489_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__7491 = arguments.length;
  switch(G__7491) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__7501 = arguments.length;
  switch(G__7501) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7503 = arguments.length;
      var i__4790__auto___7504 = 0;
      while (true) {
        if (i__4790__auto___7504 < len__4789__auto___7503) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7504]);
          var G__7505 = i__4790__auto___7504 + 1;
          i__4790__auto___7504 = G__7505;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq7496) {
  var G__7497 = cljs.core.first(seq7496);
  var seq7496__$1 = cljs.core.next(seq7496);
  var G__7498 = cljs.core.first(seq7496__$1);
  var seq7496__$2 = cljs.core.next(seq7496__$1);
  var G__7499 = cljs.core.first(seq7496__$2);
  var seq7496__$3 = cljs.core.next(seq7496__$2);
  var G__7500 = cljs.core.first(seq7496__$3);
  var seq7496__$4 = cljs.core.next(seq7496__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7497, G__7498, G__7499, G__7500, seq7496__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__7507 = arguments.length;
  switch(G__7507) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__7510 = arguments.length;
  switch(G__7510) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__7512 = sentinel;
        var G__7513 = m__$2;
        var G__7514 = cljs.core.next(ks__$1);
        sentinel = G__7512;
        m__$1 = G__7513;
        ks__$1 = G__7514;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__7515, v) {
  var vec__7516 = p__7515;
  var seq__7517 = cljs.core.seq(vec__7516);
  var first__7518 = cljs.core.first(seq__7517);
  var seq__7517__$1 = cljs.core.next(seq__7517);
  var k = first__7518;
  var ks = seq__7517__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7520 = ks;
      var G__7521 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__7519, G__7520, G__7521) : cljs.core.assoc_in.call(null, G__7519, G__7520, G__7521);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__7530 = arguments.length;
  switch(G__7530) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7562 = arguments.length;
      var i__4790__auto___7563 = 0;
      while (true) {
        if (i__4790__auto___7563 < len__4789__auto___7562) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7563]);
          var G__7564 = i__4790__auto___7563 + 1;
          i__4790__auto___7563 = G__7564;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4811__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__7531, f) {
  var vec__7532 = p__7531;
  var seq__7533 = cljs.core.seq(vec__7532);
  var first__7534 = cljs.core.first(seq__7533);
  var seq__7533__$1 = cljs.core.next(seq__7533);
  var k = first__7534;
  var ks = seq__7533__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7535 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7535) : f.call(null, G__7535);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__7536, f, a) {
  var vec__7537 = p__7536;
  var seq__7538 = cljs.core.seq(vec__7537);
  var first__7539 = cljs.core.first(seq__7538);
  var seq__7538__$1 = cljs.core.next(seq__7538);
  var k = first__7539;
  var ks = seq__7538__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7540 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7541 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7540, G__7541) : f.call(null, G__7540, G__7541);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__7542, f, a, b) {
  var vec__7543 = p__7542;
  var seq__7544 = cljs.core.seq(vec__7543);
  var first__7545 = cljs.core.first(seq__7544);
  var seq__7544__$1 = cljs.core.next(seq__7544);
  var k = first__7545;
  var ks = seq__7544__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7546 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7547 = a;
      var G__7548 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7546, G__7547, G__7548) : f.call(null, G__7546, G__7547, G__7548);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__7549, f, a, b, c) {
  var vec__7550 = p__7549;
  var seq__7551 = cljs.core.seq(vec__7550);
  var first__7552 = cljs.core.first(seq__7551);
  var seq__7551__$1 = cljs.core.next(seq__7551);
  var k = first__7552;
  var ks = seq__7551__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7553 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7554 = a;
      var G__7555 = b;
      var G__7556 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7553, G__7554, G__7555, G__7556) : f.call(null, G__7553, G__7554, G__7555, G__7556);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__7557, f, a, b, c, args) {
  var vec__7558 = p__7557;
  var seq__7559 = cljs.core.seq(vec__7558);
  var first__7560 = cljs.core.first(seq__7559);
  var seq__7559__$1 = cljs.core.next(seq__7559);
  var k = first__7560;
  var ks = seq__7559__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq7523) {
  var G__7524 = cljs.core.first(seq7523);
  var seq7523__$1 = cljs.core.next(seq7523);
  var G__7525 = cljs.core.first(seq7523__$1);
  var seq7523__$2 = cljs.core.next(seq7523__$1);
  var G__7526 = cljs.core.first(seq7523__$2);
  var seq7523__$3 = cljs.core.next(seq7523__$2);
  var G__7527 = cljs.core.first(seq7523__$3);
  var seq7523__$4 = cljs.core.next(seq7523__$3);
  var G__7528 = cljs.core.first(seq7523__$4);
  var seq7523__$5 = cljs.core.next(seq7523__$4);
  var G__7529 = cljs.core.first(seq7523__$5);
  var seq7523__$6 = cljs.core.next(seq7523__$5);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7524, G__7525, G__7526, G__7527, G__7528, G__7529, seq7523__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__7573 = arguments.length;
  switch(G__7573) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___7585 = arguments.length;
      var i__4790__auto___7586 = 0;
      while (true) {
        if (i__4790__auto___7586 < len__4789__auto___7585) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___7586]);
          var G__7587 = i__4790__auto___7586 + 1;
          i__4790__auto___7586 = G__7587;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4811__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7574 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7574) : f.call(null, G__7574);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7575 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7576 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7575, G__7576) : f.call(null, G__7575, G__7576);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7577 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7578 = x;
    var G__7579 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7577, G__7578, G__7579) : f.call(null, G__7577, G__7578, G__7579);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7580 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7581 = x;
    var G__7582 = y;
    var G__7583 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7580, G__7581, G__7582, G__7583) : f.call(null, G__7580, G__7581, G__7582, G__7583);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq7566) {
  var G__7567 = cljs.core.first(seq7566);
  var seq7566__$1 = cljs.core.next(seq7566);
  var G__7568 = cljs.core.first(seq7566__$1);
  var seq7566__$2 = cljs.core.next(seq7566__$1);
  var G__7569 = cljs.core.first(seq7566__$2);
  var seq7566__$3 = cljs.core.next(seq7566__$2);
  var G__7570 = cljs.core.first(seq7566__$3);
  var seq7566__$4 = cljs.core.next(seq7566__$3);
  var G__7571 = cljs.core.first(seq7566__$4);
  var seq7566__$5 = cljs.core.next(seq7566__$4);
  var G__7572 = cljs.core.first(seq7566__$5);
  var seq7566__$6 = cljs.core.next(seq7566__$5);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7567, G__7568, G__7569, G__7570, G__7571, G__7572, seq7566__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__7588 = ll - 5;
      var G__7589 = r;
      ll = G__7588;
      ret = G__7589;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__7590 = pv;
        var G__7591 = level - 5;
        var G__7592 = child;
        var G__7593 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__7590, G__7591, G__7592, G__7593) : cljs.core.push_tail.call(null, G__7590, G__7591, G__7592, G__7593);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__7594 = cljs.core.pv_aget(node, 0);
      var G__7595 = level - 5;
      node = G__7594;
      level = G__7595;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__7596 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__7597 = level - 5;
        node = G__7596;
        level = G__7597;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__7598 = pv;
      var G__7599 = level - 5;
      var G__7600 = cljs.core.pv_aget(node, subidx);
      var G__7601 = i;
      var G__7602 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__7598, G__7599, G__7600, G__7601, G__7602) : cljs.core.do_assoc.call(null, G__7598, G__7599, G__7600, G__7601, G__7602);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__7603 = pv;
      var G__7604 = level - 5;
      var G__7605 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__7603, G__7604, G__7605) : cljs.core.pop_tail.call(null, G__7603, G__7604, G__7605);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__7607 = arguments.length;
  switch(G__7607) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__7608 = acc;
        var G__7609 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7608, G__7609) : f.call(null, G__7608, G__7609);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__7611 = nacc;
        var G__7612 = i + 1;
        var G__7613 = arr__$1;
        acc = G__7611;
        i = G__7612;
        arr = G__7613;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__7620 = null;
  var G__7620__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7620__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7620 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7620__1.call(this, x);
      case 2:
        return G__7620__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7620.cljs$core$IFn$_invoke$arity$1 = G__7620__1;
  G__7620.cljs$core$IFn$_invoke$arity$2 = G__7620__2;
  return G__7620;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__7621 = null;
  var G__7621__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7621__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7621 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7621__1.call(this, x);
      case 2:
        return G__7621__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7621.cljs$core$IFn$_invoke$arity$1 = G__7621__1;
  G__7621.cljs$core$IFn$_invoke$arity$2 = G__7621__2;
  return G__7621;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__7615 = init__$2;
              var G__7616 = j + i;
              var G__7617 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7615, G__7616, G__7617) : f.call(null, G__7615, G__7616, G__7617);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__7622 = j + 1;
              var G__7623 = init__$3;
              j = G__7622;
              init__$2 = G__7623;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__7624 = i + len;
        var G__7625 = init__$2;
        i = G__7624;
        init__$1 = G__7625;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__7618 = init__$2;
              var G__7619 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7618, G__7619) : f.call(null, G__7618, G__7619);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__7626 = j + 1;
              var G__7627 = init__$3;
              j = G__7626;
              init__$2 = G__7627;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__7628 = i + len;
        var G__7629 = init__$2;
        i = G__7628;
        init__$1 = G__7629;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4666__auto___7630 = len;
    var i_7631 = 0;
    while (true) {
      if (i_7631 < n__4666__auto___7630) {
        new_tail[i_7631] = self__.tail[i_7631];
        var G__7632 = i_7631 + 1;
        i_7631 = G__7632;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__7633 = null;
  var G__7633__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__7633__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__7633 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7633__2.call(this, self__, k);
      case 3:
        return G__7633__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7633.cljs$core$IFn$_invoke$arity$2 = G__7633__2;
  G__7633.cljs$core$IFn$_invoke$arity$3 = G__7633__3;
  return G__7633;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args7614) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7614)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__7634 = i + 1;
        var G__7635 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__7634;
        out = G__7635;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
goog.object.set(cljs.core.PersistentVector.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___7637 = arguments.length;
  var i__4790__auto___7638 = 0;
  while (true) {
    if (i__4790__auto___7638 < len__4789__auto___7637) {
      args__4795__auto__.push(arguments[i__4790__auto___7638]);
      var G__7639 = i__4790__auto___7638 + 1;
      i__4790__auto___7638 = G__7639;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, !cljs.core.array_QMARK_(args.arr));
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq7636) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7636));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__7640 = null;
  var G__7640__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7640__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7640 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7640__1.call(this, x);
      case 2:
        return G__7640__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7640.cljs$core$IFn$_invoke$arity$1 = G__7640__1;
  G__7640.cljs$core$IFn$_invoke$arity$2 = G__7640__2;
  return G__7640;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__7641 = null;
  var G__7641__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7641__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7641 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7641__1.call(this, x);
      case 2:
        return G__7641__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7641.cljs$core$IFn$_invoke$arity$1 = G__7641__1;
  G__7641.cljs$core$IFn$_invoke$arity$2 = G__7641__2;
  return G__7641;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
goog.object.set(cljs.core.ChunkedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__7643 = arguments.length;
  switch(G__7643) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__7652 = null;
  var G__7652__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7652__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__7652 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__7652__1.call(this, x);
      case 2:
        return G__7652__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7652.cljs$core$IFn$_invoke$arity$1 = G__7652__1;
  G__7652.cljs$core$IFn$_invoke$arity$2 = G__7652__2;
  return G__7652;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__7653 = null;
  var G__7653__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7653__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__7653 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__7653__1.call(this, x);
      case 2:
        return G__7653__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7653.cljs$core$IFn$_invoke$arity$1 = G__7653__1;
  G__7653.cljs$core$IFn$_invoke$arity$2 = G__7653__2;
  return G__7653;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__7646 = init__$1;
        var G__7647 = j;
        var G__7648 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7646, G__7647, G__7648) : f.call(null, G__7646, G__7647, G__7648);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__7654 = i + 1;
        var G__7655 = j + 1;
        var G__7656 = init__$2;
        i = G__7654;
        j = G__7655;
        init__$1 = G__7656;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4273__auto__ = self__.end;
      var y__4274__auto__ = v_pos + 1;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    return null;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function cljs$core$subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return cljs$core$subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__7657 = null;
  var G__7657__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__7657__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__7657 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7657__2.call(this, self__, k);
      case 3:
        return G__7657__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7657.cljs$core$IFn$_invoke$arity$2 = G__7657__2;
  G__7657.cljs$core$IFn$_invoke$arity$3 = G__7657__3;
  return G__7657;
}();
cljs.core.Subvec.prototype.apply = function(self__, args7645) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7645)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
goog.object.set(cljs.core.Subvec.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__7658 = meta;
      var G__7659 = v.v;
      var G__7660 = v.start + start;
      var G__7661 = v.start + end;
      var G__7662 = __hash;
      meta = G__7658;
      v = G__7659;
      start = G__7660;
      end = G__7661;
      __hash = G__7662;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      if (start < 0 || end < start || end > cljs.core.count(v)) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__7664 = arguments.length;
  switch(G__7664) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__7668 = tv;
      var G__7669 = level - 5;
      var G__7670 = child;
      var G__7671 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__7668, G__7669, G__7670, G__7671) : cljs.core.tv_push_tail.call(null, G__7668, G__7669, G__7670, G__7671);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__7672 = tv;
      var G__7673 = level - 5;
      var G__7674 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__7672, G__7673, G__7674) : cljs.core.tv_pop_tail.call(null, G__7672, G__7673, G__7674);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__7675 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__7676 = level - 5;
        node = G__7675;
        level = G__7676;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__7678 = function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
          return fexpr__7678(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (!self__.root.edit) {
    throw new Error("lookup after persistent!");
  } else {
    if (typeof k === "number") {
      return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
    } else {
      return not_found;
    }
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__7679 = null;
  var G__7679__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7679__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7679 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7679__2.call(this, self__, k);
      case 3:
        return G__7679__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7679.cljs$core$IFn$_invoke$arity$2 = G__7679__2;
  G__7679.cljs$core$IFn$_invoke$arity$3 = G__7679__3;
  return G__7679;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args7677) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7677)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4185__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    if (!(self__.riter == null)) {
      return self__.riter.hasNext();
    } else {
      return false;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__7680 = null;
  var G__7680__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7680__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7680 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7680__1.call(this, x);
      case 2:
        return G__7680__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7680.cljs$core$IFn$_invoke$arity$1 = G__7680__1;
  G__7680.cljs$core$IFn$_invoke$arity$2 = G__7680__2;
  return G__7680;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__7681 = null;
  var G__7681__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7681__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7681 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7681__1.call(this, x);
      case 2:
        return G__7681__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7681.cljs$core$IFn$_invoke$arity$1 = G__7681__1;
  G__7681.cljs$core$IFn$_invoke$arity$2 = G__7681__2;
  return G__7681;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core.next(self__.front);
  if (temp__5751__auto__) {
    var f1 = temp__5751__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core.next(self__.front);
  if (temp__5751__auto__) {
    var f1 = temp__5751__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
goog.object.set(cljs.core.PersistentQueueSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__7682 = null;
  var G__7682__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7682__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7682 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7682__1.call(this, x);
      case 2:
        return G__7682__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7682.cljs$core$IFn$_invoke$arity$1 = G__7682__1;
  G__7682.cljs$core$IFn$_invoke$arity$2 = G__7682__2;
  return G__7682;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__7683 = null;
  var G__7683__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__7683__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7683 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7683__1.call(this, x);
      case 2:
        return G__7683__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7683.cljs$core$IFn$_invoke$arity$1 = G__7683__1;
  G__7683.cljs$core$IFn$_invoke$arity$2 = G__7683__2;
  return G__7683;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5751__auto__ = cljs.core.next(self__.front);
    if (temp__5751__auto__) {
      var f1 = temp__5751__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = self__.front;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4185__auto__ = self__.rear;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
goog.object.set(cljs.core.PersistentQueue.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__7685 = i + incr;
        i = G__7685;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__7686 = i + 1;
      var G__7687 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__7686;
      out = G__7687;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_7690 = 0;
  while (true) {
    if (i_7690 < l) {
      var k_7691 = ks[i_7690];
      goog.object.set(new_obj, k_7691, goog.object.get(obj, k_7691));
      var G__7692 = i_7690 + 1;
      i_7690 = G__7692;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__7695 = init__$1;
        var G__7696 = k;
        var G__7697 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7695, G__7696, G__7697) : f.call(null, G__7695, G__7696, G__7697);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__7698 = cljs.core.rest(keys__$1);
        var G__7699 = init__$2;
        keys__$1 = G__7698;
        init__$1 = G__7699;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__7693_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__7693_SHARP_, self__.strobj[p1__7693_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__7700 = null;
  var G__7700__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7700__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7700 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7700__2.call(this, self__, k);
      case 3:
        return G__7700__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7700.cljs$core$IFn$_invoke$arity$2 = G__7700__2;
  G__7700.cljs$core$IFn$_invoke$arity$3 = G__7700__3;
  return G__7700;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args7694) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7694)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4185__auto__ = self__.i < self__.base_count;
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__7703 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7703, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7703, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__7706 = i + 2;
        i = G__7706;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__7707 = i + 2;
        i = G__7707;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__7708 = i + 2;
        i = G__7708;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__7709 = i + 2;
        i = G__7709;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__7710 = i + 2;
        i = G__7710;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_7711 = 0;
  while (true) {
    if (i_7711 < l) {
      narr[i_7711] = arr[i_7711];
      var G__7712 = i_7711 + 1;
      i_7711 = G__7712;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__7714 = k;
  switch(G__7714) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__7716 = null;
  var G__7716__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7716__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7716 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7716__1.call(this, x);
      case 2:
        return G__7716__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7716.cljs$core$IFn$_invoke$arity$1 = G__7716__1;
  G__7716.cljs$core$IFn$_invoke$arity$2 = G__7716__2;
  return G__7716;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__7717 = null;
  var G__7717__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7717__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7717 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7717__1.call(this, x);
      case 2:
        return G__7717__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7717.cljs$core$IFn$_invoke$arity$1 = G__7717__1;
  G__7717.cljs$core$IFn$_invoke$arity$2 = G__7717__2;
  return G__7717;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__7718 = null;
  var G__7718__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__7718__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__7718 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7718__2.call(this, self__, k);
      case 3:
        return G__7718__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7718.cljs$core$IFn$_invoke$arity$2 = G__7718__2;
  G__7718.cljs$core$IFn$_invoke$arity$3 = G__7718__3;
  return G__7718;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args7713) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7713)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__7720 = null;
  var G__7720__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7720__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7720 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7720__1.call(this, x);
      case 2:
        return G__7720__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7720.cljs$core$IFn$_invoke$arity$1 = G__7720__1;
  G__7720.cljs$core$IFn$_invoke$arity$2 = G__7720__2;
  return G__7720;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__7721 = null;
  var G__7721__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7721__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7721 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7721__1.call(this, x);
      case 2:
        return G__7721__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7721.cljs$core$IFn$_invoke$arity$1 = G__7721__1;
  G__7721.cljs$core$IFn$_invoke$arity$2 = G__7721__2;
  return G__7721;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
goog.object.set(cljs.core.PersistentArrayMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__7723 = cljs.core.seq(coll);
  var chunk__7724 = null;
  var count__7725 = 0;
  var i__7726 = 0;
  while (true) {
    if (i__7726 < count__7725) {
      var vec__7733 = chunk__7724.cljs$core$IIndexed$_nth$arity$2(null, i__7726);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7733, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7733, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__7745 = seq__7723;
      var G__7746 = chunk__7724;
      var G__7747 = count__7725;
      var G__7748 = i__7726 + 1;
      seq__7723 = G__7745;
      chunk__7724 = G__7746;
      count__7725 = G__7747;
      i__7726 = G__7748;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__7723);
      if (temp__5753__auto__) {
        var seq__7723__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7723__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__7723__$1);
          var G__7749 = cljs.core.chunk_rest(seq__7723__$1);
          var G__7750 = c__4609__auto__;
          var G__7751 = cljs.core.count(c__4609__auto__);
          var G__7752 = 0;
          seq__7723 = G__7749;
          chunk__7724 = G__7750;
          count__7725 = G__7751;
          i__7726 = G__7752;
          continue;
        } else {
          var vec__7736 = cljs.core.first(seq__7723__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7736, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7736, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__7753 = cljs.core.next(seq__7723__$1);
          var G__7754 = null;
          var G__7755 = 0;
          var G__7756 = 0;
          seq__7723 = G__7753;
          chunk__7724 = G__7754;
          count__7725 = G__7755;
          i__7726 = G__7756;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__7739 = init__$1;
        var G__7740 = self__.arr[i];
        var G__7741 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7739, G__7740, G__7741) : f.call(null, G__7739, G__7740, G__7741);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__7757 = i + 2;
        var G__7758 = init__$2;
        i = G__7757;
        init__$1 = G__7758;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__7759 = i + 2;
              i = G__7759;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__7760 = s + 2;
            var G__7761 = d;
            s = G__7760;
            d = G__7761;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__7762 = s + 2;
            var G__7763 = d + 2;
            s = G__7762;
            d = G__7763;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__7744 = cljs.core.aclone(self__.arr);
        G__7744[idx + 1] = v;
        return G__7744;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__7764 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__7765 = cljs.core.next(es);
          ret = G__7764;
          es = G__7765;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__7766 = null;
  var G__7766__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7766__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7766 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7766__2.call(this, self__, k);
      case 3:
        return G__7766__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7766.cljs$core$IFn$_invoke$arity$2 = G__7766__2;
  G__7766.cljs$core$IFn$_invoke$arity$3 = G__7766__3;
  return G__7766;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args7722) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7722)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_7767 = 0;
    while (true) {
      if (i_7767 < arr__$1.length) {
        var k_7768 = arr__$1[i_7767];
        var v_7769 = arr__$1[i_7767 + 1];
        var idx_7770 = cljs.core.array_index_of(ret, k_7768);
        if (idx_7770 === -1) {
          ret.push(k_7768);
          ret.push(v_7769);
        } else {
        }
        var G__7771 = i_7767 + 2;
        i_7767 = G__7771;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_7773 = 0;
  while (true) {
    if (i_7773 < arr.length) {
      var k_7774 = arr[i_7773];
      var v_7775 = arr[i_7773 + 1];
      var idx_7776 = cljs.core.array_index_of(ret, k_7774);
      if (idx_7776 === -1) {
        var G__7772_7777 = ret;
        G__7772_7777.push(k_7774);
        G__7772_7777.push(v_7775);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_7774)].join(""));
      }
      var G__7778 = i_7773 + 2;
      i_7773 = G__7778;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_7780 = 0;
  while (true) {
    if (i_7780 < arr.length) {
      var k_7781 = arr[i_7780];
      var v_7782 = arr[i_7780 + 1];
      var idx_7783 = cljs.core.array_index_of(ret, k_7781);
      if (idx_7783 === -1) {
        var G__7779_7784 = ret;
        G__7779_7784.push(k_7781);
        G__7779_7784.push(v_7782);
      } else {
        ret[idx_7783 + 1] = v_7782;
      }
      var G__7785 = i_7780 + 2;
      i_7780 = G__7785;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
goog.object.set(cljs.core.PersistentArrayMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5751__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var e = temp__5751__auto__;
            var G__7788 = cljs.core.next(es);
            var G__7789 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__7788;
            tcoll__$2 = G__7789;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__7787_7790 = self__.arr;
      G__7787_7790.pop();
      G__7787_7790.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__7791 = null;
  var G__7791__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__7791__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__7791 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7791__2.call(this, self__, key);
      case 3:
        return G__7791__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7791.cljs$core$IFn$_invoke$arity$2 = G__7791__2;
  G__7791.cljs$core$IFn$_invoke$arity$3 = G__7791__3;
  return G__7791;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args7786) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7786)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__7792 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__7793 = i + 2;
      out = G__7792;
      i = G__7793;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__7795 = arguments.length;
  switch(G__7795) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__7796 = cljs.core.aclone(arr);
  G__7796[i] = a;
  return G__7796;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__7797 = cljs.core.aclone(arr);
  G__7797[i] = a;
  G__7797[j] = b;
  return G__7797;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__7800 = arguments.length;
  switch(G__7800) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__7802 = init__$1;
          var G__7803 = k;
          var G__7804 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7802, G__7803, G__7804) : f.call(null, G__7802, G__7803, G__7804);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__7805 = i + 2;
        var G__7806 = init__$2;
        i = G__7805;
        init__$1 = G__7806;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4185__auto__ = !(self__.next_entry == null);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = !(self__.next_iter == null);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_7807 = 0;
        var j_7808 = 0;
        while (true) {
          if (i_7807 < 32) {
            if ((self__.bitmap >>> i_7807 & 1) === 0) {
              var G__7809 = i_7807 + 1;
              var G__7810 = j_7808;
              i_7807 = G__7809;
              j_7808 = G__7810;
              continue;
            } else {
              nodes[i_7807] = !(self__.arr[j_7808] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_7808]), self__.arr[j_7808], self__.arr[j_7808 + 1], added_leaf_QMARK_) : self__.arr[j_7808 + 1];
              var G__7811 = i_7807 + 1;
              var G__7812 = j_7808 + 2;
              i_7807 = G__7811;
              j_7808 = G__7812;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_7813 = 0;
      var j_7814 = 0;
      while (true) {
        if (i_7813 < 32) {
          if ((self__.bitmap >>> i_7813 & 1) === 0) {
            var G__7815 = i_7813 + 1;
            var G__7816 = j_7814;
            i_7813 = G__7815;
            j_7814 = G__7816;
            continue;
          } else {
            nodes[i_7813] = !(self__.arr[j_7814] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_7814]), self__.arr[j_7814], self__.arr[j_7814 + 1], added_leaf_QMARK_) : self__.arr[j_7814 + 1];
            var G__7817 = i_7813 + 1;
            var G__7818 = j_7814 + 2;
            i_7813 = G__7817;
            j_7814 = G__7818;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__7819 = i + 1;
        var G__7820 = j + 2;
        var G__7821 = bitmap | 1 << i;
        i = G__7819;
        j = G__7820;
        bitmap = G__7821;
        continue;
      } else {
        var G__7822 = i + 1;
        var G__7823 = j;
        var G__7824 = bitmap;
        i = G__7822;
        j = G__7823;
        bitmap = G__7824;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__7825 = i + 1;
          var G__7826 = init__$2;
          i = G__7825;
          init__$1 = G__7826;
          continue;
        }
      } else {
        var G__7827 = i + 1;
        var G__7828 = init__$1;
        i = G__7827;
        init__$1 = G__7828;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__7829 = i + 2;
        i = G__7829;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__7831 = arguments.length;
  switch(G__7831) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__7833 = null;
  var G__7833__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7833__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7833 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7833__1.call(this, x);
      case 2:
        return G__7833__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7833.cljs$core$IFn$_invoke$arity$1 = G__7833__1;
  G__7833.cljs$core$IFn$_invoke$arity$2 = G__7833__2;
  return G__7833;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__7834 = null;
  var G__7834__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7834__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7834 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7834__1.call(this, x);
      case 2:
        return G__7834__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7834.cljs$core$IFn$_invoke$arity$1 = G__7834__1;
  G__7834.cljs$core$IFn$_invoke$arity$2 = G__7834__2;
  return G__7834;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.NodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__7836 = arguments.length;
  switch(G__7836) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5751__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5751__auto__)) {
            var node = temp__5751__auto__;
            var temp__5751__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5751__auto____$1)) {
              var node_seq = temp__5751__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__7838 = j + 2;
              j = G__7838;
              continue;
            }
          } else {
            var G__7839 = j + 2;
            j = G__7839;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__7840 = null;
  var G__7840__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7840__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7840 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7840__1.call(this, x);
      case 2:
        return G__7840__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7840.cljs$core$IFn$_invoke$arity$1 = G__7840__1;
  G__7840.cljs$core$IFn$_invoke$arity$2 = G__7840__2;
  return G__7840;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__7841 = null;
  var G__7841__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7841__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7841 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7841__1.call(this, x);
      case 2:
        return G__7841__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7841.cljs$core$IFn$_invoke$arity$1 = G__7841__1;
  G__7841.cljs$core$IFn$_invoke$arity$2 = G__7841__2;
  return G__7841;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.ArrayNodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__7843 = arguments.length;
  switch(G__7843) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5751__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5751__auto__)) {
          var nj = temp__5751__auto__;
          var temp__5751__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5751__auto____$1)) {
            var ns = temp__5751__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__7845 = j + 1;
            j = G__7845;
            continue;
          }
        } else {
          var G__7846 = j + 1;
          j = G__7846;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__7848 = cljs.core.seq(coll);
  var chunk__7849 = null;
  var count__7850 = 0;
  var i__7851 = 0;
  while (true) {
    if (i__7851 < count__7850) {
      var vec__7858 = chunk__7849.cljs$core$IIndexed$_nth$arity$2(null, i__7851);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7858, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7858, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__7866 = seq__7848;
      var G__7867 = chunk__7849;
      var G__7868 = count__7850;
      var G__7869 = i__7851 + 1;
      seq__7848 = G__7866;
      chunk__7849 = G__7867;
      count__7850 = G__7868;
      i__7851 = G__7869;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__7848);
      if (temp__5753__auto__) {
        var seq__7848__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7848__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__7848__$1);
          var G__7870 = cljs.core.chunk_rest(seq__7848__$1);
          var G__7871 = c__4609__auto__;
          var G__7872 = cljs.core.count(c__4609__auto__);
          var G__7873 = 0;
          seq__7848 = G__7870;
          chunk__7849 = G__7871;
          count__7850 = G__7872;
          i__7851 = G__7873;
          continue;
        } else {
          var vec__7861 = cljs.core.first(seq__7848__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7861, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7861, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__7874 = cljs.core.next(seq__7848__$1);
          var G__7875 = null;
          var G__7876 = 0;
          var G__7877 = 0;
          seq__7848 = G__7874;
          chunk__7849 = G__7875;
          count__7850 = G__7876;
          i__7851 = G__7877;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__7878 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__7879 = cljs.core.next(es);
          ret = G__7878;
          es = G__7879;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__7880 = null;
  var G__7880__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7880__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7880 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7880__2.call(this, self__, k);
      case 3:
        return G__7880__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7880.cljs$core$IFn$_invoke$arity$2 = G__7880__2;
  G__7880.cljs$core$IFn$_invoke$arity$3 = G__7880__3;
  return G__7880;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args7847) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7847)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__7881 = i + 2;
      var G__7882 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__7881;
      ret = G__7882;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__7883 = i + 1;
      var G__7884 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__7883;
      out = G__7884;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_7885 = 0;
  while (true) {
    if (i_7885 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_7885], arr[i_7885 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_7885 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_7885])].join(""));
      } else {
        var G__7886 = i_7885 + 2;
        i_7885 = G__7886;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
goog.object.set(cljs.core.PersistentHashMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5751__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var e = temp__5751__auto__;
            var G__7888 = cljs.core.next(es);
            var G__7889 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__7888;
            tcoll__$1 = G__7889;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__7890 = null;
  var G__7890__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__7890__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__7890 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7890__2.call(this, self__, key);
      case 3:
        return G__7890__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7890.cljs$core$IFn$_invoke$arity$2 = G__7890__2;
  G__7890.cljs$core$IFn$_invoke$arity$3 = G__7890__3;
  return G__7890;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args7887) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7887)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__7891 = ascending_QMARK_ ? t.left : t.right;
      var G__7892 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__7891;
      stack__$1 = G__7892;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__7893 = null;
  var G__7893__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7893__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7893 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7893__1.call(this, x);
      case 2:
        return G__7893__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7893.cljs$core$IFn$_invoke$arity$1 = G__7893__1;
  G__7893.cljs$core$IFn$_invoke$arity$2 = G__7893__2;
  return G__7893;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__7894 = null;
  var G__7894__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7894__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7894 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7894__1.call(this, x);
      case 2:
        return G__7894__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7894.cljs$core$IFn$_invoke$arity$1 = G__7894__1;
  G__7894.cljs$core$IFn$_invoke$arity$2 = G__7894__2;
  return G__7894;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
goog.object.set(cljs.core.PersistentTreeMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__7895 = node.left;
    var G__7896 = f;
    var G__7897 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__7895, G__7896, G__7897) : cljs.core.tree_map_kv_reduce.call(null, G__7895, G__7896, G__7897);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__7898 = init__$1;
      var G__7899 = node.key;
      var G__7900 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7898, G__7899, G__7900) : f.call(null, G__7898, G__7899, G__7900);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__7901 = node.right;
        var G__7902 = f;
        var G__7903 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__7901, G__7902, G__7903) : cljs.core.tree_map_kv_reduce.call(null, G__7901, G__7902, G__7903);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__7905 = k;
  switch(G__7905) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__7907 = null;
  var G__7907__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7907__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7907 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7907__1.call(this, x);
      case 2:
        return G__7907__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7907.cljs$core$IFn$_invoke$arity$1 = G__7907__1;
  G__7907.cljs$core$IFn$_invoke$arity$2 = G__7907__2;
  return G__7907;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__7908 = null;
  var G__7908__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7908__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7908 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7908__1.call(this, x);
      case 2:
        return G__7908__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7908.cljs$core$IFn$_invoke$arity$1 = G__7908__1;
  G__7908.cljs$core$IFn$_invoke$arity$2 = G__7908__2;
  return G__7908;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__7909 = null;
  var G__7909__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__7909__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__7909 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7909__2.call(this, self__, k);
      case 3:
        return G__7909__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7909.cljs$core$IFn$_invoke$arity$2 = G__7909__2;
  G__7909.cljs$core$IFn$_invoke$arity$3 = G__7909__3;
  return G__7909;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args7904) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7904)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.BlackNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__7911 = k;
  switch(G__7911) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__7913 = null;
  var G__7913__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__7913__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7913 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7913__1.call(this, x);
      case 2:
        return G__7913__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7913.cljs$core$IFn$_invoke$arity$1 = G__7913__1;
  G__7913.cljs$core$IFn$_invoke$arity$2 = G__7913__2;
  return G__7913;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__7914 = null;
  var G__7914__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__7914__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__7914 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__7914__1.call(this, x);
      case 2:
        return G__7914__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7914.cljs$core$IFn$_invoke$arity$1 = G__7914__1;
  G__7914.cljs$core$IFn$_invoke$arity$2 = G__7914__2;
  return G__7914;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__7915 = null;
  var G__7915__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__7915__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__7915 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7915__2.call(this, self__, k);
      case 3:
        return G__7915__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7915.cljs$core$IFn$_invoke$arity$2 = G__7915__2;
  G__7915.cljs$core$IFn$_invoke$arity$3 = G__7915__3;
  return G__7915;
}();
cljs.core.RedNode.prototype.apply = function(self__, args7910) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7910)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.RedNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__7916 = k;
      var G__7917 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__7916, G__7917) : comp.call(null, G__7916, G__7917);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__7918 = comp;
          var G__7919 = tree.left;
          var G__7920 = k;
          var G__7921 = v;
          var G__7922 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__7918, G__7919, G__7920, G__7921, G__7922) : cljs.core.tree_map_add.call(null, G__7918, G__7919, G__7920, G__7921, G__7922);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__7923 = comp;
          var G__7924 = tree.right;
          var G__7925 = k;
          var G__7926 = v;
          var G__7927 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__7923, G__7924, G__7925, G__7926, G__7927) : cljs.core.tree_map_add.call(null, G__7923, G__7924, G__7925, G__7926, G__7927);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__7928 = left.right;
            var G__7929 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__7928, G__7929) : cljs.core.tree_map_append.call(null, G__7928, G__7929);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__7930 = left.right;
            var G__7931 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__7930, G__7931) : cljs.core.tree_map_append.call(null, G__7930, G__7931);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__7932 = left;
            var G__7933 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__7932, G__7933) : cljs.core.tree_map_append.call(null, G__7932, G__7933);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__7934 = left.right;
            var G__7935 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__7934, G__7935) : cljs.core.tree_map_append.call(null, G__7934, G__7935);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__7936 = k;
      var G__7937 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__7936, G__7937) : comp.call(null, G__7936, G__7937);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__7938 = comp;
          var G__7939 = tree.left;
          var G__7940 = k;
          var G__7941 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__7938, G__7939, G__7940, G__7941) : cljs.core.tree_map_remove.call(null, G__7938, G__7939, G__7940, G__7941);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__7942 = comp;
          var G__7943 = tree.right;
          var G__7944 = k;
          var G__7945 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__7942, G__7943, G__7944, G__7945) : cljs.core.tree_map_remove.call(null, G__7942, G__7943, G__7944, G__7945);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__7946 = comp;
        var G__7947 = tree.left;
        var G__7948 = k;
        var G__7949 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__7946, G__7947, G__7948, G__7949) : cljs.core.tree_map_replace.call(null, G__7946, G__7947, G__7948, G__7949);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__7950 = comp;
        var G__7951 = tree.right;
        var G__7952 = k;
        var G__7953 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__7950, G__7951, G__7952, G__7953) : cljs.core.tree_map_replace.call(null, G__7950, G__7951, G__7952, G__7953);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__7955 = cljs.core.seq(coll);
  var chunk__7956 = null;
  var count__7957 = 0;
  var i__7958 = 0;
  while (true) {
    if (i__7958 < count__7957) {
      var vec__7965 = chunk__7956.cljs$core$IIndexed$_nth$arity$2(null, i__7958);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7965, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7965, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__7977 = seq__7955;
      var G__7978 = chunk__7956;
      var G__7979 = count__7957;
      var G__7980 = i__7958 + 1;
      seq__7955 = G__7977;
      chunk__7956 = G__7978;
      count__7957 = G__7979;
      i__7958 = G__7980;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__7955);
      if (temp__5753__auto__) {
        var seq__7955__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7955__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__7955__$1);
          var G__7981 = cljs.core.chunk_rest(seq__7955__$1);
          var G__7982 = c__4609__auto__;
          var G__7983 = cljs.core.count(c__4609__auto__);
          var G__7984 = 0;
          seq__7955 = G__7981;
          chunk__7956 = G__7982;
          count__7957 = G__7983;
          i__7958 = G__7984;
          continue;
        } else {
          var vec__7968 = cljs.core.first(seq__7955__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7968, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7968, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__7985 = cljs.core.next(seq__7955__$1);
          var G__7986 = null;
          var G__7987 = 0;
          var G__7988 = 0;
          seq__7955 = G__7985;
          chunk__7956 = G__7986;
          count__7957 = G__7987;
          i__7958 = G__7988;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__7971 = k;
        var G__7972 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__7971, G__7972) : self__.comp.call(null, G__7971, G__7972);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__7989 = t.left;
          t = G__7989;
          continue;
        } else {
          var G__7990 = t.right;
          t = G__7990;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__7991 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__7992 = cljs.core.next(es);
          ret = G__7991;
          es = G__7992;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__7993 = null;
  var G__7993__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7993__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7993 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7993__2.call(this, self__, k);
      case 3:
        return G__7993__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__7993.cljs$core$IFn$_invoke$arity$2 = G__7993__2;
  G__7993.cljs$core$IFn$_invoke$arity$3 = G__7993__3;
  return G__7993;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args7954) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7954)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__7975 = k;
          var G__7976 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__7975, G__7976) : self__.comp.call(null, G__7975, G__7976);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__7994 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__7995 = t.left;
              stack = G__7994;
              t = G__7995;
              continue;
            } else {
              var G__7996 = stack;
              var G__7997 = t.right;
              stack = G__7996;
              t = G__7997;
              continue;
            }
          } else {
            if (c > 0) {
              var G__7998 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__7999 = t.right;
              stack = G__7998;
              t = G__7999;
              continue;
            } else {
              var G__8000 = stack;
              var G__8001 = t.left;
              stack = G__8000;
              t = G__8001;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8003 = arguments.length;
  var i__4790__auto___8004 = 0;
  while (true) {
    if (i__4790__auto___8004 < len__4789__auto___8003) {
      args__4795__auto__.push(arguments[i__4790__auto___8004]);
      var G__8005 = i__4790__auto___8004 + 1;
      i__4790__auto___8004 = G__8005;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__8006 = cljs.core.nnext(in$);
      var G__8007 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8006;
      out = G__8007;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq8002) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8002));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8009 = arguments.length;
  var i__4790__auto___8010 = 0;
  while (true) {
    if (i__4790__auto___8010 < len__4789__auto___8009) {
      args__4795__auto__.push(arguments[i__4790__auto___8010]);
      var G__8011 = i__4790__auto___8010 + 1;
      i__4790__auto___8010 = G__8011;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq8008) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8008));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8015 = arguments.length;
  var i__4790__auto___8016 = 0;
  while (true) {
    if (i__4790__auto___8016 < len__4789__auto___8015) {
      args__4795__auto__.push(arguments[i__4790__auto___8016]);
      var G__8017 = i__4790__auto___8016 + 1;
      i__4790__auto___8016 = G__8017;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      goog.object.set(obj, cljs.core.first(kvs), cljs.core.second(kvs));
      var G__8018 = cljs.core.nnext(kvs);
      kvs = G__8018;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq8012) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8012));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8020 = arguments.length;
  var i__4790__auto___8021 = 0;
  while (true) {
    if (i__4790__auto___8021 < len__4789__auto___8020) {
      args__4795__auto__.push(arguments[i__4790__auto___8021]);
      var G__8022 = i__4790__auto___8021 + 1;
      i__4790__auto___8021 = G__8022;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__8023 = cljs.core.nnext(in$);
      var G__8024 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8023;
      out = G__8024;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq8019) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8019));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8027 = arguments.length;
  var i__4790__auto___8028 = 0;
  while (true) {
    if (i__4790__auto___8028 < len__4789__auto___8027) {
      args__4795__auto__.push(arguments[i__4790__auto___8028]);
      var G__8029 = i__4790__auto___8028 + 1;
      i__4790__auto___8028 = G__8029;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__8030 = cljs.core.nnext(in$);
      var G__8031 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8030;
      out = G__8031;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq8025) {
  var G__8026 = cljs.core.first(seq8025);
  var seq8025__$1 = cljs.core.next(seq8025);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8026, seq8025__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__8034 = null;
  var G__8034__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__8034__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8034 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8034__1.call(this, x);
      case 2:
        return G__8034__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8034.cljs$core$IFn$_invoke$arity$1 = G__8034__1;
  G__8034.cljs$core$IFn$_invoke$arity$2 = G__8034__2;
  return G__8034;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__8035 = null;
  var G__8035__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__8035__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8035 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8035__1.call(this, x);
      case 2:
        return G__8035__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8035.cljs$core$IFn$_invoke$arity$1 = G__8035__1;
  G__8035.cljs$core$IFn$_invoke$arity$2 = G__8035__2;
  return G__8035;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
goog.object.set(cljs.core.KeySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5753__auto__ = cljs.core.seq(map);
  if (temp__5753__auto__) {
    var mseq = temp__5753__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__8038 = null;
  var G__8038__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__8038__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8038 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8038__1.call(this, x);
      case 2:
        return G__8038__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8038.cljs$core$IFn$_invoke$arity$1 = G__8038__1;
  G__8038.cljs$core$IFn$_invoke$arity$2 = G__8038__2;
  return G__8038;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__8039 = null;
  var G__8039__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__8039__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__8039 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8039__1.call(this, x);
      case 2:
        return G__8039__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8039.cljs$core$IFn$_invoke$arity$1 = G__8039__1;
  G__8039.cljs$core$IFn$_invoke$arity$2 = G__8039__2;
  return G__8039;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
goog.object.set(cljs.core.ValSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5753__auto__ = cljs.core.seq(map);
  if (temp__5753__auto__) {
    var mseq = temp__5753__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8043 = arguments.length;
  var i__4790__auto___8044 = 0;
  while (true) {
    if (i__4790__auto___8044 < len__4789__auto___8043) {
      args__4795__auto__.push(arguments[i__4790__auto___8044]);
      var G__8045 = i__4790__auto___8044 + 1;
      i__4790__auto___8044 = G__8045;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__8040_SHARP_, p2__8041_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4185__auto__ = p1__8040_SHARP_;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__8041_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq8042) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8042));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8050 = arguments.length;
  var i__4790__auto___8051 = 0;
  while (true) {
    if (i__4790__auto___8051 < len__4789__auto___8050) {
      args__4795__auto__.push(arguments[i__4790__auto___8051]);
      var G__8052 = i__4790__auto___8051 + 1;
      i__4790__auto___8051 = G__8052;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__8048 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__8049 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8048, G__8049) : f.call(null, G__8048, G__8049);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(m1, m2) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
        var or__4185__auto__ = m1;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.seq(m2));
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq8046) {
  var G__8047 = cljs.core.first(seq8046);
  var seq8046__$1 = cljs.core.next(seq8046);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8047, seq8046__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__8053 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__8054 = cljs.core.next(keys);
      ret = G__8053;
      keys = G__8054;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8058 = cljs.core.seq(coll);
  var chunk__8059 = null;
  var count__8060 = 0;
  var i__8061 = 0;
  while (true) {
    if (i__8061 < count__8060) {
      var vec__8068 = chunk__8059.cljs$core$IIndexed$_nth$arity$2(null, i__8061);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8068, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8068, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8077 = seq__8058;
      var G__8078 = chunk__8059;
      var G__8079 = count__8060;
      var G__8080 = i__8061 + 1;
      seq__8058 = G__8077;
      chunk__8059 = G__8078;
      count__8060 = G__8079;
      i__8061 = G__8080;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__8058);
      if (temp__5753__auto__) {
        var seq__8058__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8058__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__8058__$1);
          var G__8081 = cljs.core.chunk_rest(seq__8058__$1);
          var G__8082 = c__4609__auto__;
          var G__8083 = cljs.core.count(c__4609__auto__);
          var G__8084 = 0;
          seq__8058 = G__8081;
          chunk__8059 = G__8082;
          count__8060 = G__8083;
          i__8061 = G__8084;
          continue;
        } else {
          var vec__8071 = cljs.core.first(seq__8058__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8071, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8071, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8085 = cljs.core.next(seq__8058__$1);
          var G__8086 = null;
          var G__8087 = 0;
          var G__8088 = 0;
          seq__8058 = G__8085;
          chunk__8059 = G__8086;
          count__8060 = G__8087;
          i__8061 = G__8088;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5751__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var entry = temp__5751__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__8056_SHARP_, p2__8055_SHARP_) {
          var or__4185__auto__ = cljs.core.contains_QMARK_(other, p2__8055_SHARP_);
          if (or__4185__auto__) {
            return or__4185__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.hash_map);
      } catch (e8076) {
        if (e8076 instanceof Error) {
          var ex = e8076;
          return false;
        } else {
          throw e8076;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__8089 = null;
  var G__8089__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8089__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8089 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8089__2.call(this, self__, k);
      case 3:
        return G__8089__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__8089.cljs$core$IFn$_invoke$arity$2 = G__8089__2;
  G__8089.cljs$core$IFn$_invoke$arity$3 = G__8089__3;
  return G__8089;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args8057) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8057)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__8090 = i + 1;
        var G__8091 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__8090;
        out = G__8091;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__8092 = i + 1;
        var G__8093 = cljs.core._conj_BANG_(out, items[i]);
        i = G__8092;
        out = G__8093;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4666__auto___8094 = len;
  var i_8095 = 0;
  while (true) {
    if (i_8095 < n__4666__auto___8094) {
      cljs.core._conj_BANG_(t, items[i_8095]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_8095 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_8095])].join(""));
      }
      var G__8096 = i_8095 + 1;
      i_8095 = G__8096;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4666__auto___8097 = len;
  var i_8098 = 0;
  while (true) {
    if (i_8098 < n__4666__auto___8097) {
      cljs.core._conj_BANG_(t, items[i_8098]);
      var G__8099 = i_8098 + 1;
      i_8098 = G__8099;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
goog.object.set(cljs.core.PersistentHashSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__8101 = null;
  var G__8101__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__8101__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__8101 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8101__2.call(this, self__, k);
      case 3:
        return G__8101__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__8101.cljs$core$IFn$_invoke$arity$2 = G__8101__2;
  G__8101.cljs$core$IFn$_invoke$arity$3 = G__8101__3;
  return G__8101;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args8100) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8100)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8105 = cljs.core.seq(coll);
  var chunk__8106 = null;
  var count__8107 = 0;
  var i__8108 = 0;
  while (true) {
    if (i__8108 < count__8107) {
      var vec__8115 = chunk__8106.cljs$core$IIndexed$_nth$arity$2(null, i__8108);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8115, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8115, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8124 = seq__8105;
      var G__8125 = chunk__8106;
      var G__8126 = count__8107;
      var G__8127 = i__8108 + 1;
      seq__8105 = G__8124;
      chunk__8106 = G__8125;
      count__8107 = G__8126;
      i__8108 = G__8127;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__8105);
      if (temp__5753__auto__) {
        var seq__8105__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8105__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__8105__$1);
          var G__8128 = cljs.core.chunk_rest(seq__8105__$1);
          var G__8129 = c__4609__auto__;
          var G__8130 = cljs.core.count(c__4609__auto__);
          var G__8131 = 0;
          seq__8105 = G__8128;
          chunk__8106 = G__8129;
          count__8107 = G__8130;
          i__8108 = G__8131;
          continue;
        } else {
          var vec__8118 = cljs.core.first(seq__8105__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8118, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8118, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8132 = cljs.core.next(seq__8105__$1);
          var G__8133 = null;
          var G__8134 = 0;
          var G__8135 = 0;
          seq__8105 = G__8132;
          chunk__8106 = G__8133;
          count__8107 = G__8134;
          i__8108 = G__8135;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__8103_SHARP_, p2__8102_SHARP_) {
          var or__4185__auto__ = cljs.core.contains_QMARK_(other, p2__8102_SHARP_);
          if (or__4185__auto__) {
            return or__4185__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.tree_map);
      } catch (e8123) {
        if (e8123 instanceof Error) {
          var ex = e8123;
          return false;
        } else {
          throw e8123;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__8136 = null;
  var G__8136__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8136__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8136 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8136__2.call(this, self__, k);
      case 3:
        return G__8136__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__8136.cljs$core$IFn$_invoke$arity$2 = G__8136__2;
  G__8136.cljs$core$IFn$_invoke$arity$3 = G__8136__3;
  return G__8136;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args8104) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8104)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4663__auto__ = arr;
    var l__4664__auto__ = a__4663__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4664__auto__) {
        var G__8137 = i + 1;
        var G__8138 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__8137;
        res = G__8138;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__8139 = cljs.core.next(in$__$1);
            var G__8140 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__8139;
            out = G__8140;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__8143 = arguments.length;
  switch(G__8143) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8145 = arguments.length;
      var i__4790__auto___8146 = 0;
      while (true) {
        if (i__4790__auto___8146 < len__4789__auto___8145) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8146]);
          var G__8147 = i__4790__auto___8146 + 1;
          i__4790__auto___8146 = G__8147;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4811__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq8142) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8142));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8149 = arguments.length;
  var i__4790__auto___8150 = 0;
  while (true) {
    if (i__4790__auto___8150 < len__4789__auto___8149) {
      args__4795__auto__.push(arguments[i__4790__auto___8150]);
      var G__8151 = i__4790__auto___8150 + 1;
      i__4790__auto___8150 = G__8151;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq8148) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8148));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8154 = arguments.length;
  var i__4790__auto___8155 = 0;
  while (true) {
    if (i__4790__auto___8155 < len__4789__auto___8154) {
      args__4795__auto__.push(arguments[i__4790__auto___8155]);
      var G__8156 = i__4790__auto___8155 + 1;
      i__4790__auto___8155 = G__8156;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq8152) {
  var G__8153 = cljs.core.first(seq8152);
  var seq8152__$1 = cljs.core.next(seq8152);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8153, seq8152__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__8160 = arguments.length;
  switch(G__8160) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__8157_SHARP_) {
    var temp__5751__auto__ = cljs.core.find(smap, p1__8157_SHARP_);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var e = temp__5751__auto__;
      return cljs.core.val(e);
    } else {
      return p1__8157_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__5751__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e = temp__5751__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__8158_SHARP_) {
      var temp__5751__auto__ = cljs.core.find(smap, p1__8158_SHARP_);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e = temp__5751__auto__;
        return cljs.core.second(e);
      } else {
        return p1__8158_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__8163 = arguments.length;
  switch(G__8163) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var G__8174 = null;
      var G__8174__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8174__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8174__2 = function(result, input) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
          return result;
        } else {
          seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__8174 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8174__0.call(this);
          case 1:
            return G__8174__1.call(this, result);
          case 2:
            return G__8174__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8174.cljs$core$IFn$_invoke$arity$0 = G__8174__0;
      G__8174.cljs$core$IFn$_invoke$arity$1 = G__8174__1;
      G__8174.cljs$core$IFn$_invoke$arity$2 = G__8174__2;
      return G__8174;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__8168 = function(p__8169, seen__$1) {
        while (true) {
          var vec__8170 = p__8169;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8170, 0, null);
          var xs__$1 = vec__8170;
          var temp__5753__auto__ = cljs.core.seq(xs__$1);
          if (temp__5753__auto__) {
            var s = temp__5753__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__8175 = cljs.core.rest(s);
              var G__8176 = seen__$1;
              p__8169 = G__8175;
              seen__$1 = G__8176;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__8168(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__8177 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__8178 = cljs.core.next(s__$1);
      ret = G__8177;
      s__$1 = G__8178;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__8180 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__8181 = cljs.core.next(ks);
      var G__8182 = cljs.core.next(vs);
      map = G__8180;
      ks = G__8181;
      vs = G__8182;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__8190 = arguments.length;
  switch(G__8190) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8192 = arguments.length;
      var i__4790__auto___8193 = 0;
      while (true) {
        if (i__4790__auto___8193 < len__4789__auto___8192) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8193]);
          var G__8194 = i__4790__auto___8193 + 1;
          i__4790__auto___8193 = G__8194;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8183_SHARP_, p2__8184_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__8183_SHARP_, p2__8184_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq8186) {
  var G__8187 = cljs.core.first(seq8186);
  var seq8186__$1 = cljs.core.next(seq8186);
  var G__8188 = cljs.core.first(seq8186__$1);
  var seq8186__$2 = cljs.core.next(seq8186__$1);
  var G__8189 = cljs.core.first(seq8186__$2);
  var seq8186__$3 = cljs.core.next(seq8186__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8187, G__8188, G__8189, seq8186__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__8202 = arguments.length;
  switch(G__8202) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8204 = arguments.length;
      var i__4790__auto___8205 = 0;
      while (true) {
        if (i__4790__auto___8205 < len__4789__auto___8204) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8205]);
          var G__8206 = i__4790__auto___8205 + 1;
          i__4790__auto___8205 = G__8206;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8195_SHARP_, p2__8196_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__8195_SHARP_, p2__8196_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq8198) {
  var G__8199 = cljs.core.first(seq8198);
  var seq8198__$1 = cljs.core.next(seq8198);
  var G__8200 = cljs.core.first(seq8198__$1);
  var seq8198__$2 = cljs.core.next(seq8198__$1);
  var G__8201 = cljs.core.first(seq8198__$2);
  var seq8198__$3 = cljs.core.next(seq8198__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8199, G__8200, G__8201, seq8198__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__8208 = arguments.length;
  switch(G__8208) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function() {
      var G__8210 = null;
      var G__8210__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8210__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__8210__2 = function(result, input) {
        a.add(input);
        if (n === a.size()) {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        } else {
          return result;
        }
      };
      G__8210 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8210__0.call(this);
          case 1:
            return G__8210__1.call(this, result);
          case 2:
            return G__8210__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8210.cljs$core$IFn$_invoke$arity$0 = G__8210__0;
      G__8210.cljs$core$IFn$_invoke$arity$1 = G__8210__1;
      G__8210.cljs$core$IFn$_invoke$arity$2 = G__8210__2;
      return G__8210;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__8212 = arguments.length;
  switch(G__8212) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__8215 = null;
      var G__8215__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8215__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8215__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__8215 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8215__0.call(this);
          case 1:
            return G__8215__1.call(this, result);
          case 2:
            return G__8215__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8215.cljs$core$IFn$_invoke$arity$0 = G__8215__0;
      G__8215.cljs$core$IFn$_invoke$arity$1 = G__8215__1;
      G__8215.cljs$core$IFn$_invoke$arity$2 = G__8215__2;
      return G__8215;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      if (cljs.core.truth_(function() {
        var G__8213 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8213) : pred.call(null, G__8213);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__8216 = function() {
      var G__8218 = cljs.core._entry_key(sc, e);
      var G__8219 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8218, G__8219) : comp.call(null, G__8218, G__8219);
    }();
    var G__8217 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__8216, G__8217) : test.call(null, G__8216, G__8217);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__8221 = arguments.length;
  switch(G__8221) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__8222 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__8222.cljs$core$IFn$_invoke$arity$1 ? fexpr__8222.cljs$core$IFn$_invoke$arity$1(test) : fexpr__8222.call(null, test);
  }())) {
    var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var vec__8223 = temp__5753__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8223, 0, null);
      var s = vec__8223;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var vec__8226 = temp__5753__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8226, 0, null);
    var s = vec__8226;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__8229 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__8229.cljs$core$IFn$_invoke$arity$1 ? fexpr__8229.cljs$core$IFn$_invoke$arity$1(e) : fexpr__8229.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__8232 = arguments.length;
  switch(G__8232) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__8233 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__8233.cljs$core$IFn$_invoke$arity$1 ? fexpr__8233.cljs$core$IFn$_invoke$arity$1(test) : fexpr__8233.call(null, test);
  }())) {
    var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var vec__8234 = temp__5753__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8234, 0, null);
      var s = vec__8234;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5753__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var vec__8237 = temp__5753__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8237, 0, null);
    var s = vec__8237;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__8240 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__8240.cljs$core$IFn$_invoke$arity$1 ? fexpr__8240.cljs$core$IFn$_invoke$arity$1(e) : fexpr__8240.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__8243 = null;
  var G__8243__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__8243__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__8243 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__8243__1.call(this, x);
      case 2:
        return G__8243__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8243.cljs$core$IFn$_invoke$arity$1 = G__8243__1;
  G__8243.cljs$core$IFn$_invoke$arity$2 = G__8243__2;
  return G__8243;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__8244 = null;
  var G__8244__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__8244__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__8244 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__8244__1.call(this, x);
      case 2:
        return G__8244__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8244.cljs$core$IFn$_invoke$arity$1 = G__8244__1;
  G__8244.cljs$core$IFn$_invoke$arity$2 = G__8244__2;
  return G__8244;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__8242 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__8242);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__8245 = i + self__.step;
        var G__8246 = ret__$1;
        i = G__8245;
        ret = G__8246;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
goog.object.set(cljs.core.Range.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.range = function cljs$core$range(var_args) {
  var G__8248 = arguments.length;
  switch(G__8248) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__8251 = arguments.length;
  switch(G__8251) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__8253 = null;
      var G__8253__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8253__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8253__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        if (cljs.core.rem(i, n) === 0) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__8253 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8253__0.call(this);
          case 1:
            return G__8253__1.call(this, result);
          case 2:
            return G__8253__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8253.cljs$core$IFn$_invoke$arity$0 = G__8253__0;
      G__8253.cljs$core$IFn$_invoke$arity$1 = G__8253__1;
      G__8253.cljs$core$IFn$_invoke$arity$2 = G__8253__2;
      return G__8253;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__8256 = arguments.length;
  switch(G__8256) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__8258 = null;
      var G__8258__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8258__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__8258__2 = function(result, input) {
        var pval = cljs.core.deref(pa);
        var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        cljs.core.vreset_BANG_(pa, val);
        if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
          a.add(input);
          return result;
        } else {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          if (cljs.core.reduced_QMARK_(ret)) {
          } else {
            a.add(input);
          }
          return ret;
        }
      };
      G__8258 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8258__0.call(this);
          case 1:
            return G__8258__1.call(this, result);
          case 2:
            return G__8258__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8258.cljs$core$IFn$_invoke$arity$0 = G__8258__0;
      G__8258.cljs$core$IFn$_invoke$arity$1 = G__8258__1;
      G__8258.cljs$core$IFn$_invoke$arity$2 = G__8258__2;
      return G__8258;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__8254_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__8254_SHARP_) : f.call(null, p1__8254_SHARP_));
      }, cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
      }, null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__8260 = arguments.length;
  switch(G__8260) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5751__auto__ = cljs.core.seq(coll);
    if (temp__5751__auto__) {
      var s = temp__5751__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5753__auto__ = cljs.core.seq(coll);
      if (temp__5753__auto__) {
        var s = temp__5753__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__8261 = init;
          var G__8262 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8261, G__8262) : f.call(null, G__8261, G__8262);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__8279 = arguments.length;
  switch(G__8279) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8281 = arguments.length;
      var i__4790__auto___8282 = 0;
      while (true) {
        if (i__4790__auto___8282 < len__4789__auto___8281) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8282]);
          var G__8283 = i__4790__auto___8282 + 1;
          i__4790__auto___8282 = G__8283;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__8284 = null;
    var G__8284__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__8284__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__8284__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__8284__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__8284__4 = function() {
      var G__8285__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__8285 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8286__i = 0, G__8286__a = new Array(arguments.length - 3);
          while (G__8286__i < G__8286__a.length) {
            G__8286__a[G__8286__i] = arguments[G__8286__i + 3];
            ++G__8286__i;
          }
          args = new cljs.core.IndexedSeq(G__8286__a, 0, null);
        }
        return G__8285__delegate.call(this, x, y, z, args);
      };
      G__8285.cljs$lang$maxFixedArity = 3;
      G__8285.cljs$lang$applyTo = function(arglist__8287) {
        var x = cljs.core.first(arglist__8287);
        arglist__8287 = cljs.core.next(arglist__8287);
        var y = cljs.core.first(arglist__8287);
        arglist__8287 = cljs.core.next(arglist__8287);
        var z = cljs.core.first(arglist__8287);
        var args = cljs.core.rest(arglist__8287);
        return G__8285__delegate(x, y, z, args);
      };
      G__8285.cljs$core$IFn$_invoke$arity$variadic = G__8285__delegate;
      return G__8285;
    }();
    G__8284 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8284__0.call(this);
        case 1:
          return G__8284__1.call(this, x);
        case 2:
          return G__8284__2.call(this, x, y);
        case 3:
          return G__8284__3.call(this, x, y, z);
        default:
          var G__8288 = null;
          if (arguments.length > 3) {
            var G__8289__i = 0, G__8289__a = new Array(arguments.length - 3);
            while (G__8289__i < G__8289__a.length) {
              G__8289__a[G__8289__i] = arguments[G__8289__i + 3];
              ++G__8289__i;
            }
            G__8288 = new cljs.core.IndexedSeq(G__8289__a, 0, null);
          }
          return G__8284__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8288);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8284.cljs$lang$maxFixedArity = 3;
    G__8284.cljs$lang$applyTo = G__8284__4.cljs$lang$applyTo;
    G__8284.cljs$core$IFn$_invoke$arity$0 = G__8284__0;
    G__8284.cljs$core$IFn$_invoke$arity$1 = G__8284__1;
    G__8284.cljs$core$IFn$_invoke$arity$2 = G__8284__2;
    G__8284.cljs$core$IFn$_invoke$arity$3 = G__8284__3;
    G__8284.cljs$core$IFn$_invoke$arity$variadic = G__8284__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8284;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8290 = null;
    var G__8290__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__8290__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__8290__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__8290__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__8290__4 = function() {
      var G__8291__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__8291 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8292__i = 0, G__8292__a = new Array(arguments.length - 3);
          while (G__8292__i < G__8292__a.length) {
            G__8292__a[G__8292__i] = arguments[G__8292__i + 3];
            ++G__8292__i;
          }
          args = new cljs.core.IndexedSeq(G__8292__a, 0, null);
        }
        return G__8291__delegate.call(this, x, y, z, args);
      };
      G__8291.cljs$lang$maxFixedArity = 3;
      G__8291.cljs$lang$applyTo = function(arglist__8293) {
        var x = cljs.core.first(arglist__8293);
        arglist__8293 = cljs.core.next(arglist__8293);
        var y = cljs.core.first(arglist__8293);
        arglist__8293 = cljs.core.next(arglist__8293);
        var z = cljs.core.first(arglist__8293);
        var args = cljs.core.rest(arglist__8293);
        return G__8291__delegate(x, y, z, args);
      };
      G__8291.cljs$core$IFn$_invoke$arity$variadic = G__8291__delegate;
      return G__8291;
    }();
    G__8290 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8290__0.call(this);
        case 1:
          return G__8290__1.call(this, x);
        case 2:
          return G__8290__2.call(this, x, y);
        case 3:
          return G__8290__3.call(this, x, y, z);
        default:
          var G__8294 = null;
          if (arguments.length > 3) {
            var G__8295__i = 0, G__8295__a = new Array(arguments.length - 3);
            while (G__8295__i < G__8295__a.length) {
              G__8295__a[G__8295__i] = arguments[G__8295__i + 3];
              ++G__8295__i;
            }
            G__8294 = new cljs.core.IndexedSeq(G__8295__a, 0, null);
          }
          return G__8290__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8294);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8290.cljs$lang$maxFixedArity = 3;
    G__8290.cljs$lang$applyTo = G__8290__4.cljs$lang$applyTo;
    G__8290.cljs$core$IFn$_invoke$arity$0 = G__8290__0;
    G__8290.cljs$core$IFn$_invoke$arity$1 = G__8290__1;
    G__8290.cljs$core$IFn$_invoke$arity$2 = G__8290__2;
    G__8290.cljs$core$IFn$_invoke$arity$3 = G__8290__3;
    G__8290.cljs$core$IFn$_invoke$arity$variadic = G__8290__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8290;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8296 = null;
    var G__8296__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__8296__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__8296__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__8296__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__8296__4 = function() {
      var G__8297__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__8297 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8298__i = 0, G__8298__a = new Array(arguments.length - 3);
          while (G__8298__i < G__8298__a.length) {
            G__8298__a[G__8298__i] = arguments[G__8298__i + 3];
            ++G__8298__i;
          }
          args = new cljs.core.IndexedSeq(G__8298__a, 0, null);
        }
        return G__8297__delegate.call(this, x, y, z, args);
      };
      G__8297.cljs$lang$maxFixedArity = 3;
      G__8297.cljs$lang$applyTo = function(arglist__8299) {
        var x = cljs.core.first(arglist__8299);
        arglist__8299 = cljs.core.next(arglist__8299);
        var y = cljs.core.first(arglist__8299);
        arglist__8299 = cljs.core.next(arglist__8299);
        var z = cljs.core.first(arglist__8299);
        var args = cljs.core.rest(arglist__8299);
        return G__8297__delegate(x, y, z, args);
      };
      G__8297.cljs$core$IFn$_invoke$arity$variadic = G__8297__delegate;
      return G__8297;
    }();
    G__8296 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8296__0.call(this);
        case 1:
          return G__8296__1.call(this, x);
        case 2:
          return G__8296__2.call(this, x, y);
        case 3:
          return G__8296__3.call(this, x, y, z);
        default:
          var G__8300 = null;
          if (arguments.length > 3) {
            var G__8301__i = 0, G__8301__a = new Array(arguments.length - 3);
            while (G__8301__i < G__8301__a.length) {
              G__8301__a[G__8301__i] = arguments[G__8301__i + 3];
              ++G__8301__i;
            }
            G__8300 = new cljs.core.IndexedSeq(G__8301__a, 0, null);
          }
          return G__8296__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8300);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8296.cljs$lang$maxFixedArity = 3;
    G__8296.cljs$lang$applyTo = G__8296__4.cljs$lang$applyTo;
    G__8296.cljs$core$IFn$_invoke$arity$0 = G__8296__0;
    G__8296.cljs$core$IFn$_invoke$arity$1 = G__8296__1;
    G__8296.cljs$core$IFn$_invoke$arity$2 = G__8296__2;
    G__8296.cljs$core$IFn$_invoke$arity$3 = G__8296__3;
    G__8296.cljs$core$IFn$_invoke$arity$variadic = G__8296__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8296;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function() {
    var G__8302 = null;
    var G__8302__0 = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8264_SHARP_, p2__8265_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8264_SHARP_, p2__8265_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__8265_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__8265_SHARP_.call(null));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__8302__1 = function(x) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8266_SHARP_, p2__8267_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8266_SHARP_, p2__8267_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__8267_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__8267_SHARP_.call(null, x));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__8302__2 = function(x, y) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8268_SHARP_, p2__8269_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8268_SHARP_, p2__8269_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__8269_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__8269_SHARP_.call(null, x, y));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__8302__3 = function(x, y, z) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8270_SHARP_, p2__8271_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8270_SHARP_, p2__8271_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__8271_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__8271_SHARP_.call(null, x, y, z));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__8302__4 = function() {
      var G__8303__delegate = function(x, y, z, args) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8272_SHARP_, p2__8273_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8272_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__8273_SHARP_, x, y, z, args));
        }, cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8303 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8304__i = 0, G__8304__a = new Array(arguments.length - 3);
          while (G__8304__i < G__8304__a.length) {
            G__8304__a[G__8304__i] = arguments[G__8304__i + 3];
            ++G__8304__i;
          }
          args = new cljs.core.IndexedSeq(G__8304__a, 0, null);
        }
        return G__8303__delegate.call(this, x, y, z, args);
      };
      G__8303.cljs$lang$maxFixedArity = 3;
      G__8303.cljs$lang$applyTo = function(arglist__8305) {
        var x = cljs.core.first(arglist__8305);
        arglist__8305 = cljs.core.next(arglist__8305);
        var y = cljs.core.first(arglist__8305);
        arglist__8305 = cljs.core.next(arglist__8305);
        var z = cljs.core.first(arglist__8305);
        var args = cljs.core.rest(arglist__8305);
        return G__8303__delegate(x, y, z, args);
      };
      G__8303.cljs$core$IFn$_invoke$arity$variadic = G__8303__delegate;
      return G__8303;
    }();
    G__8302 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8302__0.call(this);
        case 1:
          return G__8302__1.call(this, x);
        case 2:
          return G__8302__2.call(this, x, y);
        case 3:
          return G__8302__3.call(this, x, y, z);
        default:
          var G__8306 = null;
          if (arguments.length > 3) {
            var G__8307__i = 0, G__8307__a = new Array(arguments.length - 3);
            while (G__8307__i < G__8307__a.length) {
              G__8307__a[G__8307__i] = arguments[G__8307__i + 3];
              ++G__8307__i;
            }
            G__8306 = new cljs.core.IndexedSeq(G__8307__a, 0, null);
          }
          return G__8302__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8306);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8302.cljs$lang$maxFixedArity = 3;
    G__8302.cljs$lang$applyTo = G__8302__4.cljs$lang$applyTo;
    G__8302.cljs$core$IFn$_invoke$arity$0 = G__8302__0;
    G__8302.cljs$core$IFn$_invoke$arity$1 = G__8302__1;
    G__8302.cljs$core$IFn$_invoke$arity$2 = G__8302__2;
    G__8302.cljs$core$IFn$_invoke$arity$3 = G__8302__3;
    G__8302.cljs$core$IFn$_invoke$arity$variadic = G__8302__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8302;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(seq8275) {
  var G__8276 = cljs.core.first(seq8275);
  var seq8275__$1 = cljs.core.next(seq8275);
  var G__8277 = cljs.core.first(seq8275__$1);
  var seq8275__$2 = cljs.core.next(seq8275__$1);
  var G__8278 = cljs.core.first(seq8275__$2);
  var seq8275__$3 = cljs.core.next(seq8275__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8276, G__8277, G__8278, seq8275__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__8309 = arguments.length;
  switch(G__8309) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5753__auto__ = cljs.core.seq(coll);
    if (temp__5753__auto__) {
      var s = temp__5753__auto__;
      var G__8311 = cljs.core.next(s);
      coll = G__8311;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__8312 = n - 1;
      var G__8313 = cljs.core.next(coll);
      n = G__8312;
      coll = G__8313;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__8315 = arguments.length;
  switch(G__8315) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5757__auto__ = re.exec(s);
  if (temp__5757__auto__ == null) {
    return null;
  } else {
    var matches = temp__5757__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function() {
      var post_idx = matches.index + function() {
        var x__4273__auto__ = 1;
        var y__4274__auto__ = match_str.length;
        return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
      }();
      if (post_idx <= s.length) {
        var G__8317 = re;
        var G__8318 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
        return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__8317, G__8318) : cljs.core.re_seq_STAR_.call(null, G__8317, G__8318);
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__8319 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8319, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8319, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4185__auto__ = flags;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__8322 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__8323 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__8323;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4185__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__8324_8330 = cljs.core.first(coll);
          var G__8325_8331 = writer;
          var G__8326_8332 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8324_8330, G__8325_8331, G__8326_8332) : print_one.call(null, G__8324_8330, G__8325_8331, G__8326_8332);
        } else {
        }
        var coll_8333__$1 = cljs.core.next(coll);
        var n_8334 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_8333__$1 && (n_8334 == null || !(n_8334 === 0))) {
            cljs.core._write(writer, sep);
            var G__8327_8335 = cljs.core.first(coll_8333__$1);
            var G__8328_8336 = writer;
            var G__8329_8337 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8327_8335, G__8328_8336, G__8329_8337) : print_one.call(null, G__8327_8335, G__8328_8336, G__8329_8337);
            var G__8338 = cljs.core.next(coll_8333__$1);
            var G__8339 = n_8334 - 1;
            coll_8333__$1 = G__8338;
            n_8334 = G__8339;
            continue;
          } else {
            if (cljs.core.seq(coll_8333__$1) && n_8334 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4185__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4185__auto__)) {
                  return or__4185__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__8322;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8346 = arguments.length;
  var i__4790__auto___8347 = 0;
  while (true) {
    if (i__4790__auto___8347 < len__4789__auto___8346) {
      args__4795__auto__.push(arguments[i__4790__auto___8347]);
      var G__8348 = i__4790__auto___8347 + 1;
      i__4790__auto___8347 = G__8348;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__8342 = cljs.core.seq(ss);
  var chunk__8343 = null;
  var count__8344 = 0;
  var i__8345 = 0;
  while (true) {
    if (i__8345 < count__8344) {
      var s = chunk__8343.cljs$core$IIndexed$_nth$arity$2(null, i__8345);
      cljs.core._write(writer, s);
      var G__8349 = seq__8342;
      var G__8350 = chunk__8343;
      var G__8351 = count__8344;
      var G__8352 = i__8345 + 1;
      seq__8342 = G__8349;
      chunk__8343 = G__8350;
      count__8344 = G__8351;
      i__8345 = G__8352;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__8342);
      if (temp__5753__auto__) {
        var seq__8342__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8342__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__8342__$1);
          var G__8353 = cljs.core.chunk_rest(seq__8342__$1);
          var G__8354 = c__4609__auto__;
          var G__8355 = cljs.core.count(c__4609__auto__);
          var G__8356 = 0;
          seq__8342 = G__8353;
          chunk__8343 = G__8354;
          count__8344 = G__8355;
          i__8345 = G__8356;
          continue;
        } else {
          var s = cljs.core.first(seq__8342__$1);
          cljs.core._write(writer, s);
          var G__8357 = cljs.core.next(seq__8342__$1);
          var G__8358 = null;
          var G__8359 = 0;
          var G__8360 = 0;
          seq__8342 = G__8357;
          chunk__8343 = G__8358;
          count__8344 = G__8359;
          i__8345 = G__8360;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq8340) {
  var G__8341 = cljs.core.first(seq8340);
  var seq8340__$1 = cljs.core.next(seq8340);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8341, seq8340__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj8362 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj8362;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  if (cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__8368 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__8368);
                  } else {
                    return G__8368;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = name == null || goog.string.isEmpty(name) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (ns.length < len) {
                            var G__8371 = ["0", ns].join("");
                            ns = G__8371;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__8369 = obj;
                          var G__8369__$1 = G__8369 == null ? null : G__8369.constructor;
                          if (G__8369__$1 == null) {
                            return null;
                          } else {
                            return G__8369__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__8370 = obj;
                            var G__8370__$1 = G__8370 == null ? null : G__8370.constructor;
                            if (G__8370__$1 == null) {
                              return null;
                            } else {
                              return G__8370__$1.name;
                            }
                          }();
                          var name__$1 = name == null || goog.string.isEmpty(name) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5751__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var alt_impl = temp__5751__auto__;
    var G__8372 = obj;
    var G__8373 = writer;
    var G__8374 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__8372, G__8373, G__8374) : alt_impl.call(null, G__8372, G__8373, G__8374);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__8375 = cljs.core.seq(cljs.core.next(objs));
  var chunk__8376 = null;
  var count__8377 = 0;
  var i__8378 = 0;
  while (true) {
    if (i__8378 < count__8377) {
      var obj = chunk__8376.cljs$core$IIndexed$_nth$arity$2(null, i__8378);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__8379 = seq__8375;
      var G__8380 = chunk__8376;
      var G__8381 = count__8377;
      var G__8382 = i__8378 + 1;
      seq__8375 = G__8379;
      chunk__8376 = G__8380;
      count__8377 = G__8381;
      i__8378 = G__8382;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq(seq__8375);
      if (temp__5753__auto__) {
        var seq__8375__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8375__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first(seq__8375__$1);
          var G__8383 = cljs.core.chunk_rest(seq__8375__$1);
          var G__8384 = c__4609__auto__;
          var G__8385 = cljs.core.count(c__4609__auto__);
          var G__8386 = 0;
          seq__8375 = G__8383;
          chunk__8376 = G__8384;
          count__8377 = G__8385;
          i__8378 = G__8386;
          continue;
        } else {
          var obj = cljs.core.first(seq__8375__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__8387 = cljs.core.next(seq__8375__$1);
          var G__8388 = null;
          var G__8389 = 0;
          var G__8390 = 0;
          seq__8375 = G__8387;
          chunk__8376 = G__8388;
          count__8377 = G__8389;
          i__8378 = G__8390;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__8392 = arguments.length;
  switch(G__8392) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8395 = arguments.length;
  var i__4790__auto___8396 = 0;
  while (true) {
    if (i__4790__auto___8396 < len__4789__auto___8395) {
      args__4795__auto__.push(arguments[i__4790__auto___8396]);
      var G__8397 = i__4790__auto___8396 + 1;
      i__4790__auto___8396 = G__8397;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq8394) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8394));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8399 = arguments.length;
  var i__4790__auto___8400 = 0;
  while (true) {
    if (i__4790__auto___8400 < len__4789__auto___8399) {
      args__4795__auto__.push(arguments[i__4790__auto___8400]);
      var G__8401 = i__4790__auto___8400 + 1;
      i__4790__auto___8400 = G__8401;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq8398) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8398));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8403 = arguments.length;
  var i__4790__auto___8404 = 0;
  while (true) {
    if (i__4790__auto___8404 < len__4789__auto___8403) {
      args__4795__auto__.push(arguments[i__4790__auto___8404]);
      var G__8405 = i__4790__auto___8404 + 1;
      i__4790__auto___8404 = G__8405;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq8402) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8402));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__8406__i = 0, G__8406__a = new Array(arguments.length - 0);
      while (G__8406__i < G__8406__a.length) {
        G__8406__a[G__8406__i] = arguments[G__8406__i + 0];
        ++G__8406__i;
      }
      objs = new cljs.core.IndexedSeq(G__8406__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__8407) {
    var objs = cljs.core.seq(arglist__8407);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8409 = arguments.length;
  var i__4790__auto___8410 = 0;
  while (true) {
    if (i__4790__auto___8410 < len__4789__auto___8409) {
      args__4795__auto__.push(arguments[i__4790__auto___8410]);
      var G__8411 = i__4790__auto___8410 + 1;
      i__4790__auto___8410 = G__8411;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq8408) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8408));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8413 = arguments.length;
  var i__4790__auto___8414 = 0;
  while (true) {
    if (i__4790__auto___8414 < len__4789__auto___8413) {
      args__4795__auto__.push(arguments[i__4790__auto___8414]);
      var G__8415 = i__4790__auto___8414 + 1;
      i__4790__auto___8414 = G__8415;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq8412) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8412));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8417 = arguments.length;
  var i__4790__auto___8418 = 0;
  while (true) {
    if (i__4790__auto___8418 < len__4789__auto___8417) {
      args__4795__auto__.push(arguments[i__4790__auto___8418]);
      var G__8419 = i__4790__auto___8418 + 1;
      i__4790__auto___8418 = G__8419;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq8416) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8416));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8421 = arguments.length;
  var i__4790__auto___8422 = 0;
  while (true) {
    if (i__4790__auto___8422 < len__4789__auto___8421) {
      args__4795__auto__.push(arguments[i__4790__auto___8422]);
      var G__8423 = i__4790__auto___8422 + 1;
      i__4790__auto___8422 = G__8423;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq8420) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8420));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var ns = null;
    var G__8430 = cljs.core.seq(m);
    var vec__8431 = G__8430;
    var seq__8432 = cljs.core.seq(vec__8431);
    var first__8433 = cljs.core.first(seq__8432);
    var seq__8432__$1 = cljs.core.next(seq__8432);
    var vec__8434 = first__8433;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8434, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8434, 1, null);
    var entry = vec__8434;
    var entries = seq__8432__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__8430__$1 = G__8430;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__8443 = G__8430__$1;
      var seq__8444 = cljs.core.seq(vec__8443);
      var first__8445 = cljs.core.first(seq__8444);
      var seq__8444__$1 = cljs.core.next(seq__8444);
      var vec__8446 = first__8445;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8446, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8446, 1, null);
      var entry__$1 = vec__8446;
      var entries__$1 = seq__8444__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__8449 = ns__$2;
              var G__8450 = entries__$1;
              var G__8451 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__8449;
              G__8430__$1 = G__8450;
              lm__$1 = G__8451;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5753__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5753__auto__)) {
              var new_ns = temp__5753__auto__;
              var G__8452 = new_ns;
              var G__8453 = entries__$1;
              var G__8454 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__8452;
              G__8430__$1 = G__8453;
              lm__$1 = G__8454;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__8455_8461 = cljs.core.key(e);
    var G__8456_8462 = w;
    var G__8457_8463 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8455_8461, G__8456_8462, G__8457_8463) : print_one.call(null, G__8455_8461, G__8456_8462, G__8457_8463);
    cljs.core._write(w, " ");
    var G__8458 = cljs.core.val(e);
    var G__8459 = w;
    var G__8460 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8458, G__8459, G__8460) : print_one.call(null, G__8458, G__8459, G__8460);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__8464 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8464, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8464, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8470 = arguments.length;
  var i__4790__auto___8471 = 0;
  while (true) {
    if (i__4790__auto___8471 < len__4789__auto___8470) {
      args__4795__auto__.push(arguments[i__4790__auto___8471]);
      var G__8472 = i__4790__auto___8471 + 1;
      i__4790__auto___8471 = G__8472;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq8467) {
  var G__8468 = cljs.core.first(seq8467);
  var seq8467__$1 = cljs.core.next(seq8467);
  var G__8469 = cljs.core.first(seq8467__$1);
  var seq8467__$2 = cljs.core.next(seq8467__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8468, G__8469, seq8467__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__8474 = arguments.length;
  switch(G__8474) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__8476_SHARP_, p2__8477_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__8476_SHARP_, p2__8477_SHARP_) : rf.call(null, p1__8476_SHARP_, p2__8477_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function() {
    var G__8478 = null;
    var G__8478__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__8478__1 = function(result) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
    };
    var G__8478__2 = function(result, input) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
    };
    G__8478 = function(result, input) {
      switch(arguments.length) {
        case 0:
          return G__8478__0.call(this);
        case 1:
          return G__8478__1.call(this, result);
        case 2:
          return G__8478__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8478.cljs$core$IFn$_invoke$arity$0 = G__8478__0;
    G__8478.cljs$core$IFn$_invoke$arity$1 = G__8478__1;
    G__8478.cljs$core$IFn$_invoke$arity$2 = G__8478__2;
    return G__8478;
  }();
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__8480 = arguments.length;
  switch(G__8480) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__8484 = null;
      var G__8484__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8484__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__8484__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__8481 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__8482 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__8481, G__8482) : retf.call(null, G__8481, G__8482);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__8484 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8484__0.call(this);
          case 1:
            return G__8484__1.call(this, result);
          case 2:
            return G__8484__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8484.cljs$core$IFn$_invoke$arity$0 = G__8484__0;
      G__8484.cljs$core$IFn$_invoke$arity$1 = G__8484__1;
      G__8484.cljs$core$IFn$_invoke$arity$2 = G__8484__2;
      return G__8484;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__8486 = arguments.length;
  switch(G__8486) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__8488 = null;
      var G__8488__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8488__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8488__2 = function(result, input) {
        var prior = cljs.core.deref(pa);
        cljs.core.vreset_BANG_(pa, input);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__8488 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8488__0.call(this);
          case 1:
            return G__8488__1.call(this, result);
          case 2:
            return G__8488__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8488.cljs$core$IFn$_invoke$arity$0 = G__8488__0;
      G__8488.cljs$core$IFn$_invoke$arity$1 = G__8488__1;
      G__8488.cljs$core$IFn$_invoke$arity$2 = G__8488__2;
      return G__8488;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__8490 = arguments.length;
  switch(G__8490) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__8492 = null;
  var G__8492__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__8492__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__8492 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8492__1.call(this, x);
      case 2:
        return G__8492__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8492.cljs$core$IFn$_invoke$arity$1 = G__8492__1;
  G__8492.cljs$core$IFn$_invoke$arity$2 = G__8492__2;
  return G__8492;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__8493 = null;
  var G__8493__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__8493__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__8493 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__8493__1.call(this, x);
      case 2:
        return G__8493__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8493.cljs$core$IFn$_invoke$arity$1 = G__8493__1;
  G__8493.cljs$core$IFn$_invoke$arity$2 = G__8493__2;
  return G__8493;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
goog.object.set(cljs.core.Eduction.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4728__auto__ = this;
  return cljs.core.es6_iterator(this__4728__auto__);
});
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8495 = arguments.length;
  var i__4790__auto___8496 = 0;
  while (true) {
    if (i__4790__auto___8496 < len__4789__auto___8495) {
      args__4795__auto__.push(arguments[i__4790__auto___8496]);
      var G__8497 = i__4790__auto___8496 + 1;
      i__4790__auto___8496 = G__8497;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq8494) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8494));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8499_SHARP_, p2__8498_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__8498_SHARP_) : proc.call(null, p2__8498_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = cljs.core._clj__GT_js["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = cljs.core._key__GT_js["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__8501 = arguments.length;
  switch(G__8501) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8555 = arguments.length;
  var i__4790__auto___8556 = 0;
  while (true) {
    if (i__4790__auto___8556 < len__4789__auto___8555) {
      args__4795__auto__.push(arguments[i__4790__auto___8556]);
      var G__8557 = i__4790__auto___8556 + 1;
      i__4790__auto___8556 = G__8557;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__8506) {
  var map__8507 = p__8506;
  var map__8507__$1 = (!(map__8507 == null) ? map__8507.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8507.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8507) : map__8507;
  var options = map__8507__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__8507__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function cljs$core$keyfn(k) {
    return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
  };
  var thisfn = function cljs$core$thisfn(x__$1) {
    if (x__$1 == null) {
      return null;
    } else {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
        return cljs.core._clj__GT_js(x__$1);
      } else {
        if (x__$1 instanceof cljs.core.Keyword) {
          return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Symbol) {
            return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
          } else {
            if (cljs.core.map_QMARK_(x__$1)) {
              var m = {};
              var seq__8535_8558 = cljs.core.seq(x__$1);
              var chunk__8536_8559 = null;
              var count__8537_8560 = 0;
              var i__8538_8561 = 0;
              while (true) {
                if (i__8538_8561 < count__8537_8560) {
                  var vec__8545_8562 = chunk__8536_8559.cljs$core$IIndexed$_nth$arity$2(null, i__8538_8561);
                  var k_8563 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8545_8562, 0, null);
                  var v_8564 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8545_8562, 1, null);
                  goog.object.set(m, keyfn(k_8563), cljs$core$thisfn(v_8564));
                  var G__8565 = seq__8535_8558;
                  var G__8566 = chunk__8536_8559;
                  var G__8567 = count__8537_8560;
                  var G__8568 = i__8538_8561 + 1;
                  seq__8535_8558 = G__8565;
                  chunk__8536_8559 = G__8566;
                  count__8537_8560 = G__8567;
                  i__8538_8561 = G__8568;
                  continue;
                } else {
                  var temp__5753__auto___8569 = cljs.core.seq(seq__8535_8558);
                  if (temp__5753__auto___8569) {
                    var seq__8535_8570__$1 = temp__5753__auto___8569;
                    if (cljs.core.chunked_seq_QMARK_(seq__8535_8570__$1)) {
                      var c__4609__auto___8571 = cljs.core.chunk_first(seq__8535_8570__$1);
                      var G__8572 = cljs.core.chunk_rest(seq__8535_8570__$1);
                      var G__8573 = c__4609__auto___8571;
                      var G__8574 = cljs.core.count(c__4609__auto___8571);
                      var G__8575 = 0;
                      seq__8535_8558 = G__8572;
                      chunk__8536_8559 = G__8573;
                      count__8537_8560 = G__8574;
                      i__8538_8561 = G__8575;
                      continue;
                    } else {
                      var vec__8548_8576 = cljs.core.first(seq__8535_8570__$1);
                      var k_8577 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8548_8576, 0, null);
                      var v_8578 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8548_8576, 1, null);
                      goog.object.set(m, keyfn(k_8577), cljs$core$thisfn(v_8578));
                      var G__8579 = cljs.core.next(seq__8535_8570__$1);
                      var G__8580 = null;
                      var G__8581 = 0;
                      var G__8582 = 0;
                      seq__8535_8558 = G__8579;
                      chunk__8536_8559 = G__8580;
                      count__8537_8560 = G__8581;
                      i__8538_8561 = G__8582;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return m;
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                var arr = [];
                var seq__8551_8583 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                var chunk__8552_8584 = null;
                var count__8553_8585 = 0;
                var i__8554_8586 = 0;
                while (true) {
                  if (i__8554_8586 < count__8553_8585) {
                    var x_8587__$2 = chunk__8552_8584.cljs$core$IIndexed$_nth$arity$2(null, i__8554_8586);
                    arr.push(x_8587__$2);
                    var G__8588 = seq__8551_8583;
                    var G__8589 = chunk__8552_8584;
                    var G__8590 = count__8553_8585;
                    var G__8591 = i__8554_8586 + 1;
                    seq__8551_8583 = G__8588;
                    chunk__8552_8584 = G__8589;
                    count__8553_8585 = G__8590;
                    i__8554_8586 = G__8591;
                    continue;
                  } else {
                    var temp__5753__auto___8592 = cljs.core.seq(seq__8551_8583);
                    if (temp__5753__auto___8592) {
                      var seq__8551_8593__$1 = temp__5753__auto___8592;
                      if (cljs.core.chunked_seq_QMARK_(seq__8551_8593__$1)) {
                        var c__4609__auto___8594 = cljs.core.chunk_first(seq__8551_8593__$1);
                        var G__8595 = cljs.core.chunk_rest(seq__8551_8593__$1);
                        var G__8596 = c__4609__auto___8594;
                        var G__8597 = cljs.core.count(c__4609__auto___8594);
                        var G__8598 = 0;
                        seq__8551_8583 = G__8595;
                        chunk__8552_8584 = G__8596;
                        count__8553_8585 = G__8597;
                        i__8554_8586 = G__8598;
                        continue;
                      } else {
                        var x_8599__$2 = cljs.core.first(seq__8551_8593__$1);
                        arr.push(x_8599__$2);
                        var G__8600 = cljs.core.next(seq__8551_8593__$1);
                        var G__8601 = null;
                        var G__8602 = 0;
                        var G__8603 = 0;
                        seq__8551_8583 = G__8600;
                        chunk__8552_8584 = G__8601;
                        count__8553_8585 = G__8602;
                        i__8554_8586 = G__8603;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return arr;
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq8504) {
  var G__8505 = cljs.core.first(seq8504);
  var seq8504__$1 = cljs.core.next(seq8504);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8505, seq8504__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4488__auto__.call(null, x, options);
    } else {
      var m__4485__auto__ = cljs.core._js__GT_clj["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4485__auto__.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__8609 = arguments.length;
  switch(G__8609) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8614 = arguments.length;
      var i__4790__auto___8615 = 0;
      while (true) {
        if (i__4790__auto___8615 < len__4789__auto___8614) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8615]);
          var G__8616 = i__4790__auto___8615 + 1;
          i__4790__auto___8615 = G__8616;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__8610 = opts;
  var map__8610__$1 = (!(map__8610 == null) ? map__8610.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8610.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8610) : map__8610;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8610__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function cljs$core$thisfn(x__$1) {
    if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
      return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
    } else {
      if (cljs.core.seq_QMARK_(x__$1)) {
        return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
      } else {
        if (cljs.core.map_entry_QMARK_(x__$1)) {
          return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8604_SHARP_, p2__8605_SHARP_) {
                return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__8604_SHARP_, cljs$core$thisfn(p2__8605_SHARP_));
              }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, k) {
                  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq8607) {
  var G__8608 = cljs.core.first(seq8607);
  var seq8607__$1 = cljs.core.next(seq8607);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8608, seq8607__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__8617__delegate = function(args) {
      var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
      if (v === cljs.core.lookup_sentinel) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      } else {
        return v;
      }
    };
    var G__8617 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8618__i = 0, G__8618__a = new Array(arguments.length - 0);
        while (G__8618__i < G__8618__a.length) {
          G__8618__a[G__8618__i] = arguments[G__8618__i + 0];
          ++G__8618__i;
        }
        args = new cljs.core.IndexedSeq(G__8618__a, 0, null);
      }
      return G__8617__delegate.call(this, args);
    };
    G__8617.cljs$lang$maxFixedArity = 0;
    G__8617.cljs$lang$applyTo = function(arglist__8619) {
      var args = cljs.core.seq(arglist__8619);
      return G__8617__delegate(args);
    };
    G__8617.cljs$core$IFn$_invoke$arity$variadic = G__8617__delegate;
    return G__8617;
  }();
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__8623 = arguments.length;
  switch(G__8623) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8625 = arguments.length;
      var i__4790__auto___8626 = 0;
      while (true) {
        if (i__4790__auto___8626 < len__4789__auto___8625) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8626]);
          var G__8627 = i__4790__auto___8626 + 1;
          i__4790__auto___8626 = G__8627;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__8628 = ret;
      f = G__8628;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq8621) {
  var G__8622 = cljs.core.first(seq8621);
  var seq8621__$1 = cljs.core.next(seq8621);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8622, seq8621__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__8630 = arguments.length;
  switch(G__8630) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__8632 = Math.random() * n;
  return Math.floor(G__8632);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8635 = arguments.length;
  var i__4790__auto___8636 = 0;
  while (true) {
    if (i__4790__auto___8636 < len__4789__auto___8635) {
      args__4795__auto__.push(arguments[i__4790__auto___8636]);
      var G__8637 = i__4790__auto___8636 + 1;
      i__4790__auto___8636 = G__8637;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq8633) {
  var G__8634 = cljs.core.first(seq8633);
  var seq8633__$1 = cljs.core.next(seq8633);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8634, seq8633__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__8639 = arguments.length;
  switch(G__8639) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4185__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__8642 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__8642.cljs$core$IFn$_invoke$arity$1 ? fexpr__8642.cljs$core$IFn$_invoke$arity$1(child) : fexpr__8642.call(null, child);
    }(), parent);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      if (cljs.core.vector_QMARK_(parent)) {
        if (cljs.core.vector_QMARK_(child)) {
          if (cljs.core.count(parent) === cljs.core.count(child)) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__8644 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__8645 = i + 1;
                ret = G__8644;
                i = G__8645;
                continue;
              }
              break;
            }
          } else {
            return false;
          }
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__8647 = arguments.length;
  switch(G__8647) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__8650 = arguments.length;
  switch(G__8650) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__8653 = arguments.length;
  switch(G__8653) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__8656 = arguments.length;
  switch(G__8656) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(m, source, sources, target, targets) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, k) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
    }, m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
  };
  var or__4185__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__8662 = arguments.length;
  switch(G__8662) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__8658_SHARP_) {
    return cljs.core.cons(cljs.core.first(p1__8658_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__8658_SHARP_), cljs.core.second(p1__8658_SHARP_)));
  }, cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8659_SHARP_, p2__8660_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__8659_SHARP_, p2__8660_SHARP_);
    }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__8664 = cljs.core.deref(prefer_table);
    return fexpr__8664.cljs$core$IFn$_invoke$arity$1 ? fexpr__8664.cljs$core$IFn$_invoke$arity$1(x) : fexpr__8664.call(null, x);
  }();
  var or__4185__auto__ = cljs.core.truth_(function() {
    var and__4174__auto__ = xprefs;
    if (cljs.core.truth_(and__4174__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4174__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__8668 = x;
            var G__8669 = cljs.core.first(ps);
            var G__8670 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__8668, G__8669, G__8670) : cljs.core.prefers_STAR_.call(null, G__8668, G__8669, G__8670);
          }())) {
          } else {
          }
          var G__8677 = cljs.core.rest(ps);
          ps = G__8677;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4185__auto____$1)) {
      return or__4185__auto____$1;
    } else {
      var or__4185__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__8674 = cljs.core.first(ps);
              var G__8675 = y;
              var G__8676 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__8674, G__8675, G__8676) : cljs.core.prefers_STAR_.call(null, G__8674, G__8675, G__8676);
            }())) {
            } else {
            }
            var G__8678 = cljs.core.rest(ps);
            ps = G__8678;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4185__auto____$2)) {
        return or__4185__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4185__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__8679) {
    var vec__8680 = p__8679;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8680, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8680, 1, null);
    var e = vec__8680;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5751__auto__ = best_entry == null ? function() {
      var fexpr__8684 = cljs.core.deref(method_table);
      return fexpr__8684.cljs$core$IFn$_invoke$arity$1 ? fexpr__8684.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__8684.call(null, default_dispatch_val);
    }() : false;
    if (cljs.core.truth_(temp__5751__auto__)) {
      var entry = temp__5751__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._reset[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4488__auto__.call(null, mf);
    } else {
      var m__4485__auto__ = cljs.core._reset["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4485__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._add_method[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4488__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4485__auto__ = cljs.core._add_method["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4485__auto__.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._remove_method[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4488__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4485__auto__ = cljs.core._remove_method["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4485__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._prefer_method[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4488__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4485__auto__ = cljs.core._prefer_method["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4485__auto__.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._get_method[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4488__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4485__auto__ = cljs.core._get_method["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4485__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._methods[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4488__auto__.call(null, mf);
    } else {
      var m__4485__auto__ = cljs.core._methods["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4485__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._prefers[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4488__auto__.call(null, mf);
    } else {
      var m__4485__auto__ = cljs.core._prefers["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4485__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4488__auto__.call(null, mf);
    } else {
      var m__4485__auto__ = cljs.core._default_dispatch_val["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4485__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4487__auto__ = mf == null ? null : mf;
    var m__4488__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4488__auto__.call(null, mf);
    } else {
      var m__4485__auto__ = cljs.core._dispatch_fn["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4485__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__8687 = null;
  var G__8687__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__8687__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__8687__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__8687__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__8687__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__8687__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__8687__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__8687__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__8687__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__8687__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__8687__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__8687__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__8687__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__8687__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__8687__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__8687__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__8687__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__8687__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__8687__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__8687__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__8687__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__8687__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__8687 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8687__1.call(this, self__);
      case 2:
        return G__8687__2.call(this, self__, a);
      case 3:
        return G__8687__3.call(this, self__, a, b);
      case 4:
        return G__8687__4.call(this, self__, a, b, c);
      case 5:
        return G__8687__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8687__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8687__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__8687__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__8687__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__8687__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__8687__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__8687__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__8687__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__8687__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__8687__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__8687__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8687__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8687__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8687__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8687__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8687__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8687__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__8687.cljs$core$IFn$_invoke$arity$1 = G__8687__1;
  G__8687.cljs$core$IFn$_invoke$arity$2 = G__8687__2;
  G__8687.cljs$core$IFn$_invoke$arity$3 = G__8687__3;
  G__8687.cljs$core$IFn$_invoke$arity$4 = G__8687__4;
  G__8687.cljs$core$IFn$_invoke$arity$5 = G__8687__5;
  G__8687.cljs$core$IFn$_invoke$arity$6 = G__8687__6;
  G__8687.cljs$core$IFn$_invoke$arity$7 = G__8687__7;
  G__8687.cljs$core$IFn$_invoke$arity$8 = G__8687__8;
  G__8687.cljs$core$IFn$_invoke$arity$9 = G__8687__9;
  G__8687.cljs$core$IFn$_invoke$arity$10 = G__8687__10;
  G__8687.cljs$core$IFn$_invoke$arity$11 = G__8687__11;
  G__8687.cljs$core$IFn$_invoke$arity$12 = G__8687__12;
  G__8687.cljs$core$IFn$_invoke$arity$13 = G__8687__13;
  G__8687.cljs$core$IFn$_invoke$arity$14 = G__8687__14;
  G__8687.cljs$core$IFn$_invoke$arity$15 = G__8687__15;
  G__8687.cljs$core$IFn$_invoke$arity$16 = G__8687__16;
  G__8687.cljs$core$IFn$_invoke$arity$17 = G__8687__17;
  G__8687.cljs$core$IFn$_invoke$arity$18 = G__8687__18;
  G__8687.cljs$core$IFn$_invoke$arity$19 = G__8687__19;
  G__8687.cljs$core$IFn$_invoke$arity$20 = G__8687__20;
  G__8687.cljs$core$IFn$_invoke$arity$21 = G__8687__21;
  G__8687.cljs$core$IFn$_invoke$arity$22 = G__8687__22;
  return G__8687;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args8685) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8685)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5751__auto__ = function() {
    var fexpr__8686 = cljs.core.deref(self__.method_cache);
    return fexpr__8686.cljs$core$IFn$_invoke$arity$1 ? fexpr__8686.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__8686.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5751__auto__)) {
    var target_fn = temp__5751__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return goog.array.defaultCompare(self__.uuid, other.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__8690 = arguments.length;
  switch(G__8690) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__8692 = v;
  var G__8692__$1 = G__8692 instanceof cljs.core.Keyword ? G__8692.fqn : null;
  switch(G__8692__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8694_SHARP_, p2__8695_SHARP_) {
      goog.object.set(p1__8694_SHARP_, p2__8695_SHARP_, true);
      return p1__8694_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__8698 = cljs.core.next(ks__$1);
          var G__8699 = [function() {
            var G__8697 = ret;
            if (!(ret === "")) {
              return [G__8697, "|"].join("");
            } else {
              return G__8697;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__8698;
          ret = G__8699;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_8700 = 0;
  while (true) {
    if (i_8700 < name.length) {
      var c_8701 = name.charAt(i_8700);
      var sub_8702 = goog.object.get(cljs.core.CHAR_MAP, c_8701);
      if (!(sub_8702 == null)) {
        sb.append(sub_8702);
      } else {
        sb.append(c_8701);
      }
      var G__8703 = i_8700 + 1;
      i_8700 = G__8703;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [name_SINGLEQUOTE_, "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = goog.string.endsWith(munged_name, "$") ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5751__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var match = temp__5751__auto__;
      var vec__8707 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8707, 0, null);
      var G__8710 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__8711 = r.lastIndex;
      ret = G__8710;
      last_match_end = G__8711;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__8713 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__8712 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__8712.cljs$core$IFn$_invoke$arity$1 ? fexpr__8712.cljs$core$IFn$_invoke$arity$1(G__8713) : fexpr__8712.call(null, G__8713);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__8714 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__8715 = null;
    var count__8716 = 0;
    var i__8717 = 0;
    while (true) {
      if (i__8717 < count__8716) {
        var tap = chunk__8715.cljs$core$IIndexed$_nth$arity$2(null, i__8717);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e8720) {
          if (e8720 instanceof Error) {
            var ex_8722 = e8720;
          } else {
            throw e8720;
          }
        }
        var G__8723 = seq__8714;
        var G__8724 = chunk__8715;
        var G__8725 = count__8716;
        var G__8726 = i__8717 + 1;
        seq__8714 = G__8723;
        chunk__8715 = G__8724;
        count__8716 = G__8725;
        i__8717 = G__8726;
        continue;
      } else {
        var temp__5753__auto__ = cljs.core.seq(seq__8714);
        if (temp__5753__auto__) {
          var seq__8714__$1 = temp__5753__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__8714__$1)) {
            var c__4609__auto__ = cljs.core.chunk_first(seq__8714__$1);
            var G__8727 = cljs.core.chunk_rest(seq__8714__$1);
            var G__8728 = c__4609__auto__;
            var G__8729 = cljs.core.count(c__4609__auto__);
            var G__8730 = 0;
            seq__8714 = G__8727;
            chunk__8715 = G__8728;
            count__8716 = G__8729;
            i__8717 = G__8730;
            continue;
          } else {
            var tap = cljs.core.first(seq__8714__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e8721) {
              if (e8721 instanceof Error) {
                var ex_8731 = e8721;
              } else {
                throw e8721;
              }
            }
            var G__8732 = cljs.core.next(seq__8714__$1);
            var G__8733 = null;
            var G__8734 = 0;
            var G__8735 = 0;
            seq__8714 = G__8732;
            chunk__8715 = G__8733;
            count__8716 = G__8734;
            i__8717 = G__8735;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__8714 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__8715 = null;
    var count__8716 = 0;
    var i__8717 = 0;
    while (true) {
      if (i__8717 < count__8716) {
        var tap = chunk__8715.cljs$core$IIndexed$_nth$arity$2(null, i__8717);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e8720) {
          if (e8720 instanceof Error) {
            var ex_8736 = e8720;
          } else {
            throw e8720;
          }
        }
        var G__8737 = seq__8714;
        var G__8738 = chunk__8715;
        var G__8739 = count__8716;
        var G__8740 = i__8717 + 1;
        seq__8714 = G__8737;
        chunk__8715 = G__8738;
        count__8716 = G__8739;
        i__8717 = G__8740;
        continue;
      } else {
        var temp__5753__auto__ = cljs.core.seq(seq__8714);
        if (temp__5753__auto__) {
          var seq__8714__$1 = temp__5753__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__8714__$1)) {
            var c__4609__auto__ = cljs.core.chunk_first(seq__8714__$1);
            var G__8741 = cljs.core.chunk_rest(seq__8714__$1);
            var G__8742 = c__4609__auto__;
            var G__8743 = cljs.core.count(c__4609__auto__);
            var G__8744 = 0;
            seq__8714 = G__8741;
            chunk__8715 = G__8742;
            count__8716 = G__8743;
            i__8717 = G__8744;
            continue;
          } else {
            var tap = cljs.core.first(seq__8714__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e8721) {
              if (e8721 instanceof Error) {
                var ex_8745 = e8721;
              } else {
                throw e8721;
              }
            }
            var G__8746 = cljs.core.next(seq__8714__$1);
            var G__8747 = null;
            var G__8748 = 0;
            var G__8749 = 0;
            seq__8714 = G__8746;
            chunk__8715 = G__8747;
            count__8716 = G__8748;
            i__8717 = G__8749;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__8750 = goog.object.get(ctxt, cljs.core.first(xs));
        var G__8751 = cljs.core.next(xs);
        ctxt = G__8750;
        xs = G__8751;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__8752 = cljs.core._STAR_target_STAR_;
  switch(G__8752) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4174__auto__ = ctxt;
              if (cljs.core.truth_(and__4174__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4174__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e8753) {
            if (e8753 instanceof ReferenceError) {
              var e = e8753;
              return null;
            } else {
              throw e8753;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core._STAR_target_STAR_].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function cljs$core$ns_interns_STAR__$_step(ret, k) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function() {
      return goog.object.get(ns_obj, k);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__8756 = arguments.length;
  switch(G__8756) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.out.println(s);
      });
      return cljs.core.set_print_err_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.error.println(s);
      });
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
if (COMPILED) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("nodejs", cljs.core._STAR_target_STAR_)) {
    goog.global = global;
  } else {
  }
} else {
}
;goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("malli.impl.util");
goog.require("cljs.core");
malli.impl.util._PLUS_max_size_PLUS_ = Number.MAX_VALUE;
malli.impl.util._tagged = function malli$impl$util$_tagged(k, v) {
  return new cljs.core.MapEntry(k, v, null);
};
malli.impl.util._tagged_QMARK_ = function malli$impl$util$_tagged_QMARK_(v) {
  return v instanceof cljs.core.MapEntry;
};
malli.impl.util._invalid_QMARK_ = function malli$impl$util$_invalid_QMARK_(x) {
  return cljs.core.keyword_identical_QMARK_.call(null, x, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
};
malli.impl.util._map_valid = function malli$impl$util$_map_valid(f, v) {
  if (malli.impl.util._invalid_QMARK_.call(null, v)) {
    return v;
  } else {
    return f.call(null, v);
  }
};
malli.impl.util._map_invalid = function malli$impl$util$_map_invalid(f, v) {
  if (malli.impl.util._invalid_QMARK_.call(null, v)) {
    return f.call(null, v);
  } else {
    return v;
  }
};
malli.impl.util._error = function malli$impl$util$_error(var_args) {
  var G__8730 = arguments.length;
  switch(G__8730) {
    case 4:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.impl.util._error.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$4 = function(path, in$, schema, value) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "in", "in", -1531184865), in$, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "value", "value", 305978217), value], null);
};
malli.impl.util._error.cljs$core$IFn$_invoke$arity$5 = function(path, in$, schema, value, type) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "in", "in", -1531184865), in$, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "type", "type", 1174270348), type], null);
};
malli.impl.util._error.cljs$lang$maxFixedArity = 5;
malli.impl.util._vmap = function malli$impl$util$_vmap(var_args) {
  var G__8733 = arguments.length;
  switch(G__8733) {
    case 1:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.call(null, cljs.core.identity, os);
};
malli.impl.util._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f), os);
};
malli.impl.util._vmap.cljs$lang$maxFixedArity = 2;
malli.impl.util._every_pred = function malli$impl$util$_every_pred(preds) {
  return function(m) {
    return cljs.core.boolean$.call(null, cljs.core.reduce.call(null, function(p1__8739_SHARP_, p2__8738_SHARP_) {
      var or__4185__auto__ = p2__8738_SHARP_.call(null, m);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.reduced.call(null, false);
      }
    }, true, preds));
  };
};
malli.impl.util._some_pred = function malli$impl$util$_some_pred(preds) {
  return function(x) {
    return cljs.core.boolean$.call(null, cljs.core.some.call(null, function(p1__8740_SHARP_) {
      return p1__8740_SHARP_.call(null, x);
    }, preds));
  };
};
goog.provide("malli.impl.regex");
goog.require("cljs.core");
goog.require("malli.impl.util");
malli.impl.regex.Driver = function() {
};
malli.impl.regex.succeed_BANG_ = function malli$impl$regex$succeed_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeed_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeed_BANG_$arity$1(self);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.succeed_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self);
    } else {
      var m__4485__auto__ = malli.impl.regex.succeed_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.succeed!", self);
      }
    }
  }
};
malli.impl.regex.succeeded_QMARK_ = function malli$impl$regex$succeeded_QMARK_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$succeeded_QMARK_$arity$1(self);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.succeeded_QMARK_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self);
    } else {
      var m__4485__auto__ = malli.impl.regex.succeeded_QMARK_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.succeeded?", self);
      }
    }
  }
};
malli.impl.regex.pop_thunk_BANG_ = function malli$impl$regex$pop_thunk_BANG_(self) {
  if (!(self == null) && !(self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 == null)) {
    return self.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1(self);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.pop_thunk_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self);
    } else {
      var m__4485__auto__ = malli.impl.regex.pop_thunk_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "Driver.pop-thunk!", self);
      }
    }
  }
};
malli.impl.regex.IValidationDriver = function() {
};
malli.impl.regex.noncaching_park_validator_BANG_ = function malli$impl$regex$noncaching_park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.noncaching_park_validator_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.noncaching_park_validator_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, validator, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IValidationDriver.noncaching-park-validator!", driver);
      }
    }
  }
};
malli.impl.regex.park_validator_BANG_ = function malli$impl$regex$park_validator_BANG_(driver, validator, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6(driver, validator, regs, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.park_validator_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, validator, regs, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.park_validator_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, validator, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IValidationDriver.park-validator!", driver);
      }
    }
  }
};
malli.impl.regex.IExplanationDriver = function() {
};
malli.impl.regex.noncaching_park_explainer_BANG_ = function malli$impl$regex$noncaching_park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.noncaching_park_explainer_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.noncaching_park_explainer_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, explainer, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.noncaching-park-explainer!", driver);
      }
    }
  }
};
malli.impl.regex.park_explainer_BANG_ = function malli$impl$regex$park_explainer_BANG_(driver, explainer, regs, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 == null)) {
    return driver.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6(driver, explainer, regs, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.park_explainer_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, explainer, regs, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.park_explainer_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, explainer, regs, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.park-explainer!", driver);
      }
    }
  }
};
malli.impl.regex.value_path = function malli$impl$regex$value_path(self, pos) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$value_path$arity$2 == null)) {
    return self.malli$impl$regex$IExplanationDriver$value_path$arity$2(self, pos);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.value_path[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self, pos);
    } else {
      var m__4485__auto__ = malli.impl.regex.value_path["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self, pos);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.value-path", self);
      }
    }
  }
};
malli.impl.regex.fail_BANG_ = function malli$impl$regex$fail_BANG_(self, pos, errors_STAR_) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 == null)) {
    return self.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3(self, pos, errors_STAR_);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.fail_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self, pos, errors_STAR_);
    } else {
      var m__4485__auto__ = malli.impl.regex.fail_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self, pos, errors_STAR_);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.fail!", self);
      }
    }
  }
};
malli.impl.regex.latest_errors = function malli$impl$regex$latest_errors(self) {
  if (!(self == null) && !(self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 == null)) {
    return self.malli$impl$regex$IExplanationDriver$latest_errors$arity$1(self);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.latest_errors[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self);
    } else {
      var m__4485__auto__ = malli.impl.regex.latest_errors["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "IExplanationDriver.latest-errors", self);
      }
    }
  }
};
malli.impl.regex.IParseDriver = function() {
};
malli.impl.regex.noncaching_park_transformer_BANG_ = function malli$impl$regex$noncaching_park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.noncaching_park_transformer_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.noncaching_park_transformer_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.noncaching-park-transformer!", driver);
      }
    }
  }
};
malli.impl.regex.park_transformer_BANG_ = function malli$impl$regex$park_transformer_BANG_(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  if (!(driver == null) && !(driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 == null)) {
    return driver.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7(driver, transformer, regs, coll_STAR_, pos, coll, k);
  } else {
    var x__4487__auto__ = driver == null ? null : driver;
    var m__4488__auto__ = malli.impl.regex.park_transformer_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
    } else {
      var m__4485__auto__ = malli.impl.regex.park_transformer_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, driver, transformer, regs, coll_STAR_, pos, coll, k);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.park-transformer!", driver);
      }
    }
  }
};
malli.impl.regex.succeed_with_BANG_ = function malli$impl$regex$succeed_with_BANG_(self, v) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 == null)) {
    return self.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2(self, v);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.succeed_with_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self, v);
    } else {
      var m__4485__auto__ = malli.impl.regex.succeed_with_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.succeed-with!", self);
      }
    }
  }
};
malli.impl.regex.success_result = function malli$impl$regex$success_result(self) {
  if (!(self == null) && !(self.malli$impl$regex$IParseDriver$success_result$arity$1 == null)) {
    return self.malli$impl$regex$IParseDriver$success_result$arity$1(self);
  } else {
    var x__4487__auto__ = self == null ? null : self;
    var m__4488__auto__ = malli.impl.regex.success_result[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, self);
    } else {
      var m__4485__auto__ = malli.impl.regex.success_result["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, self);
      } else {
        throw cljs.core.missing_protocol.call(null, "IParseDriver.success-result", self);
      }
    }
  }
};
malli.impl.regex.item_validator = function malli$impl$regex$item_validator(valid_QMARK_) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = cljs.core.seq.call(null, coll);
      if (and__4174__auto__) {
        return valid_QMARK_.call(null, cljs.core.first.call(null, coll));
      } else {
        return and__4174__auto__;
      }
    }())) {
      return k.call(null, pos + 1, cljs.core.rest.call(null, coll));
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_explainer = function malli$impl$regex$item_explainer(path, schema, schema_explainer) {
  return function(driver, _, pos, coll, k) {
    var in$ = malli.impl.regex.value_path.call(null, driver, pos);
    if (cljs.core.seq.call(null, coll)) {
      var errors = schema_explainer.call(null, cljs.core.first.call(null, coll), in$, cljs.core.PersistentVector.EMPTY);
      if (cljs.core.seq.call(null, errors)) {
        return malli.impl.regex.fail_BANG_.call(null, driver, pos, errors);
      } else {
        return k.call(null, pos + 1, cljs.core.rest.call(null, coll));
      }
    } else {
      return malli.impl.regex.fail_BANG_.call(null, driver, pos, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.impl.util._error.call(null, path, in$, schema, null, new cljs.core.Keyword("malli.core", "end-of-input", "malli.core/end-of-input", -491237771))], null));
    }
  };
};
malli.impl.regex.item_parser = function malli$impl$regex$item_parser(parse) {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = parse.call(null, cljs.core.first.call(null, coll));
      if (cljs.core._EQ_.call(null, v, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900))) {
        return null;
      } else {
        return k.call(null, v, pos + 1, cljs.core.rest.call(null, coll));
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_unparser = function malli$impl$regex$item_unparser(unparse) {
  return function(v) {
    return malli.impl.util._map_valid.call(null, cljs.core.vector, unparse.call(null, v));
  };
};
malli.impl.regex.item_encoder = function malli$impl$regex$item_encoder(valid_QMARK_, encode) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = cljs.core.first.call(null, coll);
      if (cljs.core.truth_(valid_QMARK_.call(null, v))) {
        return k.call(null, cljs.core.conj.call(null, coll_STAR_, encode.call(null, v)), pos + 1, cljs.core.rest.call(null, coll));
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_decoder = function malli$impl$regex$item_decoder(decode, valid_QMARK_) {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.seq.call(null, coll)) {
      var v = decode.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(valid_QMARK_.call(null, v))) {
        return k.call(null, cljs.core.conj.call(null, coll_STAR_, v), pos + 1, cljs.core.rest.call(null, coll));
      } else {
        return null;
      }
    } else {
      return null;
    }
  };
};
malli.impl.regex.item_transformer = function malli$impl$regex$item_transformer(method, validator, t) {
  var G__8743 = method;
  var G__8743__$1 = G__8743 instanceof cljs.core.Keyword ? G__8743.fqn : null;
  switch(G__8743__$1) {
    case "encode":
      return malli.impl.regex.item_encoder.call(null, validator, t);
      break;
    case "decode":
      return malli.impl.regex.item_decoder.call(null, t, validator);
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__8743__$1)].join(""));
  }
};
malli.impl.regex.end_validator = function malli$impl$regex$end_validator() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_explainer = function malli$impl$regex$end_explainer(schema, path) {
  return function(driver, _, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, pos, coll);
    } else {
      return malli.impl.regex.fail_BANG_.call(null, driver, pos, new cljs.core.List(null, malli.impl.util._error.call(null, path, malli.impl.regex.value_path.call(null, driver, pos), schema, cljs.core.first.call(null, coll), new cljs.core.Keyword("malli.core", "input-remaining", "malli.core/input-remaining", 372310422)), null, 1, null));
    }
  };
};
malli.impl.regex.end_parser = function malli$impl$regex$end_parser() {
  return function(_, ___$1, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, null, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.end_transformer = function malli$impl$regex$end_transformer() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return k.call(null, coll_STAR_, pos, coll);
    } else {
      return null;
    }
  };
};
malli.impl.regex.pure_parser = function malli$impl$regex$pure_parser(v) {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, v, pos, coll);
  };
};
malli.impl.regex.pure_unparser = function malli$impl$regex$pure_unparser(_) {
  return cljs.core.PersistentVector.EMPTY;
};
malli.impl.regex.fmap_parser = function malli$impl$regex$fmap_parser(f, p) {
  return function(driver, regs, pos, coll, k) {
    return p.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
      return k.call(null, f.call(null, v), pos__$1, coll__$1);
    });
  };
};
malli.impl.regex.entry__GT_regex = function malli$impl$regex$entry__GT_regex(_QMARK_kr) {
  if (cljs.core.vector_QMARK_.call(null, _QMARK_kr)) {
    return cljs.core.get.call(null, _QMARK_kr, 1);
  } else {
    return _QMARK_kr;
  }
};
malli.impl.regex.cat_validator = function malli$impl$regex$cat_validator(var_args) {
  var G__8748 = arguments.length;
  switch(G__8748) {
    case 0:
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8750 = arguments.length;
      var i__4790__auto___8751 = 0;
      while (true) {
        if (i__4790__auto___8751 < len__4789__auto___8750) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8751]);
          var G__8752 = i__4790__auto___8751 + 1;
          i__4790__auto___8751 = G__8752;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(driver, regs, pos, coll, k) {
      return acc.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
      });
    };
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_validator.cljs$lang$applyTo = function(seq8746) {
  var G__8747 = cljs.core.first.call(null, seq8746);
  var seq8746__$1 = cljs.core.next.call(null, seq8746);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8747, seq8746__$1);
};
malli.impl.regex.cat_validator.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_explainer = function malli$impl$regex$cat_explainer(var_args) {
  var G__8756 = arguments.length;
  switch(G__8756) {
    case 0:
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8758 = arguments.length;
      var i__4790__auto___8759 = 0;
      while (true) {
        if (i__4790__auto___8759 < len__4789__auto___8758) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8759]);
          var G__8760 = i__4790__auto___8759 + 1;
          i__4790__auto___8759 = G__8760;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, pos, coll);
  };
};
malli.impl.regex.cat_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(driver, regs, pos, coll, k) {
      return acc.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return r_STAR_.call(null, driver, regs, pos__$1, coll__$1, k);
      });
    };
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_explainer.cljs$lang$applyTo = function(seq8754) {
  var G__8755 = cljs.core.first.call(null, seq8754);
  var seq8754__$1 = cljs.core.next.call(null, seq8754);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8755, seq8754__$1);
};
malli.impl.regex.cat_explainer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_parser = function malli$impl$regex$cat_parser(var_args) {
  var G__8764 = arguments.length;
  switch(G__8764) {
    case 0:
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8766 = arguments.length;
      var i__4790__auto___8767 = 0;
      while (true) {
        if (i__4790__auto___8767 < len__4789__auto___8766) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8767]);
          var G__8768 = i__4790__auto___8767 + 1;
          i__4790__auto___8767 = G__8768;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, cljs.core.PersistentVector.EMPTY, pos, coll);
  };
};
malli.impl.regex.cat_parser.cljs$core$IFn$_invoke$arity$variadic = function(r, rs) {
  var sp = cljs.core.reduce.call(null, function(acc, r__$1) {
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      return r__$1.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return acc.call(null, driver, regs, cljs.core.conj.call(null, coll_STAR_, v), pos__$1, coll__$1, k);
      });
    };
  }, function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  }, cljs.core.reverse.call(null, cljs.core.cons.call(null, r, rs)));
  return function(driver, regs, pos, coll, k) {
    return sp.call(null, driver, regs, cljs.core.PersistentVector.EMPTY, pos, coll, k);
  };
};
malli.impl.regex.cat_parser.cljs$lang$applyTo = function(seq8762) {
  var G__8763 = cljs.core.first.call(null, seq8762);
  var seq8762__$1 = cljs.core.next.call(null, seq8762);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8763, seq8762__$1);
};
malli.impl.regex.cat_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.catn_parser = function malli$impl$regex$catn_parser(var_args) {
  var G__8772 = arguments.length;
  switch(G__8772) {
    case 0:
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8778 = arguments.length;
      var i__4790__auto___8779 = 0;
      while (true) {
        if (i__4790__auto___8779 < len__4789__auto___8778) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8779]);
          var G__8780 = i__4790__auto___8779 + 1;
          i__4790__auto___8779 = G__8780;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, pos, coll, k) {
    return k.call(null, cljs.core.PersistentArrayMap.EMPTY, pos, coll);
  };
};
malli.impl.regex.catn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  var sp = cljs.core.reduce.call(null, function(acc, p__8773) {
    var vec__8774 = p__8773;
    var tag = cljs.core.nth.call(null, vec__8774, 0, null);
    var r = cljs.core.nth.call(null, vec__8774, 1, null);
    return function(driver, regs, m, pos, coll, k) {
      return r.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return acc.call(null, driver, regs, cljs.core.assoc.call(null, m, tag, v), pos__$1, coll__$1, k);
      });
    };
  }, function(_, ___$1, m, pos, coll, k) {
    return k.call(null, m, pos, coll);
  }, cljs.core.reverse.call(null, cljs.core.cons.call(null, kr, krs)));
  return function(driver, regs, pos, coll, k) {
    return sp.call(null, driver, regs, cljs.core.PersistentArrayMap.EMPTY, pos, coll, k);
  };
};
malli.impl.regex.catn_parser.cljs$lang$applyTo = function(seq8770) {
  var G__8771 = cljs.core.first.call(null, seq8770);
  var seq8770__$1 = cljs.core.next.call(null, seq8770);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8771, seq8770__$1);
};
malli.impl.regex.catn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.cat_unparser = function malli$impl$regex$cat_unparser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8783 = arguments.length;
  var i__4790__auto___8784 = 0;
  while (true) {
    if (i__4790__auto___8784 < len__4789__auto___8783) {
      args__4795__auto__.push(arguments[i__4790__auto___8784]);
      var G__8785 = i__4790__auto___8784 + 1;
      i__4790__auto___8784 = G__8785;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.cat_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.vec.call(null, unparsers);
  return function(tup) {
    if (cljs.core.vector_QMARK_.call(null, tup) && cljs.core._EQ_.call(null, cljs.core.count.call(null, tup), cljs.core.count.call(null, unparsers__$1))) {
      return cljs.core.reduce_kv.call(null, function(coll, i, unparser) {
        return malli.impl.util._map_valid.call(null, function(p1__8781_SHARP_) {
          return cljs.core.into.call(null, coll, p1__8781_SHARP_);
        }, unparser.call(null, cljs.core.get.call(null, tup, i)));
      }, cljs.core.PersistentVector.EMPTY, unparsers__$1);
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex.cat_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.cat_unparser.cljs$lang$applyTo = function(seq8782) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8782));
};
malli.impl.regex.catn_unparser = function malli$impl$regex$catn_unparser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8788 = arguments.length;
  var i__4790__auto___8789 = 0;
  while (true) {
    if (i__4790__auto___8789 < len__4789__auto___8788) {
      args__4795__auto__.push(arguments[i__4790__auto___8789]);
      var G__8790 = i__4790__auto___8789 + 1;
      i__4790__auto___8789 = G__8790;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.catn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(m) {
    if (cljs.core.map_QMARK_.call(null, m) && cljs.core._EQ_.call(null, cljs.core.count.call(null, m), cljs.core.count.call(null, unparsers__$1))) {
      return cljs.core.reduce_kv.call(null, function(coll, tag, unparser) {
        var temp__5755__auto__ = cljs.core.find.call(null, m, tag);
        if (temp__5755__auto__ == null) {
          return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
        } else {
          var kv = temp__5755__auto__;
          return malli.impl.util._map_valid.call(null, function(p1__8786_SHARP_) {
            return cljs.core.into.call(null, coll, p1__8786_SHARP_);
          }, unparser.call(null, cljs.core.val.call(null, kv)));
        }
      }, cljs.core.PersistentVector.EMPTY, unparsers__$1);
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex.catn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.catn_unparser.cljs$lang$applyTo = function(seq8787) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8787));
};
malli.impl.regex.cat_transformer = function malli$impl$regex$cat_transformer(var_args) {
  var G__8794 = arguments.length;
  switch(G__8794) {
    case 0:
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8796 = arguments.length;
      var i__4790__auto___8797 = 0;
      while (true) {
        if (i__4790__auto___8797 < len__4789__auto___8796) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8797]);
          var G__8798 = i__4790__auto___8797 + 1;
          i__4790__auto___8797 = G__8798;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(1), 0, null);
      return malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4811__auto__);
  }
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
};
malli.impl.regex.cat_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_kr, _QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr__$1) {
    var r = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr__$1);
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      return acc.call(null, driver, regs, coll_STAR_, pos, coll, function(coll_STAR___$1, pos__$1, coll__$1) {
        return r.call(null, driver, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      });
    };
  }, malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr), _QMARK_krs);
};
malli.impl.regex.cat_transformer.cljs$lang$applyTo = function(seq8792) {
  var G__8793 = cljs.core.first.call(null, seq8792);
  var seq8792__$1 = cljs.core.next.call(null, seq8792);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8793, seq8792__$1);
};
malli.impl.regex.cat_transformer.cljs$lang$maxFixedArity = 1;
malli.impl.regex.alt_validator = function malli$impl$regex$alt_validator(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8800 = arguments.length;
  var i__4790__auto___8801 = 0;
  while (true) {
    if (i__4790__auto___8801 < len__4789__auto___8800) {
      args__4795__auto__.push(arguments[i__4790__auto___8801]);
      var G__8802 = i__4790__auto___8801 + 1;
      i__4790__auto___8801 = G__8802;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.alt_validator.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_validator.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_validator.cljs$lang$applyTo = function(seq8799) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8799));
};
malli.impl.regex.alt_explainer = function malli$impl$regex$alt_explainer(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8804 = arguments.length;
  var i__4790__auto___8805 = 0;
  while (true) {
    if (i__4790__auto___8805 < len__4789__auto___8804) {
      args__4795__auto__.push(arguments[i__4790__auto___8805]);
      var G__8806 = i__4790__auto___8805 + 1;
      i__4790__auto___8805 = G__8806;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.alt_explainer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_explainer_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_explainer_BANG_.call(null, driver, r, regs, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_explainer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_explainer.cljs$lang$applyTo = function(seq8803) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8803));
};
malli.impl.regex.alt_parser = function malli$impl$regex$alt_parser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8808 = arguments.length;
  var i__4790__auto___8809 = 0;
  while (true) {
    if (i__4790__auto___8809 < len__4789__auto___8808) {
      args__4795__auto__.push(arguments[i__4790__auto___8809]);
      var G__8810 = i__4790__auto___8809 + 1;
      i__4790__auto___8809 = G__8810;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.alt_parser.cljs$core$IFn$_invoke$arity$variadic = function(rs) {
  return cljs.core.reduce.call(null, function(r, r_STAR_) {
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR_, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
    };
  }, rs);
};
malli.impl.regex.alt_parser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_parser.cljs$lang$applyTo = function(seq8807) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8807));
};
malli.impl.regex.altn_parser = function malli$impl$regex$altn_parser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8820 = arguments.length;
  var i__4790__auto___8821 = 0;
  while (true) {
    if (i__4790__auto___8821 < len__4789__auto___8820) {
      args__4795__auto__.push(arguments[i__4790__auto___8821]);
      var G__8822 = i__4790__auto___8821 + 1;
      i__4790__auto___8821 = G__8822;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
malli.impl.regex.altn_parser.cljs$core$IFn$_invoke$arity$variadic = function(kr, krs) {
  return cljs.core.reduce.call(null, function(r, p__8813) {
    var vec__8814 = p__8813;
    var tag = cljs.core.nth.call(null, vec__8814, 0, null);
    var r_STAR_ = cljs.core.nth.call(null, vec__8814, 1, null);
    var r_STAR___$1 = malli.impl.regex.fmap_parser.call(null, function(v) {
      return malli.impl.util._tagged.call(null, tag, v);
    }, r_STAR_);
    return function(driver, regs, pos, coll, k) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, r_STAR___$1, regs, pos, coll, k);
      return malli.impl.regex.park_validator_BANG_.call(null, driver, r, regs, pos, coll, k);
    };
  }, function() {
    var vec__8817 = kr;
    var tag = cljs.core.nth.call(null, vec__8817, 0, null);
    var r = cljs.core.nth.call(null, vec__8817, 1, null);
    return malli.impl.regex.fmap_parser.call(null, function(v) {
      return malli.impl.util._tagged.call(null, tag, v);
    }, r);
  }(), krs);
};
malli.impl.regex.altn_parser.cljs$lang$maxFixedArity = 1;
malli.impl.regex.altn_parser.cljs$lang$applyTo = function(seq8811) {
  var G__8812 = cljs.core.first.call(null, seq8811);
  var seq8811__$1 = cljs.core.next.call(null, seq8811);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8812, seq8811__$1);
};
malli.impl.regex.alt_unparser = function malli$impl$regex$alt_unparser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8824 = arguments.length;
  var i__4790__auto___8825 = 0;
  while (true) {
    if (i__4790__auto___8825 < len__4789__auto___8824) {
      args__4795__auto__.push(arguments[i__4790__auto___8825]);
      var G__8826 = i__4790__auto___8825 + 1;
      i__4790__auto___8825 = G__8826;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.alt_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  return function(x) {
    return cljs.core.reduce.call(null, function(_, unparse) {
      return malli.impl.util._map_valid.call(null, cljs.core.reduced, unparse.call(null, x));
    }, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900), unparsers);
  };
};
malli.impl.regex.alt_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_unparser.cljs$lang$applyTo = function(seq8823) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8823));
};
malli.impl.regex.altn_unparser = function malli$impl$regex$altn_unparser(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8828 = arguments.length;
  var i__4790__auto___8829 = 0;
  while (true) {
    if (i__4790__auto___8829 < len__4789__auto___8828) {
      args__4795__auto__.push(arguments[i__4790__auto___8829]);
      var G__8830 = i__4790__auto___8829 + 1;
      i__4790__auto___8829 = G__8830;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.altn_unparser.cljs$core$IFn$_invoke$arity$variadic = function(unparsers) {
  var unparsers__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, unparsers);
  return function(x) {
    if (malli.impl.util._tagged_QMARK_.call(null, x)) {
      var temp__5755__auto__ = cljs.core.find.call(null, unparsers__$1, cljs.core.key.call(null, x));
      if (temp__5755__auto__ == null) {
        return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
      } else {
        var kv = temp__5755__auto__;
        return cljs.core.val.call(null, kv).call(null, cljs.core.val.call(null, x));
      }
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex.altn_unparser.cljs$lang$maxFixedArity = 0;
malli.impl.regex.altn_unparser.cljs$lang$applyTo = function(seq8827) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8827));
};
malli.impl.regex.alt_transformer = function malli$impl$regex$alt_transformer(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8832 = arguments.length;
  var i__4790__auto___8833 = 0;
  while (true) {
    if (i__4790__auto___8833 < len__4789__auto___8832) {
      args__4795__auto__.push(arguments[i__4790__auto___8833]);
      var G__8834 = i__4790__auto___8833 + 1;
      i__4790__auto___8833 = G__8834;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.impl.regex.alt_transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_krs) {
  return cljs.core.reduce.call(null, function(acc, _QMARK_kr) {
    var r = malli.impl.regex.entry__GT_regex.call(null, acc);
    var r_STAR_ = malli.impl.regex.entry__GT_regex.call(null, _QMARK_kr);
    return function(driver, regs, coll_STAR_, pos, coll, k) {
      malli.impl.regex.park_transformer_BANG_.call(null, driver, r_STAR_, regs, coll_STAR_, pos, coll, k);
      return malli.impl.regex.park_transformer_BANG_.call(null, driver, r, regs, coll_STAR_, pos, coll, k);
    };
  }, _QMARK_krs);
};
malli.impl.regex.alt_transformer.cljs$lang$maxFixedArity = 0;
malli.impl.regex.alt_transformer.cljs$lang$applyTo = function(seq8831) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8831));
};
malli.impl.regex._QMARK__validator = function malli$impl$regex$_QMARK__validator(p) {
  return malli.impl.regex.alt_validator.call(null, p, malli.impl.regex.cat_validator.call(null));
};
malli.impl.regex._QMARK__explainer = function malli$impl$regex$_QMARK__explainer(p) {
  return malli.impl.regex.alt_explainer.call(null, p, malli.impl.regex.cat_explainer.call(null));
};
malli.impl.regex._QMARK__parser = function malli$impl$regex$_QMARK__parser(p) {
  return malli.impl.regex.alt_parser.call(null, p, malli.impl.regex.pure_parser.call(null, null));
};
malli.impl.regex._QMARK__unparser = function malli$impl$regex$_QMARK__unparser(p) {
  return malli.impl.regex.alt_unparser.call(null, p, malli.impl.regex.pure_unparser);
};
malli.impl.regex._QMARK__transformer = function malli$impl$regex$_QMARK__transformer(p) {
  return malli.impl.regex.alt_transformer.call(null, p, malli.impl.regex.cat_transformer.call(null));
};
malli.impl.regex._STAR__validator = function malli$impl$regex$_STAR__validator(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_validator.call(null);
  return function malli$impl$regex$_STAR__validator_$__STAR_p(driver, regs, pos, coll, k) {
    malli.impl.regex.park_validator_BANG_.call(null, driver, _STAR_p_epsilon, regs, pos, coll, k);
    return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
      return malli.impl.regex.park_validator_BANG_.call(null, driver, malli$impl$regex$_STAR__validator_$__STAR_p, regs, pos__$1, coll__$1, k);
    });
  };
};
malli.impl.regex._STAR__explainer = function malli$impl$regex$_STAR__explainer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_explainer.call(null);
  return function malli$impl$regex$_STAR__explainer_$__STAR_p(driver, regs, pos, coll, k) {
    malli.impl.regex.park_explainer_BANG_.call(null, driver, _STAR_p_epsilon, regs, pos, coll, k);
    return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
      return malli.impl.regex.park_explainer_BANG_.call(null, driver, malli$impl$regex$_STAR__explainer_$__STAR_p, regs, pos__$1, coll__$1, k);
    });
  };
};
malli.impl.regex._STAR__parser = function malli$impl$regex$_STAR__parser(p) {
  var _STAR_p_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
  return function() {
    var malli$impl$regex$_STAR__parser_$__STAR_p = null;
    var malli$impl$regex$_STAR__parser_$__STAR_p__5 = function(driver, regs, pos, coll, k) {
      return malli$impl$regex$_STAR__parser_$__STAR_p.call(null, driver, regs, cljs.core.PersistentVector.EMPTY, pos, coll, k);
    };
    var malli$impl$regex$_STAR__parser_$__STAR_p__6 = function(driver, regs, coll_STAR_, pos, coll, k) {
      malli.impl.regex.park_transformer_BANG_.call(null, driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return malli.impl.regex.park_transformer_BANG_.call(null, driver, malli$impl$regex$_STAR__parser_$__STAR_p, regs, cljs.core.conj.call(null, coll_STAR_, v), pos__$1, coll__$1, k);
      });
    };
    malli$impl$regex$_STAR__parser_$__STAR_p = function(driver, regs, coll_STAR_, pos, coll, k) {
      switch(arguments.length) {
        case 5:
          return malli$impl$regex$_STAR__parser_$__STAR_p__5.call(this, driver, regs, coll_STAR_, pos, coll);
        case 6:
          return malli$impl$regex$_STAR__parser_$__STAR_p__6.call(this, driver, regs, coll_STAR_, pos, coll, k);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$5 = malli$impl$regex$_STAR__parser_$__STAR_p__5;
    malli$impl$regex$_STAR__parser_$__STAR_p.cljs$core$IFn$_invoke$arity$6 = malli$impl$regex$_STAR__parser_$__STAR_p__6;
    return malli$impl$regex$_STAR__parser_$__STAR_p;
  }();
};
malli.impl.regex._STAR__unparser = function malli$impl$regex$_STAR__unparser(up) {
  return function(v) {
    return cljs.core.reduce.call(null, function(acc, v__$1) {
      var result = up.call(null, v__$1);
      if (malli.impl.util._invalid_QMARK_.call(null, result)) {
        return cljs.core.reduced.call(null, result);
      } else {
        return cljs.core.into.call(null, acc, result);
      }
    }, cljs.core.PersistentVector.EMPTY, v);
  };
};
malli.impl.regex._STAR__transformer = function malli$impl$regex$_STAR__transformer(p) {
  var _STAR_p_epsilon = malli.impl.regex.cat_transformer.call(null);
  return function malli$impl$regex$_STAR__transformer_$__STAR_p(driver, regs, coll_STAR_, pos, coll, k) {
    malli.impl.regex.park_transformer_BANG_.call(null, driver, _STAR_p_epsilon, regs, coll_STAR_, pos, coll, k);
    return p.call(null, driver, regs, coll_STAR_, pos, coll, function(coll_STAR___$1, pos__$1, coll__$1) {
      return malli.impl.regex.park_transformer_BANG_.call(null, driver, malli$impl$regex$_STAR__transformer_$__STAR_p, regs, coll_STAR___$1, pos__$1, coll__$1, k);
    });
  };
};
malli.impl.regex._PLUS__validator = function malli$impl$regex$_PLUS__validator(p) {
  return malli.impl.regex.cat_validator.call(null, p, malli.impl.regex._STAR__validator.call(null, p));
};
malli.impl.regex._PLUS__explainer = function malli$impl$regex$_PLUS__explainer(p) {
  return malli.impl.regex.cat_explainer.call(null, p, malli.impl.regex._STAR__explainer.call(null, p));
};
malli.impl.regex._PLUS__parser = function malli$impl$regex$_PLUS__parser(p) {
  return malli.impl.regex.fmap_parser.call(null, function(p__8835) {
    var vec__8836 = p__8835;
    var v = cljs.core.nth.call(null, vec__8836, 0, null);
    var vs = cljs.core.nth.call(null, vec__8836, 1, null);
    return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null), vs);
  }, malli.impl.regex.cat_parser.call(null, p, malli.impl.regex._STAR__parser.call(null, p)));
};
malli.impl.regex._PLUS__unparser = function malli$impl$regex$_PLUS__unparser(up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser.call(null, up);
  return function(x) {
    if (cljs.core.vector_QMARK_.call(null, x) && 1 <= cljs.core.count.call(null, x)) {
      return up_STAR_.call(null, x);
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex._PLUS__transformer = function malli$impl$regex$_PLUS__transformer(p) {
  return malli.impl.regex.cat_transformer.call(null, p, malli.impl.regex._STAR__transformer.call(null, p));
};
malli.impl.regex.repeat_validator = function malli$impl$regex$repeat_validator(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_validator.call(null);
  var compulsories = function malli$impl$regex$repeat_validator_$_compulsories(driver, regs, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < min) {
      return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_validator_BANG_.call(null, driver, function(driver__$1, stack, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_validator_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, stack), cljs.core.peek.call(null, stack) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      });
    } else {
      return optionals.call(null, driver, regs, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_validator_$_optionals(driver, regs, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < max) {
      malli.impl.regex.park_validator_BANG_.call(null, driver, rep_epsilon, regs, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_validator_BANG_.call(null, driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_validator_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      });
    } else {
      return k.call(null, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), pos, coll, k);
  };
};
malli.impl.regex.repeat_explainer = function malli$impl$regex$repeat_explainer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_explainer.call(null);
  var compulsories = function malli$impl$regex$repeat_explainer_$_compulsories(driver, regs, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < min) {
      return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_explainer_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      });
    } else {
      return optionals.call(null, driver, regs, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_explainer_$_optionals(driver, regs, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < max) {
      malli.impl.regex.park_explainer_BANG_.call(null, driver, rep_epsilon, regs, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, driver, function(driver__$1, regs__$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_explainer_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), pos__$2, coll__$2, k__$1);
        }, regs, pos__$1, coll__$1, k);
      });
    } else {
      return k.call(null, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), pos, coll, k);
  };
};
malli.impl.regex.repeat_parser = function malli$impl$regex$repeat_parser(min, max, p) {
  var rep_epsilon = function(_, ___$1, coll_STAR_, pos, coll, k) {
    return k.call(null, coll_STAR_, pos, coll);
  };
  var compulsories = function malli$impl$regex$repeat_parser_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < min) {
      return p.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_parser_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), cljs.core.conj.call(null, coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR_, pos__$1, coll__$1, k);
      });
    } else {
      return optionals.call(null, driver, regs, coll_STAR_, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_parser_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < max) {
      malli.impl.regex.park_transformer_BANG_.call(null, driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
      return p.call(null, driver, regs, pos, coll, function(v, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(driver__$1, regs__$1, coll_STAR___$1, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_parser_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), cljs.core.conj.call(null, coll_STAR___$1, v), pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR_, pos__$1, coll__$1, k);
      });
    } else {
      return k.call(null, coll_STAR_, pos, coll);
    }
  };
  return function(driver, regs, pos, coll, k) {
    return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), cljs.core.PersistentVector.EMPTY, pos, coll, k);
  };
};
malli.impl.regex.repeat_unparser = function malli$impl$regex$repeat_unparser(min, max, up) {
  var up_STAR_ = malli.impl.regex._STAR__unparser.call(null, up);
  return function(v) {
    if (cljs.core.vector_QMARK_.call(null, v) && (min <= cljs.core.count.call(null, v) && cljs.core.count.call(null, v) <= max)) {
      return up_STAR_.call(null, v);
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex.repeat_transformer = function malli$impl$regex$repeat_transformer(min, max, p) {
  var rep_epsilon = malli.impl.regex.cat_transformer.call(null);
  var compulsories = function malli$impl$regex$repeat_transformer_$_compulsories(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < min) {
      return p.call(null, driver, regs, coll_STAR_, pos, coll, function(coll_STAR___$1, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_transformer_$_compulsories.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      });
    } else {
      return optionals.call(null, driver, regs, coll_STAR_, pos, coll, k);
    }
  };
  var optionals = function malli$impl$regex$repeat_transformer_$_optionals(driver, regs, coll_STAR_, pos, coll, k) {
    if (cljs.core.peek.call(null, regs) < max) {
      malli.impl.regex.park_transformer_BANG_.call(null, driver, rep_epsilon, regs, coll_STAR_, pos, coll, k);
      return p.call(null, driver, regs, coll_STAR_, pos, coll, function(coll_STAR___$1, pos__$1, coll__$1) {
        return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver, function(driver__$1, regs__$1, coll_STAR___$2, pos__$2, coll__$2, k__$1) {
          return malli$impl$regex$repeat_transformer_$_optionals.call(null, driver__$1, cljs.core.conj.call(null, cljs.core.pop.call(null, regs__$1), cljs.core.peek.call(null, regs__$1) + 1), coll_STAR___$2, pos__$2, coll__$2, k__$1);
        }, regs, coll_STAR___$1, pos__$1, coll__$1, k);
      });
    } else {
      return k.call(null, coll_STAR_, pos, coll);
    }
  };
  return function(driver, regs, coll_STAR_, pos, coll, k) {
    return compulsories.call(null, driver, cljs.core.conj.call(null, regs, 0), coll_STAR_, pos, coll, k);
  };
};
malli.impl.regex.make_stack = function malli$impl$regex$make_stack() {
  return [];
};
malli.impl.regex.empty_stack_QMARK_ = function malli$impl$regex$empty_stack_QMARK_(stack) {
  return stack.length === 0;
};
malli.impl.regex.ICache = function() {
};
malli.impl.regex.ensure_cached_BANG_ = function malli$impl$regex$ensure_cached_BANG_(cache, f, pos, regs) {
  if (!(cache == null) && !(cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 == null)) {
    return cache.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4(cache, f, pos, regs);
  } else {
    var x__4487__auto__ = cache == null ? null : cache;
    var m__4488__auto__ = malli.impl.regex.ensure_cached_BANG_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, cache, f, pos, regs);
    } else {
      var m__4485__auto__ = malli.impl.regex.ensure_cached_BANG_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, cache, f, pos, regs);
      } else {
        throw cljs.core.missing_protocol.call(null, "ICache.ensure-cached!", cache);
      }
    }
  }
};
malli.impl.regex.CacheEntry = function(hash, f, pos, regs) {
  this.hash = hash;
  this.f = f;
  this.pos = pos;
  this.regs = regs;
};
malli.impl.regex.CacheEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "hash", "hash", 1626749931, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "pos", "pos", 775924307, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "regs", "regs", -1837635361, null)], null);
};
malli.impl.regex.CacheEntry.cljs$lang$type = true;
malli.impl.regex.CacheEntry.cljs$lang$ctorStr = "malli.impl.regex/CacheEntry";
malli.impl.regex.CacheEntry.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "malli.impl.regex/CacheEntry");
};
malli.impl.regex.__GT_CacheEntry = function malli$impl$regex$__GT_CacheEntry(hash, f, pos, regs) {
  return new malli.impl.regex.CacheEntry(hash, f, pos, regs);
};
malli.impl.regex.Cache = function(values, size) {
  this.values = values;
  this.size = size;
};
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.Cache.prototype.malli$impl$regex$ICache$ensure_cached_BANG_$arity$4 = function(_, f, pos, regs) {
  var self__ = this;
  var ___$1 = this;
  if (self__.size + 1 > self__.values.length >> 1) {
    var capacity_STAR__8839 = self__.values.length << 1;
    var values_STAR__8840 = cljs.core.object_array.call(null, capacity_STAR__8839);
    var max_index_8841 = capacity_STAR__8839 - 1;
    var a__4663__auto___8842 = self__.values;
    var l__4664__auto___8843 = a__4663__auto___8842.length;
    var i_8844 = 0;
    var __8845__$2 = null;
    while (true) {
      if (i_8844 < l__4664__auto___8843) {
        var G__8846 = i_8844 + 1;
        var G__8847 = function() {
          var temp__5757__auto__ = self__.values[i_8844];
          if (temp__5757__auto__ == null) {
            return null;
          } else {
            var v = temp__5757__auto__;
            var i_STAR_ = v.hash & max_index_8841;
            var collisions = 0;
            while (true) {
              if (cljs.core.truth_(values_STAR__8840[i_STAR_])) {
                var collisions__$1 = collisions + 1;
                var G__8848 = i_STAR_ + collisions__$1 & max_index_8841;
                var G__8849 = collisions__$1;
                i_STAR_ = G__8848;
                collisions = G__8849;
                continue;
              } else {
                return values_STAR__8840[i_STAR_] = v;
              }
              break;
            }
          }
        }();
        i_8844 = G__8846;
        __8845__$2 = G__8847;
        continue;
      } else {
      }
      break;
    }
    self__.values = values_STAR__8840;
  } else {
  }
  var capacity = self__.values.length;
  var max_index = capacity - 1;
  var h = cljs.core.hash_combine.call(null, cljs.core.hash_combine.call(null, cljs.core.hash.call(null, f), cljs.core.hash.call(null, pos)), cljs.core.hash.call(null, regs));
  var i = h & max_index;
  var collisions = 0;
  while (true) {
    var temp__5755__auto__ = self__.values[i];
    if (temp__5755__auto__ == null) {
      self__.values[i] = new malli.impl.regex.CacheEntry(h, f, pos, regs);
      self__.size = self__.size + 1;
      return false;
    } else {
      var entry = temp__5755__auto__;
      var or__4185__auto__ = cljs.core._EQ_.call(null, entry.hash, h) && cljs.core._EQ_.call(null, entry.f, f) && cljs.core._EQ_.call(null, entry.pos, pos) && cljs.core._EQ_.call(null, entry.regs, regs);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var collisions__$1 = collisions + 1;
        var G__8850 = i + collisions__$1 & max_index;
        var G__8851 = collisions__$1;
        i = G__8850;
        collisions = G__8851;
        continue;
      }
    }
    break;
  }
};
malli.impl.regex.Cache.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "values", "values", 2013177083, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "size", "size", -1555742762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], 
  null);
};
malli.impl.regex.Cache.cljs$lang$type = true;
malli.impl.regex.Cache.cljs$lang$ctorStr = "malli.impl.regex/Cache";
malli.impl.regex.Cache.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "malli.impl.regex/Cache");
};
malli.impl.regex.__GT_Cache = function malli$impl$regex$__GT_Cache(values, size) {
  return new malli.impl.regex.Cache(values, size);
};
malli.impl.regex.make_cache = function malli$impl$regex$make_cache() {
  return new malli.impl.regex.Cache(cljs.core.object_array.call(null, 2), 0);
};
malli.impl.regex.CheckDriver = function(success, stack, cache) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.CheckDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_validator_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.CheckDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null)], null);
};
malli.impl.regex.CheckDriver.cljs$lang$type = true;
malli.impl.regex.CheckDriver.cljs$lang$ctorStr = "malli.impl.regex/CheckDriver";
malli.impl.regex.CheckDriver.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "malli.impl.regex/CheckDriver");
};
malli.impl.regex.__GT_CheckDriver = function malli$impl$regex$__GT_CheckDriver(success, stack, cache) {
  return new malli.impl.regex.CheckDriver(success, stack, cache);
};
malli.impl.regex.ParseDriver = function(success, stack, cache, result) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.result = result;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$noncaching_park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IValidationDriver$park_validator_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_validator_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$noncaching_park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  return self__.stack.push(function() {
    return transformer.call(null, driver__$1, regs, coll_STAR_, pos, coll, k);
  });
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$park_transformer_BANG_$arity$7 = function(driver, transformer, regs, coll_STAR_, pos, coll, k) {
  var self__ = this;
  var driver__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, transformer, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_transformer_BANG_.call(null, driver__$1, transformer, regs, coll_STAR_, pos, coll, k);
  }
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$succeed_with_BANG_$arity$2 = function(self, v) {
  var self__ = this;
  var self__$1 = this;
  malli.impl.regex.succeed_BANG_.call(null, self__$1);
  return self__.result = v;
};
malli.impl.regex.ParseDriver.prototype.malli$impl$regex$IParseDriver$success_result$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.result;
};
malli.impl.regex.ParseDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), cljs.core.with_meta(new cljs.core.Symbol(null, "result", "result", -1239343558, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
malli.impl.regex.ParseDriver.cljs$lang$type = true;
malli.impl.regex.ParseDriver.cljs$lang$ctorStr = "malli.impl.regex/ParseDriver";
malli.impl.regex.ParseDriver.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "malli.impl.regex/ParseDriver");
};
malli.impl.regex.__GT_ParseDriver = function malli$impl$regex$__GT_ParseDriver(success, stack, cache, result) {
  return new malli.impl.regex.ParseDriver(success, stack, cache, result);
};
malli.impl.regex.validator = function malli$impl$regex$validator(p) {
  var p__$1 = malli.impl.regex.cat_validator.call(null, p, malli.impl.regex.end_validator.call(null));
  return function(coll) {
    if (cljs.core.sequential_QMARK_.call(null, coll)) {
      var driver = new malli.impl.regex.CheckDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null));
      p__$1.call(null, driver, cljs.core.List.EMPTY, 0, coll, function(_, ___$1) {
        return malli.impl.regex.succeed_BANG_.call(null, driver);
      });
      var or__4185__auto__ = malli.impl.regex.succeeded_QMARK_.call(null, driver);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        while (true) {
          var temp__5755__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
          if (temp__5755__auto__ == null) {
            return false;
          } else {
            var thunk = temp__5755__auto__;
            thunk.call(null);
            var or__4185__auto____$1 = malli.impl.regex.succeeded_QMARK_.call(null, driver);
            if (cljs.core.truth_(or__4185__auto____$1)) {
              return or__4185__auto____$1;
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return false;
    }
  };
};
malli.impl.regex.ExplanationDriver = function(success, stack, cache, in$, errors_max_pos, errors) {
  this.success = success;
  this.stack = stack;
  this.cache = cache;
  this.in$ = in$;
  this.errors_max_pos = errors_max_pos;
  this.errors = errors;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeed_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success = cljs.core.boolean$.call(null, true);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$succeeded_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.success;
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$Driver$pop_thunk_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (malli.impl.regex.empty_stack_QMARK_.call(null, self__.stack)) {
    return null;
  } else {
    return self__.stack.pop();
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$ = cljs.core.PROTOCOL_SENTINEL;
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$noncaching_park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  return self__.stack.push(function() {
    return validator.call(null, self__$1, regs, pos, coll, k);
  });
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$park_explainer_BANG_$arity$6 = function(self, validator, regs, pos, coll, k) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(malli.impl.regex.ensure_cached_BANG_.call(null, self__.cache, validator, pos, regs))) {
    return null;
  } else {
    return malli.impl.regex.noncaching_park_explainer_BANG_.call(null, self__$1, validator, regs, pos, coll, k);
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$value_path$arity$2 = function(_, pos) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.conj.call(null, self__.in$, pos);
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$fail_BANG_$arity$3 = function(_, pos, errors_STAR_) {
  var self__ = this;
  var ___$1 = this;
  if (pos > self__.errors_max_pos) {
    self__.errors_max_pos = pos;
    return self__.errors = errors_STAR_;
  } else {
    if (cljs.core._EQ_.call(null, pos, self__.errors_max_pos)) {
      return self__.errors = cljs.core.into.call(null, self__.errors, errors_STAR_);
    } else {
      return null;
    }
  }
};
malli.impl.regex.ExplanationDriver.prototype.malli$impl$regex$IExplanationDriver$latest_errors$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.errors;
};
malli.impl.regex.ExplanationDriver.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "success", "success", -763789863, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "in", "in", 109346662, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "errors-max-pos", "errors-max-pos", 798451976, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "errors", "errors", 731740809, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
malli.impl.regex.ExplanationDriver.cljs$lang$type = true;
malli.impl.regex.ExplanationDriver.cljs$lang$ctorStr = "malli.impl.regex/ExplanationDriver";
malli.impl.regex.ExplanationDriver.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "malli.impl.regex/ExplanationDriver");
};
malli.impl.regex.__GT_ExplanationDriver = function malli$impl$regex$__GT_ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors) {
  return new malli.impl.regex.ExplanationDriver(success, stack, cache, in$, errors_max_pos, errors);
};
malli.impl.regex.explainer = function malli$impl$regex$explainer(schema, path, p) {
  var p__$1 = malli.impl.regex.cat_explainer.call(null, p, malli.impl.regex.end_explainer.call(null, schema, path));
  return function(coll, in$, errors) {
    if (cljs.core.sequential_QMARK_.call(null, coll)) {
      var pos = 0;
      var driver = new malli.impl.regex.ExplanationDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), in$, pos, cljs.core.PersistentVector.EMPTY);
      p__$1.call(null, driver, cljs.core.List.EMPTY, pos, coll, function(_, ___$1) {
        return malli.impl.regex.succeed_BANG_.call(null, driver);
      });
      if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
        return errors;
      } else {
        while (true) {
          var temp__5755__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
          if (temp__5755__auto__ == null) {
            return cljs.core.into.call(null, errors, malli.impl.regex.latest_errors.call(null, driver));
          } else {
            var thunk = temp__5755__auto__;
            thunk.call(null);
            if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
              return errors;
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return cljs.core.conj.call(null, errors, malli.impl.util._error.call(null, path, in$, schema, coll, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
    }
  };
};
malli.impl.regex.parser = function malli$impl$regex$parser(p) {
  var p__$1 = malli.impl.regex.cat_parser.call(null, p, malli.impl.regex.end_parser.call(null));
  return function(coll) {
    if (cljs.core.sequential_QMARK_.call(null, coll)) {
      var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), null);
      p__$1.call(null, driver, cljs.core.List.EMPTY, 0, coll, function(v, _, ___$1) {
        return malli.impl.regex.succeed_with_BANG_.call(null, driver, v);
      });
      if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
        return cljs.core.first.call(null, malli.impl.regex.success_result.call(null, driver));
      } else {
        while (true) {
          var temp__5755__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
          if (temp__5755__auto__ == null) {
            return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
          } else {
            var thunk = temp__5755__auto__;
            thunk.call(null);
            if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
              return cljs.core.first.call(null, malli.impl.regex.success_result.call(null, driver));
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
    }
  };
};
malli.impl.regex.transformer = function malli$impl$regex$transformer(p) {
  var p__$1 = malli.impl.regex.cat_transformer.call(null, p, malli.impl.regex.end_transformer.call(null));
  return function(coll) {
    if (cljs.core.sequential_QMARK_.call(null, coll)) {
      var driver = new malli.impl.regex.ParseDriver(false, malli.impl.regex.make_stack.call(null), malli.impl.regex.make_cache.call(null), null);
      p__$1.call(null, driver, cljs.core.List.EMPTY, cljs.core.PersistentVector.EMPTY, 0, coll, function(coll_STAR_, _, ___$1) {
        return malli.impl.regex.succeed_with_BANG_.call(null, driver, coll_STAR_);
      });
      if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
        return malli.impl.regex.success_result.call(null, driver);
      } else {
        while (true) {
          var temp__5755__auto__ = malli.impl.regex.pop_thunk_BANG_.call(null, driver);
          if (temp__5755__auto__ == null) {
            return coll;
          } else {
            var thunk = temp__5755__auto__;
            thunk.call(null);
            if (cljs.core.truth_(malli.impl.regex.succeeded_QMARK_.call(null, driver))) {
              return malli.impl.regex.success_result.call(null, driver);
            } else {
              continue;
            }
          }
          break;
        }
      }
    } else {
      return coll;
    }
  };
};
goog.provide("malli.registry");
goog.require("cljs.core");
goog.define("malli.registry.mode", "default");
goog.define("malli.registry.type", "default");
malli.registry.Registry = function() {
};
malli.registry._schema = function malli$registry$_schema(this$, type) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schema$arity$2 == null)) {
    return this$.malli$registry$Registry$_schema$arity$2(this$, type);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.registry._schema[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, type);
    } else {
      var m__4485__auto__ = malli.registry._schema["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, type);
      } else {
        throw cljs.core.missing_protocol.call(null, "Registry.-schema", this$);
      }
    }
  }
};
malli.registry._schemas = function malli$registry$_schemas(this$) {
  if (!(this$ == null) && !(this$.malli$registry$Registry$_schemas$arity$1 == null)) {
    return this$.malli$registry$Registry$_schemas$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.registry._schemas[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.registry._schemas["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Registry.-schemas", this$);
      }
    }
  }
};
malli.registry.registry_QMARK_ = function malli$registry$registry_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$registry$Registry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.registry.fast_registry = function malli$registry$fast_registry(m) {
  var fm = m;
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8855 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8855 = function(m, fm, meta8856) {
      this.m = m;
      this.fm = fm;
      this.meta8856 = meta8856;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8855.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8857, meta8856__$1) {
      var self__ = this;
      var _8857__$1 = this;
      return new malli.registry.t_malli$registry8855(self__.m, self__.fm, meta8856__$1);
    };
    malli.registry.t_malli$registry8855.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8857) {
      var self__ = this;
      var _8857__$1 = this;
      return self__.meta8856;
    };
    malli.registry.t_malli$registry8855.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8855.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return self__.fm.get(type);
    };
    malli.registry.t_malli$registry8855.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.m;
    };
    malli.registry.t_malli$registry8855.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "fm", "fm", -1190690268, null), new cljs.core.Symbol(null, "meta8856", "meta8856", -482553760, null)], null);
    };
    malli.registry.t_malli$registry8855.cljs$lang$type = true;
    malli.registry.t_malli$registry8855.cljs$lang$ctorStr = "malli.registry/t_malli$registry8855";
    malli.registry.t_malli$registry8855.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8855");
    };
    malli.registry.__GT_t_malli$registry8855 = function malli$registry$fast_registry_$___GT_t_malli$registry8855(m__$1, fm__$1, meta8856) {
      return new malli.registry.t_malli$registry8855(m__$1, fm__$1, meta8856);
    };
  }
  return new malli.registry.t_malli$registry8855(m, fm, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.simple_registry = function malli$registry$simple_registry(m) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8858 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8858 = function(m, meta8859) {
      this.m = m;
      this.meta8859 = meta8859;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8858.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8860, meta8859__$1) {
      var self__ = this;
      var _8860__$1 = this;
      return new malli.registry.t_malli$registry8858(self__.m, meta8859__$1);
    };
    malli.registry.t_malli$registry8858.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8860) {
      var self__ = this;
      var _8860__$1 = this;
      return self__.meta8859;
    };
    malli.registry.t_malli$registry8858.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8858.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return self__.m.call(null, type);
    };
    malli.registry.t_malli$registry8858.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.m;
    };
    malli.registry.t_malli$registry8858.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "meta8859", "meta8859", -1328446444, null)], null);
    };
    malli.registry.t_malli$registry8858.cljs$lang$type = true;
    malli.registry.t_malli$registry8858.cljs$lang$ctorStr = "malli.registry/t_malli$registry8858";
    malli.registry.t_malli$registry8858.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8858");
    };
    malli.registry.__GT_t_malli$registry8858 = function malli$registry$simple_registry_$___GT_t_malli$registry8858(m__$1, meta8859) {
      return new malli.registry.t_malli$registry8858(m__$1, meta8859);
    };
  }
  return new malli.registry.t_malli$registry8858(m, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.registry = function malli$registry$registry(_QMARK_registry) {
  if (_QMARK_registry == null) {
    return null;
  } else {
    if (malli.registry.registry_QMARK_.call(null, _QMARK_registry)) {
      return _QMARK_registry;
    } else {
      if (cljs.core.map_QMARK_.call(null, _QMARK_registry)) {
        return malli.registry.simple_registry.call(null, _QMARK_registry);
      } else {
        if (!(_QMARK_registry == null) ? false || cljs.core.PROTOCOL_SENTINEL === _QMARK_registry.malli$registry$Registry$ ? true : !_QMARK_registry.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, malli.registry.Registry, _QMARK_registry) : false : cljs.core.native_satisfies_QMARK_.call(null, malli.registry.Registry, _QMARK_registry)) {
          return _QMARK_registry;
        } else {
          return null;
        }
      }
    }
  }
};
malli.registry.registry_STAR_ = cljs.core.atom.call(null, malli.registry.simple_registry.call(null, cljs.core.PersistentArrayMap.EMPTY));
malli.registry.set_default_registry_BANG_ = function malli$registry$set_default_registry_BANG_(_QMARK_registry) {
  if (!(malli.registry.mode === "strict")) {
    return cljs.core.reset_BANG_.call(null, malli.registry.registry_STAR_, malli.registry.registry.call(null, _QMARK_registry));
  } else {
    throw cljs.core.ex_info.call(null, "can't set default registry, invalid mode", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mode", "mode", 654403691), malli.registry.mode, new cljs.core.Keyword(null, "type", "type", 1174270348), malli.registry.type], null));
  }
};
malli.registry.custom_default_registry = function malli$registry$custom_default_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8862 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8862 = function(meta8863) {
      this.meta8863 = meta8863;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8862.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8864, meta8863__$1) {
      var self__ = this;
      var _8864__$1 = this;
      return new malli.registry.t_malli$registry8862(meta8863__$1);
    };
    malli.registry.t_malli$registry8862.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8864) {
      var self__ = this;
      var _8864__$1 = this;
      return self__.meta8863;
    };
    malli.registry.t_malli$registry8862.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8862.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, cljs.core.deref.call(null, malli.registry.registry_STAR_), type);
    };
    malli.registry.t_malli$registry8862.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, cljs.core.deref.call(null, malli.registry.registry_STAR_));
    };
    malli.registry.t_malli$registry8862.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta8863", "meta8863", -527685952, null)], null);
    };
    malli.registry.t_malli$registry8862.cljs$lang$type = true;
    malli.registry.t_malli$registry8862.cljs$lang$ctorStr = "malli.registry/t_malli$registry8862";
    malli.registry.t_malli$registry8862.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8862");
    };
    malli.registry.__GT_t_malli$registry8862 = function malli$registry$custom_default_registry_$___GT_t_malli$registry8862(meta8863) {
      return new malli.registry.t_malli$registry8862(meta8863);
    };
  }
  return new malli.registry.t_malli$registry8862(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry = function malli$registry$composite_registry(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___8870 = arguments.length;
  var i__4790__auto___8871 = 0;
  while (true) {
    if (i__4790__auto___8871 < len__4789__auto___8870) {
      args__4795__auto__.push(arguments[i__4790__auto___8871]);
      var G__8872 = i__4790__auto___8871 + 1;
      i__4790__auto___8871 = G__8872;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.registry.composite_registry.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_registries) {
  var registries = cljs.core.mapv.call(null, malli.registry.registry, _QMARK_registries);
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8867 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8867 = function(_QMARK_registries, registries, meta8868) {
      this._QMARK_registries = _QMARK_registries;
      this.registries = registries;
      this.meta8868 = meta8868;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8867.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8869, meta8868__$1) {
      var self__ = this;
      var _8869__$1 = this;
      return new malli.registry.t_malli$registry8867(self__._QMARK_registries, self__.registries, meta8868__$1);
    };
    malli.registry.t_malli$registry8867.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8869) {
      var self__ = this;
      var _8869__$1 = this;
      return self__.meta8868;
    };
    malli.registry.t_malli$registry8867.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8867.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.some.call(null, function(p1__8865_SHARP_) {
        return malli.registry._schema.call(null, p1__8865_SHARP_, type);
      }, self__.registries);
    };
    malli.registry.t_malli$registry8867.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.reduce.call(null, cljs.core.merge, cljs.core.map.call(null, malli.registry._schemas, cljs.core.reverse.call(null, self__.registries)));
    };
    malli.registry.t_malli$registry8867.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?registries", "?registries", 2135368100, null), new cljs.core.Symbol(null, "registries", "registries", -1366064418, null), new cljs.core.Symbol(null, "meta8868", "meta8868", -1475253959, null)], null);
    };
    malli.registry.t_malli$registry8867.cljs$lang$type = true;
    malli.registry.t_malli$registry8867.cljs$lang$ctorStr = "malli.registry/t_malli$registry8867";
    malli.registry.t_malli$registry8867.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8867");
    };
    malli.registry.__GT_t_malli$registry8867 = function malli$registry$__GT_t_malli$registry8867(_QMARK_registries__$1, registries__$1, meta8868) {
      return new malli.registry.t_malli$registry8867(_QMARK_registries__$1, registries__$1, meta8868);
    };
  }
  return new malli.registry.t_malli$registry8867(_QMARK_registries, registries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.composite_registry.cljs$lang$maxFixedArity = 0;
malli.registry.composite_registry.cljs$lang$applyTo = function(seq8866) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq8866));
};
malli.registry.mutable_registry = function malli$registry$mutable_registry(db) {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8873 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8873 = function(db, meta8874) {
      this.db = db;
      this.meta8874 = meta8874;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8873.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8875, meta8874__$1) {
      var self__ = this;
      var _8875__$1 = this;
      return new malli.registry.t_malli$registry8873(self__.db, meta8874__$1);
    };
    malli.registry.t_malli$registry8873.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8875) {
      var self__ = this;
      var _8875__$1 = this;
      return self__.meta8874;
    };
    malli.registry.t_malli$registry8873.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8873.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, malli.registry.registry.call(null, cljs.core.deref.call(null, self__.db)), type);
    };
    malli.registry.t_malli$registry8873.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, malli.registry.registry.call(null, cljs.core.deref.call(null, self__.db)));
    };
    malli.registry.t_malli$registry8873.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "db", "db", -1661185010, null), new cljs.core.Symbol(null, "meta8874", "meta8874", -10827802, null)], null);
    };
    malli.registry.t_malli$registry8873.cljs$lang$type = true;
    malli.registry.t_malli$registry8873.cljs$lang$ctorStr = "malli.registry/t_malli$registry8873";
    malli.registry.t_malli$registry8873.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8873");
    };
    malli.registry.__GT_t_malli$registry8873 = function malli$registry$mutable_registry_$___GT_t_malli$registry8873(db__$1, meta8874) {
      return new malli.registry.t_malli$registry8873(db__$1, meta8874);
    };
  }
  return new malli.registry.t_malli$registry8873(db, cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry._STAR_registry_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
malli.registry.dynamic_registry = function malli$registry$dynamic_registry() {
  if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8876 !== "undefined") {
  } else {
    malli.registry.t_malli$registry8876 = function(meta8877) {
      this.meta8877 = meta8877;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.registry.t_malli$registry8876.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8878, meta8877__$1) {
      var self__ = this;
      var _8878__$1 = this;
      return new malli.registry.t_malli$registry8876(meta8877__$1);
    };
    malli.registry.t_malli$registry8876.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8878) {
      var self__ = this;
      var _8878__$1 = this;
      return self__.meta8877;
    };
    malli.registry.t_malli$registry8876.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
    malli.registry.t_malli$registry8876.prototype.malli$registry$Registry$_schema$arity$2 = function(_, type) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schema.call(null, malli.registry.registry.call(null, malli.registry._STAR_registry_STAR_), type);
    };
    malli.registry.t_malli$registry8876.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.registry._schemas.call(null, malli.registry.registry.call(null, malli.registry._STAR_registry_STAR_));
    };
    malli.registry.t_malli$registry8876.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta8877", "meta8877", -746212578, null)], null);
    };
    malli.registry.t_malli$registry8876.cljs$lang$type = true;
    malli.registry.t_malli$registry8876.cljs$lang$ctorStr = "malli.registry/t_malli$registry8876";
    malli.registry.t_malli$registry8876.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8876");
    };
    malli.registry.__GT_t_malli$registry8876 = function malli$registry$dynamic_registry_$___GT_t_malli$registry8876(meta8877) {
      return new malli.registry.t_malli$registry8876(meta8877);
    };
  }
  return new malli.registry.t_malli$registry8876(cljs.core.PersistentArrayMap.EMPTY);
};
malli.registry.lazy_registry = function malli$registry$lazy_registry(default_registry, provider) {
  var cache_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var registry_STAR_ = cljs.core.atom.call(null, default_registry);
  return cljs.core.reset_BANG_.call(null, registry_STAR_, malli.registry.composite_registry.call(null, default_registry, function() {
    if (typeof malli !== "undefined" && typeof malli.registry !== "undefined" && typeof malli.registry.t_malli$registry8879 !== "undefined") {
    } else {
      malli.registry.t_malli$registry8879 = function(default_registry, provider, cache_STAR_, registry_STAR_, meta8880) {
        this.default_registry = default_registry;
        this.provider = provider;
        this.cache_STAR_ = cache_STAR_;
        this.registry_STAR_ = registry_STAR_;
        this.meta8880 = meta8880;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.registry.t_malli$registry8879.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8881, meta8880__$1) {
        var self__ = this;
        var _8881__$1 = this;
        return new malli.registry.t_malli$registry8879(self__.default_registry, self__.provider, self__.cache_STAR_, self__.registry_STAR_, meta8880__$1);
      };
      malli.registry.t_malli$registry8879.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8881) {
        var self__ = this;
        var _8881__$1 = this;
        return self__.meta8880;
      };
      malli.registry.t_malli$registry8879.prototype.malli$registry$Registry$ = cljs.core.PROTOCOL_SENTINEL;
      malli.registry.t_malli$registry8879.prototype.malli$registry$Registry$_schema$arity$2 = function(_, name) {
        var self__ = this;
        var ___$1 = this;
        var or__4185__auto__ = cljs.core.deref.call(null, self__.cache_STAR_).call(null, name);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var temp__5753__auto__ = self__.provider.call(null, name, cljs.core.deref.call(null, self__.registry_STAR_));
          if (cljs.core.truth_(temp__5753__auto__)) {
            var schema = temp__5753__auto__;
            cljs.core.swap_BANG_.call(null, self__.cache_STAR_, cljs.core.assoc, name, schema);
            return schema;
          } else {
            return null;
          }
        }
      };
      malli.registry.t_malli$registry8879.prototype.malli$registry$Registry$_schemas$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.cache_STAR_);
      };
      malli.registry.t_malli$registry8879.getBasis = function() {
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "default-registry", "default-registry", 732204441, null), new cljs.core.Symbol(null, "provider", "provider", 1338474627, null), new cljs.core.Symbol(null, "cache*", "cache*", -548597526, null), new cljs.core.Symbol(null, "registry*", "registry*", -268031273, null), new cljs.core.Symbol(null, "meta8880", "meta8880", 1294111520, null)], null);
      };
      malli.registry.t_malli$registry8879.cljs$lang$type = true;
      malli.registry.t_malli$registry8879.cljs$lang$ctorStr = "malli.registry/t_malli$registry8879";
      malli.registry.t_malli$registry8879.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
        return cljs.core._write.call(null, writer__4429__auto__, "malli.registry/t_malli$registry8879");
      };
      malli.registry.__GT_t_malli$registry8879 = function malli$registry$lazy_registry_$___GT_t_malli$registry8879(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta8880) {
        return new malli.registry.t_malli$registry8879(default_registry__$1, provider__$1, cache_STAR___$1, registry_STAR___$1, meta8880);
      };
    }
    return new malli.registry.t_malli$registry8879(default_registry, provider, cache_STAR_, registry_STAR_, cljs.core.PersistentArrayMap.EMPTY);
  }()));
};
malli.registry.schema = function malli$registry$schema(registry, type) {
  return malli.registry._schema.call(null, registry, type);
};
malli.registry.schemas = function malli$registry$schemas(registry) {
  return malli.registry._schemas.call(null, registry);
};
goog.provide("borkdude.dynaload");
goog.require("cljs.core");
borkdude.dynaload.LazyVar = function(f, cached) {
  this.f = f;
  this.cached = cached;
  this.cljs$lang$protocol_mask$partition0$ = 32769;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!(self__.cached == null)) {
    return self__.cached;
  } else {
    var x = self__.f.call(null);
    if (x == null) {
    } else {
      self__.cached = x;
    }
    return x;
  }
};
borkdude.dynaload.LazyVar.prototype.call = function() {
  var G__8885 = null;
  var G__8885__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null);
  };
  var G__8885__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a);
  };
  var G__8885__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b);
  };
  var G__8885__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c);
  };
  var G__8885__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d);
  };
  var G__8885__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e);
  };
  var G__8885__7 = function(self__, a, b, c, d, e, f__$1) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1);
  };
  var G__8885__8 = function(self__, a, b, c, d, e, f__$1, g) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g);
  };
  var G__8885__9 = function(self__, a, b, c, d, e, f__$1, g, h) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h);
  };
  var G__8885__10 = function(self__, a, b, c, d, e, f__$1, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i);
  };
  var G__8885__11 = function(self__, a, b, c, d, e, f__$1, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j);
  };
  var G__8885__12 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
  };
  var G__8885__13 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
  };
  var G__8885__14 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
  };
  var G__8885__15 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
  };
  var G__8885__16 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
  };
  var G__8885__17 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
  };
  var G__8885__18 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__8885__19 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__8885__20 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__8885__21 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__8885__22 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core.apply.call(null, cljs.core.deref.call(null, this$), a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__8885 = function(self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__8885__1.call(this, self__);
      case 2:
        return G__8885__2.call(this, self__, a);
      case 3:
        return G__8885__3.call(this, self__, a, b);
      case 4:
        return G__8885__4.call(this, self__, a, b, c);
      case 5:
        return G__8885__5.call(this, self__, a, b, c, d);
      case 6:
        return G__8885__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__8885__7.call(this, self__, a, b, c, d, e, f__$1);
      case 8:
        return G__8885__8.call(this, self__, a, b, c, d, e, f__$1, g);
      case 9:
        return G__8885__9.call(this, self__, a, b, c, d, e, f__$1, g, h);
      case 10:
        return G__8885__10.call(this, self__, a, b, c, d, e, f__$1, g, h, i);
      case 11:
        return G__8885__11.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j);
      case 12:
        return G__8885__12.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k);
      case 13:
        return G__8885__13.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l);
      case 14:
        return G__8885__14.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
      case 15:
        return G__8885__15.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
      case 16:
        return G__8885__16.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__8885__17.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__8885__18.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__8885__19.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__8885__20.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__8885__21.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__8885__22.call(this, self__, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__8885.cljs$core$IFn$_invoke$arity$1 = G__8885__1;
  G__8885.cljs$core$IFn$_invoke$arity$2 = G__8885__2;
  G__8885.cljs$core$IFn$_invoke$arity$3 = G__8885__3;
  G__8885.cljs$core$IFn$_invoke$arity$4 = G__8885__4;
  G__8885.cljs$core$IFn$_invoke$arity$5 = G__8885__5;
  G__8885.cljs$core$IFn$_invoke$arity$6 = G__8885__6;
  G__8885.cljs$core$IFn$_invoke$arity$7 = G__8885__7;
  G__8885.cljs$core$IFn$_invoke$arity$8 = G__8885__8;
  G__8885.cljs$core$IFn$_invoke$arity$9 = G__8885__9;
  G__8885.cljs$core$IFn$_invoke$arity$10 = G__8885__10;
  G__8885.cljs$core$IFn$_invoke$arity$11 = G__8885__11;
  G__8885.cljs$core$IFn$_invoke$arity$12 = G__8885__12;
  G__8885.cljs$core$IFn$_invoke$arity$13 = G__8885__13;
  G__8885.cljs$core$IFn$_invoke$arity$14 = G__8885__14;
  G__8885.cljs$core$IFn$_invoke$arity$15 = G__8885__15;
  G__8885.cljs$core$IFn$_invoke$arity$16 = G__8885__16;
  G__8885.cljs$core$IFn$_invoke$arity$17 = G__8885__17;
  G__8885.cljs$core$IFn$_invoke$arity$18 = G__8885__18;
  G__8885.cljs$core$IFn$_invoke$arity$19 = G__8885__19;
  G__8885.cljs$core$IFn$_invoke$arity$20 = G__8885__20;
  G__8885.cljs$core$IFn$_invoke$arity$21 = G__8885__21;
  G__8885.cljs$core$IFn$_invoke$arity$22 = G__8885__22;
  return G__8885;
}();
borkdude.dynaload.LazyVar.prototype.apply = function(self__, args8884) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args8884)));
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f__$1) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f__$1, g) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f__$1, g, h) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f__$1, g, h, i) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f__$1, g, h, i, j) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f__$1, g, h, i, j, k) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var this$ = this;
  return cljs.core.deref.call(null, this$).call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
borkdude.dynaload.LazyVar.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var this$ = this;
  return cljs.core.apply.call(null, cljs.core.deref.call(null, this$), a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
borkdude.dynaload.LazyVar.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cached", "cached", -1216707864, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
borkdude.dynaload.LazyVar.cljs$lang$type = true;
borkdude.dynaload.LazyVar.cljs$lang$ctorStr = "borkdude.dynaload/LazyVar";
borkdude.dynaload.LazyVar.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "borkdude.dynaload/LazyVar");
};
borkdude.dynaload.__GT_LazyVar = function borkdude$dynaload$__GT_LazyVar(f, cached) {
  return new borkdude.dynaload.LazyVar(f, cached);
};
var ret__4835__auto___8892 = function() {
  borkdude.dynaload._QMARK_ = function borkdude$dynaload$_QMARK_(var_args) {
    var args__4795__auto__ = [];
    var len__4789__auto___8893 = arguments.length;
    var i__4790__auto___8894 = 0;
    while (true) {
      if (i__4790__auto___8894 < len__4789__auto___8893) {
        args__4795__auto__.push(arguments[i__4790__auto___8894]);
        var G__8895 = i__4790__auto___8894 + 1;
        i__4790__auto___8894 = G__8895;
        continue;
      } else {
      }
      break;
    }
    var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
    return borkdude.dynaload._QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
  };
  borkdude.dynaload._QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__8889) {
    var map__8890 = p__8889;
    var map__8890__$1 = (!(map__8890 == null) ? map__8890.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8890.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8890) : map__8890;
    var cljs__$1 = cljs.core.get.call(null, map__8890__$1, new cljs.core.Keyword(null, "cljs", "cljs", 1492417629));
    var clj = cljs.core.get.call(null, map__8890__$1, new cljs.core.Keyword(null, "clj", "clj", -660495428));
    if (cljs.core.contains_QMARK_.call(null, _AMPERSAND_env, new cljs.core.Symbol(null, "\x26env", "\x26env", -919163083, null))) {
      return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "\x26env", "\x26env", -919163083, null), null, 1, null)))), 
      null, 1, null), new cljs.core.List(null, cljs__$1, null, 1, null), new cljs.core.List(null, clj, null, 1, null))));
    } else {
      return cljs__$1;
    }
  };
  borkdude.dynaload._QMARK_.cljs$lang$maxFixedArity = 2;
  borkdude.dynaload._QMARK_.cljs$lang$applyTo = function(seq8886) {
    var G__8887 = cljs.core.first.call(null, seq8886);
    var seq8886__$1 = cljs.core.next.call(null, seq8886);
    var G__8888 = cljs.core.first.call(null, seq8886__$1);
    var seq8886__$2 = cljs.core.next.call(null, seq8886__$1);
    var self__4776__auto__ = this;
    return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8887, G__8888, seq8886__$2);
  };
  return null;
}();
borkdude.dynaload._QMARK_.cljs$lang$macro = true;
var ret__4835__auto___8906 = function() {
  borkdude.dynaload.dynaload = function borkdude$dynaload$dynaload(var_args) {
    var G__8901 = arguments.length;
    switch(G__8901) {
      case 3:
        return borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
        break;
      case 4:
        return borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
        break;
      default:
        throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length - 2)].join(""));
    }
  };
  borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, s) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "dynaload", "borkdude.dynaload/dynaload", -1199857489, null), null, 1, null), new cljs.core.List(null, s, null, 1, null), new cljs.core.List(null, cljs.core.apply.call(null, cljs.core.array_map, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null))));
  };
  borkdude.dynaload.dynaload.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, p__8902, opts) {
    var vec__8903 = p__8902;
    var _quote = cljs.core.nth.call(null, vec__8903, 0, null);
    var s = cljs.core.nth.call(null, vec__8903, 1, null);
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "LazyVar.", "borkdude.dynaload/LazyVar.", -691687377, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, 
    cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "?", "borkdude.dynaload/?", 720647962, null), null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "clj", "clj", -660495428), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
    cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", "cljs.core/if-let", 1346583165, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "v__8898__auto__", "v__8898__auto__", -1937554744, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
    new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("borkdude.dynaload", "resolve*", "borkdude.dynaload/resolve*", -886230185, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
    new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "v__8898__auto__", "v__8898__auto__", -1937554744, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", 
    "cljs.core/if-let", 1346583165, null), null, 1, null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "e__8899__auto__", "e__8899__auto__", 1910086778, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "find", "cljs.core/find", 
    656179788, null), null, 1, null), new cljs.core.List(null, opts, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "val", "cljs.core/val", 833354142, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, 
    "e__8899__auto__", "e__8899__auto__", 1910086778, null), null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "ex-info", "cljs.core/ex-info", 
    -409744395, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null), null, 1, null), new cljs.core.List(null, "Var ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), new cljs.core.List(null, " does not exist, ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "namespace", "cljs.core/namespace", 1653264270, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, 
    new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, " never required", null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.apply.call(null, cljs.core.array_map, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, 
    new cljs.core.Keyword(null, "cljs", "cljs", 1492417629), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "exists?", "cljs.core/exists?", 1852387968, null), 
    null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.vary_meta.call(null, s, cljs.core.assoc, new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), true), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "if-let", "cljs.core/if-let", 1346583165, null), null, 1, 
    null), new cljs.core.List(null, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "e__8899__auto__", "e__8899__auto__", 1910086778, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "find", "cljs.core/find", 656179788, null), null, 1, null), new cljs.core.List(null, 
    opts, null, 1, null), new cljs.core.List(null, new cljs.core.Keyword(null, "default", "default", -1987822328), null, 1, null)))), null, 1, null))))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "val", "cljs.core/val", 833354142, null), null, 1, null), new cljs.core.List(null, new cljs.core.Symbol(null, "e__8899__auto__", "e__8899__auto__", 1910086778, null), 
    null, 1, null)))), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, 
    cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null), null, 1, null), new cljs.core.List(null, "Var ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null), 
    new cljs.core.List(null, " does not exist, ", null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol("cljs.core", "namespace", "cljs.core/namespace", 1653264270, null), null, 1, null), new cljs.core.List(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.List(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), 
    null, 1, null), new cljs.core.List(null, s, null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, " never required", null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null)))), null, 1, null), new cljs.core.List(null, null, null, 1, null))));
  };
  borkdude.dynaload.dynaload.cljs$lang$maxFixedArity = 4;
  return null;
}();
borkdude.dynaload.dynaload.cljs$lang$macro = true;
goog.provide("malli.sci");
goog.require("cljs.core");
goog.require("borkdude.dynaload");
malli.sci.evaluator = function malli$sci$evaluator(options, fail_BANG_) {
  var eval_string_STAR_ = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.eval_string_STAR_ !== "undefined") {
      return sci.core.eval_string_STAR_;
    } else {
      var temp__5751__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__2923__auto__ = temp__5751__auto__;
        return cljs.core.val.call(null, e__2923__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "eval-string*", "sci.core/eval-string*", 2134763594, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "eval-string*", "sci.core/eval-string*", 2134763594, null)), " never required"].join(""));
      }
    }
  }, null);
  var init = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.init !== "undefined") {
      return sci.core.init;
    } else {
      var temp__5751__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__2923__auto__ = temp__5751__auto__;
        return cljs.core.val.call(null, e__2923__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "init", "sci.core/init", -622666095, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "init", "sci.core/init", -622666095, null)), " never required"].join(""));
      }
    }
  }, null);
  var fork = new borkdude.dynaload.LazyVar(function() {
    if (typeof sci !== "undefined" && typeof sci.core !== "undefined" && typeof sci.core.fork !== "undefined") {
      return sci.core.fork;
    } else {
      var temp__5751__auto__ = cljs.core.find.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "default", "default", -1987822328), null], null), new cljs.core.Keyword(null, "default", "default", -1987822328));
      if (cljs.core.truth_(temp__5751__auto__)) {
        var e__2923__auto__ = temp__5751__auto__;
        return cljs.core.val.call(null, e__2923__auto__);
      } else {
        throw new Error(["Var ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Symbol("sci.core", "fork", "sci.core/fork", -1806691042, null)), " does not exist, ", cljs.core.namespace.call(null, new cljs.core.Symbol("sci.core", "fork", "sci.core/fork", -1806691042, null)), " never required"].join(""));
      }
    }
  }, null);
  return function() {
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = cljs.core.deref.call(null, eval_string_STAR_);
      if (cljs.core.truth_(and__4174__auto__)) {
        var and__4174__auto____$1 = cljs.core.deref.call(null, init);
        if (cljs.core.truth_(and__4174__auto____$1)) {
          return cljs.core.deref.call(null, fork);
        } else {
          return and__4174__auto____$1;
        }
      } else {
        return and__4174__auto__;
      }
    }())) {
      var ctx = init.call(null, options);
      eval_string_STAR_.call(null, ctx, "(alias 'm 'malli.core)");
      return function malli$sci$evaluator_$_eval(s) {
        return eval_string_STAR_.call(null, fork.call(null, ctx), cljs.core.str.cljs$core$IFn$_invoke$arity$1(s));
      };
    } else {
      return fail_BANG_;
    }
  };
};
goog.provide("malli.core");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("malli.impl.regex");
goog.require("malli.impl.util");
goog.require("malli.registry");
goog.require("malli.sci");
malli.core.IntoSchema = function() {
};
malli.core._type = function malli$core$_type(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._type[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._type["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-type", this$);
      }
    }
  }
};
malli.core._type_properties = function malli$core$_type_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_type_properties$arity$1 == null)) {
    return this$.malli$core$IntoSchema$_type_properties$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._type_properties[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._type_properties["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-type-properties", this$);
      }
    }
  }
};
malli.core._properties_schema = function malli$core$_properties_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_properties_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_properties_schema$arity$2(this$, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._properties_schema[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, options);
    } else {
      var m__4485__auto__ = malli.core._properties_schema["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-properties-schema", this$);
      }
    }
  }
};
malli.core._children_schema = function malli$core$_children_schema(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_children_schema$arity$2 == null)) {
    return this$.malli$core$IntoSchema$_children_schema$arity$2(this$, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._children_schema[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, options);
    } else {
      var m__4485__auto__ = malli.core._children_schema["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-children-schema", this$);
      }
    }
  }
};
malli.core._into_schema = function malli$core$_into_schema(this$, properties, children, options) {
  if (!(this$ == null) && !(this$.malli$core$IntoSchema$_into_schema$arity$4 == null)) {
    return this$.malli$core$IntoSchema$_into_schema$arity$4(this$, properties, children, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._into_schema[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, properties, children, options);
    } else {
      var m__4485__auto__ = malli.core._into_schema["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, properties, children, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "IntoSchema.-into-schema", this$);
      }
    }
  }
};
malli.core.Schema = function() {
};
malli.core._validator = function malli$core$_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_validator$arity$1 == null)) {
    return this$.malli$core$Schema$_validator$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._validator[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._validator["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-validator", this$);
      }
    }
  }
};
malli.core._explainer = function malli$core$_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_explainer$arity$2 == null)) {
    return this$.malli$core$Schema$_explainer$arity$2(this$, path);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._explainer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, path);
    } else {
      var m__4485__auto__ = malli.core._explainer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-explainer", this$);
      }
    }
  }
};
malli.core._parser = function malli$core$_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parser$arity$1 == null)) {
    return this$.malli$core$Schema$_parser$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._parser[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._parser["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-parser", this$);
      }
    }
  }
};
malli.core._unparser = function malli$core$_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_unparser$arity$1 == null)) {
    return this$.malli$core$Schema$_unparser$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._unparser[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._unparser["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-unparser", this$);
      }
    }
  }
};
malli.core._transformer = function malli$core$_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_transformer$arity$4 == null)) {
    return this$.malli$core$Schema$_transformer$arity$4(this$, transformer, method, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._transformer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, transformer, method, options);
    } else {
      var m__4485__auto__ = malli.core._transformer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, transformer, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-transformer", this$);
      }
    }
  }
};
malli.core._walk = function malli$core$_walk(this$, walker, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_walk$arity$4 == null)) {
    return this$.malli$core$Schema$_walk$arity$4(this$, walker, path, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._walk[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, walker, path, options);
    } else {
      var m__4485__auto__ = malli.core._walk["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, walker, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-walk", this$);
      }
    }
  }
};
malli.core._properties = function malli$core$_properties(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_properties$arity$1 == null)) {
    return this$.malli$core$Schema$_properties$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._properties[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._properties["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-properties", this$);
      }
    }
  }
};
malli.core._options = function malli$core$_options(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_options$arity$1 == null)) {
    return this$.malli$core$Schema$_options$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._options[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._options["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-options", this$);
      }
    }
  }
};
malli.core._children = function malli$core$_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_children$arity$1 == null)) {
    return this$.malli$core$Schema$_children$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._children[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._children["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-children", this$);
      }
    }
  }
};
malli.core._parent = function malli$core$_parent(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_parent$arity$1 == null)) {
    return this$.malli$core$Schema$_parent$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._parent[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._parent["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-parent", this$);
      }
    }
  }
};
malli.core._form = function malli$core$_form(this$) {
  if (!(this$ == null) && !(this$.malli$core$Schema$_form$arity$1 == null)) {
    return this$.malli$core$Schema$_form$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._form[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._form["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Schema.-form", this$);
      }
    }
  }
};
malli.core.AST = function() {
};
malli.core._to_ast = function malli$core$_to_ast(this$, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_to_ast$arity$2 == null)) {
    return this$.malli$core$AST$_to_ast$arity$2(this$, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._to_ast[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, options);
    } else {
      var m__4485__auto__ = malli.core._to_ast["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "AST.-to-ast", this$);
      }
    }
  }
};
malli.core._from_ast = function malli$core$_from_ast(this$, ast, options) {
  if (!(this$ == null) && !(this$.malli$core$AST$_from_ast$arity$3 == null)) {
    return this$.malli$core$AST$_from_ast$arity$3(this$, ast, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._from_ast[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, ast, options);
    } else {
      var m__4485__auto__ = malli.core._from_ast["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, ast, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "AST.-from-ast", this$);
      }
    }
  }
};
malli.core.EntryParser = function() {
};
malli.core._entry_keyset = function malli$core$_entry_keyset(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_keyset$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_keyset$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entry_keyset[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entry_keyset["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-keyset", this$);
      }
    }
  }
};
malli.core._entry_children = function malli$core$_entry_children(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_children$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_children$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entry_children[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entry_children["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-children", this$);
      }
    }
  }
};
malli.core._entry_entries = function malli$core$_entry_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_entries$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_entries$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entry_entries[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entry_entries["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-entries", this$);
      }
    }
  }
};
malli.core._entry_forms = function malli$core$_entry_forms(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntryParser$_entry_forms$arity$1 == null)) {
    return this$.malli$core$EntryParser$_entry_forms$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entry_forms[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entry_forms["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntryParser.-entry-forms", this$);
      }
    }
  }
};
malli.core.EntrySchema = function() {
};
malli.core._entries = function malli$core$_entries(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entries$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entries$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entries[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entries["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntrySchema.-entries", this$);
      }
    }
  }
};
malli.core._entry_parser = function malli$core$_entry_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$EntrySchema$_entry_parser$arity$1 == null)) {
    return this$.malli$core$EntrySchema$_entry_parser$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._entry_parser[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._entry_parser["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "EntrySchema.-entry-parser", this$);
      }
    }
  }
};
malli.core.Cached = function() {
};
malli.core._cache = function malli$core$_cache(this$) {
  if (!(this$ == null) && !(this$.malli$core$Cached$_cache$arity$1 == null)) {
    return this$.malli$core$Cached$_cache$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._cache[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._cache["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Cached.-cache", this$);
      }
    }
  }
};
malli.core.LensSchema = function() {
};
malli.core._keep = function malli$core$_keep(this$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_keep$arity$1 == null)) {
    return this$.malli$core$LensSchema$_keep$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._keep[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._keep["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-keep", this$);
      }
    }
  }
};
malli.core._get = function malli$core$_get(this$, key, default$) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_get$arity$3 == null)) {
    return this$.malli$core$LensSchema$_get$arity$3(this$, key, default$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._get[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, key, default$);
    } else {
      var m__4485__auto__ = malli.core._get["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, key, default$);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-get", this$);
      }
    }
  }
};
malli.core._set = function malli$core$_set(this$, key, value) {
  if (!(this$ == null) && !(this$.malli$core$LensSchema$_set$arity$3 == null)) {
    return this$.malli$core$LensSchema$_set$arity$3(this$, key, value);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._set[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, key, value);
    } else {
      var m__4485__auto__ = malli.core._set["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, key, value);
      } else {
        throw cljs.core.missing_protocol.call(null, "LensSchema.-set", this$);
      }
    }
  }
};
malli.core.RefSchema = function() {
};
malli.core._ref = function malli$core$_ref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_ref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_ref$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._ref[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._ref["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RefSchema.-ref", this$);
      }
    }
  }
};
malli.core._deref = function malli$core$_deref(this$) {
  if (!(this$ == null) && !(this$.malli$core$RefSchema$_deref$arity$1 == null)) {
    return this$.malli$core$RefSchema$_deref$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._deref[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._deref["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RefSchema.-deref", this$);
      }
    }
  }
};
malli.core.Walker = function() {
};
malli.core._accept = function malli$core$_accept(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_accept$arity$4 == null)) {
    return this$.malli$core$Walker$_accept$arity$4(this$, schema, path, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._accept[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, schema, path, options);
    } else {
      var m__4485__auto__ = malli.core._accept["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, schema, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-accept", this$);
      }
    }
  }
};
malli.core._inner = function malli$core$_inner(this$, schema, path, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_inner$arity$4 == null)) {
    return this$.malli$core$Walker$_inner$arity$4(this$, schema, path, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._inner[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, schema, path, options);
    } else {
      var m__4485__auto__ = malli.core._inner["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, schema, path, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-inner", this$);
      }
    }
  }
};
malli.core._outer = function malli$core$_outer(this$, schema, path, children, options) {
  if (!(this$ == null) && !(this$.malli$core$Walker$_outer$arity$5 == null)) {
    return this$.malli$core$Walker$_outer$arity$5(this$, schema, path, children, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._outer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, schema, path, children, options);
    } else {
      var m__4485__auto__ = malli.core._outer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, schema, path, children, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Walker.-outer", this$);
      }
    }
  }
};
malli.core.Transformer = function() {
};
malli.core._transformer_chain = function malli$core$_transformer_chain(this$) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_transformer_chain$arity$1 == null)) {
    return this$.malli$core$Transformer$_transformer_chain$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._transformer_chain[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._transformer_chain["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "Transformer.-transformer-chain", this$);
      }
    }
  }
};
malli.core._value_transformer = function malli$core$_value_transformer(this$, schema, method, options) {
  if (!(this$ == null) && !(this$.malli$core$Transformer$_value_transformer$arity$4 == null)) {
    return this$.malli$core$Transformer$_value_transformer$arity$4(this$, schema, method, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._value_transformer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, schema, method, options);
    } else {
      var m__4485__auto__ = malli.core._value_transformer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, schema, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "Transformer.-value-transformer", this$);
      }
    }
  }
};
malli.core.RegexSchema = function() {
};
malli.core._regex_op_QMARK_ = function malli$core$_regex_op_QMARK_(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_op_QMARK_$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_op_QMARK_[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._regex_op_QMARK_["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-op?", this$);
      }
    }
  }
};
malli.core._regex_validator = function malli$core$_regex_validator(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_validator$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_validator$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_validator[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._regex_validator["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-validator", this$);
      }
    }
  }
};
malli.core._regex_explainer = function malli$core$_regex_explainer(this$, path) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_explainer$arity$2 == null)) {
    return this$.malli$core$RegexSchema$_regex_explainer$arity$2(this$, path);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_explainer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, path);
    } else {
      var m__4485__auto__ = malli.core._regex_explainer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, path);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-explainer", this$);
      }
    }
  }
};
malli.core._regex_unparser = function malli$core$_regex_unparser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_unparser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_unparser$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_unparser[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._regex_unparser["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-unparser", this$);
      }
    }
  }
};
malli.core._regex_parser = function malli$core$_regex_parser(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_parser$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_parser$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_parser[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._regex_parser["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-parser", this$);
      }
    }
  }
};
malli.core._regex_transformer = function malli$core$_regex_transformer(this$, transformer, method, options) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_transformer$arity$4 == null)) {
    return this$.malli$core$RegexSchema$_regex_transformer$arity$4(this$, transformer, method, options);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_transformer[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, transformer, method, options);
    } else {
      var m__4485__auto__ = malli.core._regex_transformer["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, transformer, method, options);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-transformer", this$);
      }
    }
  }
};
malli.core._regex_min_max = function malli$core$_regex_min_max(this$) {
  if (!(this$ == null) && !(this$.malli$core$RegexSchema$_regex_min_max$arity$1 == null)) {
    return this$.malli$core$RegexSchema$_regex_min_max$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = malli.core._regex_min_max[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = malli.core._regex_min_max["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "RegexSchema.-regex-min-max", this$);
      }
    }
  }
};
malli.core._ref_schema_QMARK_ = function malli$core$_ref_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$RefSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_parser_QMARK_ = function malli$core$_entry_parser_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntryParser$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._entry_schema_QMARK_ = function malli$core$_entry_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$EntrySchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._cached_QMARK_ = function malli$core$_cached_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Cached$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._ast_QMARK_ = function malli$core$_ast_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$AST$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core._transformer_QMARK_ = function malli$core$_transformer_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Transformer$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
goog.object.set(malli.core.RegexSchema, "_", true);
goog.object.set(malli.core._regex_op_QMARK_, "_", function(_) {
  return false;
});
goog.object.set(malli.core._regex_validator, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_validator.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_validator.call(null, malli.core._validator.call(null, this$));
  }
});
goog.object.set(malli.core._regex_explainer, "_", function(this$, path) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_explainer.call(null, malli.core._deref.call(null, this$), path);
  } else {
    return malli.impl.regex.item_explainer.call(null, path, this$, malli.core._explainer.call(null, this$, path));
  }
});
goog.object.set(malli.core._regex_parser, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_parser.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_parser.call(null, malli.core.parser.call(null, this$));
  }
});
goog.object.set(malli.core._regex_unparser, "_", function(this$) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_unparser.call(null, malli.core._deref.call(null, this$));
  } else {
    return malli.impl.regex.item_unparser.call(null, malli.core.unparser.call(null, this$));
  }
});
goog.object.set(malli.core._regex_transformer, "_", function(this$, transformer, method, options) {
  if (malli.core._ref_schema_QMARK_.call(null, this$)) {
    return malli.core._regex_transformer.call(null, malli.core._deref.call(null, this$), transformer, method, options);
  } else {
    return malli.impl.regex.item_transformer.call(null, method, malli.core._validator.call(null, this$), function() {
      var or__4185__auto__ = malli.core._transformer.call(null, this$, transformer, method, options);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.identity;
      }
    }());
  }
});
goog.object.set(malli.core._regex_min_max, "_", function(_) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null);
});
malli.core._deprecated_BANG_ = function malli$core$_deprecated_BANG_(x) {
  return cljs.core.println.call(null, "DEPRECATED:", x);
};
malli.core._fail_BANG_ = function malli$core$_fail_BANG_(var_args) {
  var G__8919 = arguments.length;
  switch(G__8919) {
    case 1:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return malli.core._fail_BANG_.call(null, type, null);
};
malli.core._fail_BANG_.cljs$core$IFn$_invoke$arity$2 = function(type, data) {
  throw cljs.core.ex_info.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(type), " ", cljs.core.pr_str.call(null, data)].join(""), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "message", "message", -406056002), type, new cljs.core.Keyword(null, "data", "data", -232669377), data], null));
};
malli.core._fail_BANG_.cljs$lang$maxFixedArity = 2;
malli.core._safe_pred = function malli$core$_safe_pred(f) {
  return function(p1__8921_SHARP_) {
    try {
      return cljs.core.boolean$.call(null, f.call(null, p1__8921_SHARP_));
    } catch (e8922) {
      if (e8922 instanceof Error) {
        var _ = e8922;
        return false;
      } else {
        throw e8922;
      }
    }
  };
};
malli.core._keyword__GT_string = function malli$core$_keyword__GT_string(x) {
  if (x instanceof cljs.core.Keyword) {
    var temp__5751__auto__ = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(temp__5751__auto__)) {
      var nn = temp__5751__auto__;
      return [nn, "/", cljs.core.name.call(null, x)].join("");
    } else {
      return cljs.core.name.call(null, x);
    }
  } else {
    return x;
  }
};
malli.core._guard = function malli$core$_guard(pred, tf) {
  if (cljs.core.truth_(tf)) {
    return function(x) {
      if (cljs.core.truth_(pred.call(null, x))) {
        return tf.call(null, x);
      } else {
        return x;
      }
    };
  } else {
    return null;
  }
};
malli.core._unlift_keys = function malli$core$_unlift_keys(m, prefix) {
  return cljs.core.reduce_kv.call(null, function(p1__8924_SHARP_, p2__8923_SHARP_, p3__8925_SHARP_) {
    if (cljs.core._EQ_.call(null, cljs.core.name.call(null, prefix), cljs.core.namespace.call(null, p2__8923_SHARP_))) {
      return cljs.core.assoc.call(null, p1__8924_SHARP_, cljs.core.keyword.call(null, cljs.core.name.call(null, p2__8923_SHARP_)), p3__8925_SHARP_);
    } else {
      return p1__8924_SHARP_;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._check_children_QMARK_ = function malli$core$_check_children_QMARK_() {
  return true;
};
malli.core._check_children_BANG_ = function malli$core$_check_children_BANG_(var_args) {
  var G__8927 = arguments.length;
  switch(G__8927) {
    case 4:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, props) {
  malli.core._deprecated_BANG_.call(null, "use (m/-check-children! type properties children min max) instead.");
  return malli.core._check_children_BANG_.call(null, type, properties, children, (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(props), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(props));
};
malli.core._check_children_BANG_.cljs$core$IFn$_invoke$arity$5 = function(type, properties, children, min, max) {
  if (malli.core._check_children_QMARK_.call(null)) {
    var temp__5753__auto__ = cljs.core.sequential_QMARK_.call(null, children) || children == null ? cljs.core.count.call(null, children) : false;
    if (cljs.core.truth_(temp__5753__auto__)) {
      var size = temp__5753__auto__;
      if (cljs.core.truth_(function() {
        var or__4185__auto__ = function() {
          var and__4174__auto__ = min;
          if (cljs.core.truth_(and__4174__auto__)) {
            return size < min;
          } else {
            return and__4174__auto__;
          }
        }();
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var and__4174__auto__ = max;
          if (cljs.core.truth_(and__4174__auto__)) {
            return size > max;
          } else {
            return and__4174__auto__;
          }
        }
      }())) {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "child-error", "malli.core/child-error", -473817473), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "properties", "properties", 685819552), properties, new cljs.core.Keyword(null, "children", "children", -940561982), children, new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 
        61366548), max], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core._check_children_BANG_.cljs$lang$maxFixedArity = 5;
malli.core._pointer = function malli$core$_pointer(id, schema, options) {
  return malli.core._into_schema.call(null, malli.core._schema_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), id], null)), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [schema], null), options);
};
malli.core._reference_QMARK_ = function malli$core$_reference_QMARK_(_QMARK_schema) {
  return typeof _QMARK_schema === "string" || cljs.core.qualified_keyword_QMARK_.call(null, _QMARK_schema);
};
malli.core._lazy = function malli$core$_lazy(ref, options) {
  return malli.core._into_schema.call(null, malli.core._ref_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true], null)), null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ref], null), options);
};
malli.core._boolean_fn = function malli$core$_boolean_fn(x) {
  if (cljs.core.boolean_QMARK_.call(null, x)) {
    return cljs.core.constantly.call(null, x);
  } else {
    if (cljs.core.ifn_QMARK_.call(null, x)) {
      return x;
    } else {
      return cljs.core.constantly.call(null, false);
    }
  }
};
malli.core._comp = function malli$core$_comp(var_args) {
  var G__8934 = arguments.length;
  switch(G__8934) {
    case 0:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___8936 = arguments.length;
      var i__4790__auto___8937 = 0;
      while (true) {
        if (i__4790__auto___8937 < len__4789__auto___8936) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___8937]);
          var G__8938 = i__4790__auto___8937 + 1;
          i__4790__auto___8937 = G__8938;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(3), 0, null);
      return malli.core._comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4811__auto__);
  }
};
malli.core._comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
malli.core._comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function(x) {
    return f.call(null, g.call(null, x));
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function(x) {
    return f.call(null, g.call(null, h.call(null, x)));
  };
};
malli.core._comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  return malli.core._comp.call(null, cljs.core.apply.call(null, malli.core._comp, fs), function(x) {
    return f1.call(null, f2.call(null, f3.call(null, x)));
  });
};
malli.core._comp.cljs$lang$applyTo = function(seq8930) {
  var G__8931 = cljs.core.first.call(null, seq8930);
  var seq8930__$1 = cljs.core.next.call(null, seq8930);
  var G__8932 = cljs.core.first.call(null, seq8930__$1);
  var seq8930__$2 = cljs.core.next.call(null, seq8930__$1);
  var G__8933 = cljs.core.first.call(null, seq8930__$2);
  var seq8930__$3 = cljs.core.next.call(null, seq8930__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8931, G__8932, G__8933, seq8930__$3);
};
malli.core._comp.cljs$lang$maxFixedArity = 3;
malli.core._update = function malli$core$_update(x, k, f) {
  return cljs.core.assoc.call(null, x, k, f.call(null, cljs.core.get.call(null, x, k)));
};
malli.core._equals = function malli$core$_equals(x, y) {
  return x === y || cljs.core._EQ_.call(null, x, y);
};
malli.core._vmap = function malli$core$_vmap(var_args) {
  var G__8940 = arguments.length;
  switch(G__8940) {
    case 1:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._vmap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$1 = function(os) {
  return malli.impl.util._vmap.call(null, cljs.core.identity, os);
};
malli.core._vmap.cljs$core$IFn$_invoke$arity$2 = function(f, os) {
  return malli.impl.util._vmap.call(null, f, os);
};
malli.core._vmap.cljs$lang$maxFixedArity = 2;
malli.core._memoize = function malli$core$_memoize(f) {
  var value = cljs.core.atom.call(null, null);
  return function() {
    var or__4185__auto__ = cljs.core.deref.call(null, value);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.reset_BANG_.call(null, value, f.call(null));
    }
  };
};
malli.core._function_info = function malli$core$_function_info(schema) {
  if (cljs.core._EQ_.call(null, malli.core.type.call(null, schema), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128))) {
    var vec__8942 = malli.core._children.call(null, schema);
    var input = cljs.core.nth.call(null, vec__8942, 0, null);
    var output = cljs.core.nth.call(null, vec__8942, 1, null);
    var map__8945 = malli.core._regex_min_max.call(null, input);
    var map__8945__$1 = (!(map__8945 == null) ? map__8945.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8945.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8945) : map__8945;
    var min = cljs.core.get.call(null, map__8945__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var max = cljs.core.get.call(null, map__8945__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
    var G__8947 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "arity", "arity", -1808556135), cljs.core._EQ_.call(null, min, max) ? min : new cljs.core.Keyword(null, "varargs", "varargs", 1030150858), new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "output", "output", -1105869043), output], null);
    if (cljs.core.truth_(max)) {
      return cljs.core.assoc.call(null, G__8947, new cljs.core.Keyword(null, "max", "max", 61366548), max);
    } else {
      return G__8947;
    }
  } else {
    return null;
  }
};
malli.core._group_by_arity_BANG_ = function malli$core$_group_by_arity_BANG_(infos) {
  var aritys = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
  return cljs.core.reduce.call(null, function(acc, p__8948) {
    var map__8949 = p__8948;
    var map__8949__$1 = (!(map__8949 == null) ? map__8949.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8949.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8949) : map__8949;
    var info = map__8949__$1;
    var min = cljs.core.get.call(null, map__8949__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var arity = cljs.core.get.call(null, map__8949__$1, new cljs.core.Keyword(null, "arity", "arity", -1808556135));
    var vararg = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "varargs", "varargs", 1030150858), arity);
    var min__$1 = cljs.core.truth_(vararg ? cljs.core.deref.call(null, aritys).call(null, min) : false) ? cljs.core.apply.call(null, cljs.core.max, cljs.core.filter.call(null, cljs.core.int_QMARK_, cljs.core.deref.call(null, aritys))) + 1 : min;
    if (cljs.core.truth_(vararg ? cljs.core.deref.call(null, aritys).call(null, arity) : false)) {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "multiple-varargs", "malli.core/multiple-varargs", 1982057671), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "infos", "infos", -927309652), infos], null));
    } else {
      if (cljs.core.truth_(cljs.core.deref.call(null, aritys).call(null, min__$1))) {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "duplicate-arities", "malli.core/duplicate-arities", -374423504), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "infos", "infos", -927309652), infos], null));
      } else {
        cljs.core.swap_BANG_.call(null, aritys, cljs.core.conj, arity);
        return cljs.core.assoc.call(null, acc, arity, cljs.core.assoc.call(null, info, new cljs.core.Keyword(null, "min", "min", 444991522), min__$1));
      }
    }
  }, cljs.core.PersistentArrayMap.EMPTY, infos);
};
malli.core._re_min_max = function malli$core$_re_min_max(f, p__8951, child) {
  var map__8952 = p__8951;
  var map__8952__$1 = (!(map__8952 == null) ? map__8952.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8952.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8952) : map__8952;
  var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__8952__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__8952__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var map__8954 = malli.core._regex_min_max.call(null, child);
  var map__8954__$1 = (!(map__8954 == null) ? map__8954.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8954.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8954) : map__8954;
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__8954__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__8954__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var G__8956 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), f.call(null, function() {
    var or__4185__auto__ = min_SINGLEQUOTE_;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return 0;
    }
  }(), min_SINGLEQUOTE__SINGLEQUOTE_)], null);
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4174__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4174__auto__;
    }
  }())) {
    return cljs.core.assoc.call(null, G__8956, new cljs.core.Keyword(null, "max", "max", 61366548), f.call(null, max_SINGLEQUOTE_, max_SINGLEQUOTE__SINGLEQUOTE_));
  } else {
    return G__8956;
  }
};
malli.core._re_alt_min_max = function malli$core$_re_alt_min_max(p__8957, child) {
  var map__8958 = p__8957;
  var map__8958__$1 = (!(map__8958 == null) ? map__8958.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8958.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8958) : map__8958;
  var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__8958__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__8958__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var map__8960 = malli.core._regex_min_max.call(null, child);
  var map__8960__$1 = (!(map__8960 == null) ? map__8960.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__8960.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8960) : map__8960;
  var min_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__8960__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE__SINGLEQUOTE_ = cljs.core.get.call(null, map__8960__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var G__8962 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), function() {
    var x__4276__auto__ = function() {
      var or__4185__auto__ = min_SINGLEQUOTE_;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return malli.impl.util._PLUS_max_size_PLUS_;
      }
    }();
    var y__4277__auto__ = min_SINGLEQUOTE__SINGLEQUOTE_;
    return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
  }()], null);
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = max_SINGLEQUOTE_;
    if (cljs.core.truth_(and__4174__auto__)) {
      return max_SINGLEQUOTE__SINGLEQUOTE_;
    } else {
      return and__4174__auto__;
    }
  }())) {
    return cljs.core.assoc.call(null, G__8962, new cljs.core.Keyword(null, "max", "max", 61366548), function() {
      var x__4273__auto__ = max_SINGLEQUOTE_;
      var y__4274__auto__ = max_SINGLEQUOTE__SINGLEQUOTE_;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }());
  } else {
    return G__8962;
  }
};
malli.core._register_var = function malli$core$_register_var(registry, _QMARK_v) {
  var vec__8963 = cljs.core.vector_QMARK_.call(null, _QMARK_v) ? _QMARK_v : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_v, cljs.core.deref.call(null, _QMARK_v)], null);
  var v = cljs.core.nth.call(null, vec__8963, 0, null);
  var pred = cljs.core.nth.call(null, vec__8963, 1, null);
  var name = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  var schema = malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), name, new cljs.core.Keyword(null, "pred", "pred", 1927423397), pred], null));
  return cljs.core.assoc.call(null, cljs.core.assoc.call(null, registry, name, schema), cljs.core.deref.call(null, v), schema);
};
malli.core._registry = function malli$core$_registry(var_args) {
  var G__8967 = arguments.length;
  switch(G__8967) {
    case 0:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._registry.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._registry.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.default_registry;
};
malli.core._registry.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  var or__4185__auto__ = cljs.core.truth_(opts) ? malli.registry.registry.call(null, opts.call(null, new cljs.core.Keyword(null, "registry", "registry", 1021159018))) : null;
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return malli.core.default_registry;
  }
};
malli.core._registry.cljs$lang$maxFixedArity = 1;
malli.core._property_registry = function malli$core$_property_registry(m, options, f) {
  var options__$1 = cljs.core.assoc.call(null, options, new cljs.core.Keyword("malli.core", "allow-invalid-refs", "malli.core/allow-invalid-refs", -1863169617), true);
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    return cljs.core.assoc.call(null, acc, k, f.call(null, malli.core.schema.call(null, v, options__$1)));
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._delayed_registry = function malli$core$_delayed_registry(m, f) {
  return cljs.core.reduce_kv.call(null, function(acc, k, v) {
    return cljs.core.assoc.call(null, acc, k, function() {
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core8969 !== "undefined") {
      } else {
        malli.core.t_malli$core8969 = function(m, f, acc, k, v, meta8970) {
          this.m = m;
          this.f = f;
          this.acc = acc;
          this.k = k;
          this.v = v;
          this.meta8970 = meta8970;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core8969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8971, meta8970__$1) {
          var self__ = this;
          var _8971__$1 = this;
          return new malli.core.t_malli$core8969(self__.m, self__.f, self__.acc, self__.k, self__.v, meta8970__$1);
        };
        malli.core.t_malli$core8969.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8971) {
          var self__ = this;
          var _8971__$1 = this;
          return self__.meta8970;
        };
        malli.core.t_malli$core8969.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core8969.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(_, ___$1, ___$2, options) {
          var self__ = this;
          var ___$3 = this;
          return self__.f.call(null, self__.v, options);
        };
        malli.core.t_malli$core8969.getBasis = function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "acc", "acc", -1815869457, null), new cljs.core.Symbol(null, "k", "k", -505765866, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "meta8970", "meta8970", 183310014, null)], null);
        };
        malli.core.t_malli$core8969.cljs$lang$type = true;
        malli.core.t_malli$core8969.cljs$lang$ctorStr = "malli.core/t_malli$core8969";
        malli.core.t_malli$core8969.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core8969");
        };
        malli.core.__GT_t_malli$core8969 = function malli$core$_delayed_registry_$___GT_t_malli$core8969(m__$1, f__$1, acc__$1, k__$1, v__$1, meta8970) {
          return new malli.core.t_malli$core8969(m__$1, f__$1, acc__$1, k__$1, v__$1, meta8970);
        };
      }
      return new malli.core.t_malli$core8969(m, f, acc, k, v, cljs.core.PersistentArrayMap.EMPTY);
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
malli.core._lookup = function malli$core$_lookup(_QMARK_schema, options) {
  var registry = malli.core._registry.call(null, options);
  var or__4185__auto__ = malli.registry._schema.call(null, registry, _QMARK_schema);
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var G__8972 = registry;
    var G__8972__$1 = G__8972 == null ? null : malli.registry._schema.call(null, G__8972, cljs.core.type.call(null, _QMARK_schema));
    if (G__8972__$1 == null) {
      return null;
    } else {
      return malli.core._into_schema.call(null, G__8972__$1, null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_schema], null), options);
    }
  }
};
malli.core._lookup_BANG_ = function malli$core$_lookup_BANG_(_QMARK_schema, f, options) {
  var or__4185__auto__ = function() {
    var and__4174__auto__ = f;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = f.call(null, _QMARK_schema);
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return _QMARK_schema;
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }();
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = malli.core._lookup.call(null, _QMARK_schema, options);
    if (cljs.core.truth_(or__4185__auto____$1)) {
      return or__4185__auto____$1;
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-schema", "malli.core/invalid-schema", 1923990979), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), _QMARK_schema], null));
    }
  }
};
malli.core._properties_and_options = function malli$core$_properties_and_options(properties, options, f) {
  var temp__5751__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var r = temp__5751__auto__;
    var options__$1 = malli.core._update.call(null, options, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(p1__8973_SHARP_) {
      return malli.registry.composite_registry.call(null, r, function() {
        var or__4185__auto__ = p1__8973_SHARP_;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return malli.core._registry.call(null, options);
        }
      }());
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, properties, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, f)), options__$1], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [properties, options], null);
  }
};
malli.core._create_cache = function malli$core$_create_cache(_options) {
  return cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._cached = function malli$core$_cached(s, k, f) {
  if (malli.core._cached_QMARK_.call(null, s)) {
    var c = malli.core._cache.call(null, s);
    var or__4185__auto__ = cljs.core.deref.call(null, c).call(null, k);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, k, f.call(null, s)).call(null, k);
    }
  } else {
    return f.call(null, s);
  }
};
malli.core._create_form = function malli$core$_create_form(type, properties, children, options) {
  var has_children = cljs.core.seq.call(null, children);
  var has_properties = cljs.core.seq.call(null, properties);
  var properties__$1 = has_properties ? function() {
    var registry = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
    var G__8974 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.assoc.call(null, G__8974, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, registry, options, malli.core._form));
    } else {
      return G__8974;
    }
  }() : null;
  if (has_properties && has_children) {
    return cljs.core.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null), children);
  } else {
    if (has_properties) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, properties__$1], null);
    } else {
      if (has_children) {
        return cljs.core.reduce.call(null, cljs.core.conj, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null), children);
      } else {
        return type;
      }
    }
  }
};
malli.core._simple_form = function malli$core$_simple_form(parent, properties, children, f, options) {
  return malli.core._create_form.call(null, malli.core._type.call(null, parent), properties, malli.core._vmap.call(null, f, children), options);
};
malli.core._create_entry_form = function malli$core$_create_entry_form(parent, properties, entry_parser, options) {
  return malli.core._create_form.call(null, malli.core._type.call(null, parent), properties, malli.core._entry_forms.call(null, entry_parser), options);
};
malli.core._inner_indexed = function malli$core$_inner_indexed(walker, path, children, options) {
  return malli.core._vmap.call(null, function(p__8975) {
    var vec__8976 = p__8975;
    var i = cljs.core.nth.call(null, vec__8976, 0, null);
    var c = cljs.core.nth.call(null, vec__8976, 1, null);
    return malli.core._inner.call(null, walker, c, cljs.core.conj.call(null, path, i), options);
  }, cljs.core.map_indexed.call(null, cljs.core.vector, children));
};
malli.core._inner_entries = function malli$core$_inner_entries(walker, path, entries, options) {
  return malli.core._vmap.call(null, function(p__8979) {
    var vec__8980 = p__8979;
    var k = cljs.core.nth.call(null, vec__8980, 0, null);
    var s = cljs.core.nth.call(null, vec__8980, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._properties.call(null, s), malli.core._inner.call(null, walker, s, cljs.core.conj.call(null, path, k), options)], null);
  }, entries);
};
malli.core._walk_entries = function malli$core$_walk_entries(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._inner_entries.call(null, walker, path, malli.core._entries.call(null, schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_indexed = function malli$core$_walk_indexed(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._inner_indexed.call(null, walker, path, malli.core._children.call(null, schema), options), options);
  } else {
    return null;
  }
};
malli.core._walk_leaf = function malli$core$_walk_leaf(schema, walker, path, options) {
  if (cljs.core.truth_(malli.core._accept.call(null, walker, schema, path, options))) {
    return malli.core._outer.call(null, walker, schema, path, malli.core._children.call(null, schema), options);
  } else {
    return null;
  }
};
malli.core._set_children = function malli$core$_set_children(schema, children) {
  if (malli.core._equals.call(null, children, malli.core._children.call(null, schema))) {
    return schema;
  } else {
    return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), malli.core._properties.call(null, schema), children, malli.core._options.call(null, schema));
  }
};
malli.core._set_properties = function malli$core$_set_properties(schema, properties) {
  if (malli.core._equals.call(null, properties, malli.core._properties.call(null, schema))) {
    return schema;
  } else {
    return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), properties, function() {
      var or__4185__auto__ = malli.core._entry_schema_QMARK_.call(null, schema) ? malli.core._entry_parser.call(null, schema) : false;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return malli.core._children.call(null, schema);
      }
    }(), malli.core._options.call(null, schema));
  }
};
malli.core._update_options = function malli$core$_update_options(schema, f) {
  return malli.core._into_schema.call(null, malli.core._parent.call(null, schema), malli.core._properties.call(null, schema), malli.core._children.call(null, schema), f.call(null, malli.core._options.call(null, schema)));
};
malli.core._set_assoc_children = function malli$core$_set_assoc_children(schema, key, value) {
  return malli.core._set_children.call(null, schema, cljs.core.assoc.call(null, malli.core._children.call(null, schema), key, value));
};
malli.core._get_entries = function malli$core$_get_entries(schema, key, default$) {
  var or__4185__auto__ = cljs.core.some.call(null, cljs.core.vector_QMARK_.call(null, key) && cljs.core._EQ_.call(null, new cljs.core.Keyword("malli.core", "find", "malli.core/find", 163301512), cljs.core.nth.call(null, key, 0)) ? function(e) {
    if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), cljs.core.nth.call(null, key, 1))) {
      return e;
    } else {
      return null;
    }
  } : function(e) {
    if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), key)) {
      return cljs.core.nth.call(null, e, 2);
    } else {
      return null;
    }
  }, malli.core._children.call(null, schema));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return default$;
  }
};
malli.core._simple_entry_parser = function malli$core$_simple_entry_parser(keyset, children, forms) {
  var entries = cljs.core.map.call(null, function(p__8983) {
    var vec__8984 = p__8983;
    var k = cljs.core.nth.call(null, vec__8984, 0, null);
    var p = cljs.core.nth.call(null, vec__8984, 1, null);
    var s = cljs.core.nth.call(null, vec__8984, 2, null);
    return malli.impl.util._tagged.call(null, k, malli.core._val_schema.call(null, s, p));
  }, children);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core8987 !== "undefined") {
  } else {
    malli.core.t_malli$core8987 = function(keyset, children, forms, entries, meta8988) {
      this.keyset = keyset;
      this.children = children;
      this.forms = forms;
      this.entries = entries;
      this.meta8988 = meta8988;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core8987.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8989, meta8988__$1) {
      var self__ = this;
      var _8989__$1 = this;
      return new malli.core.t_malli$core8987(self__.keyset, self__.children, self__.forms, self__.entries, meta8988__$1);
    };
    malli.core.t_malli$core8987.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8989) {
      var self__ = this;
      var _8989__$1 = this;
      return self__.meta8988;
    };
    malli.core.t_malli$core8987.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core8987.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.keyset;
    };
    malli.core.t_malli$core8987.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.children;
    };
    malli.core.t_malli$core8987.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.entries;
    };
    malli.core.t_malli$core8987.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.forms;
    };
    malli.core.t_malli$core8987.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "keyset", "keyset", 2135291099, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "forms", "forms", -608443419, null), new cljs.core.Symbol(null, "entries", "entries", 1553588366, null), new cljs.core.Symbol(null, "meta8988", "meta8988", 2075371358, null)], null);
    };
    malli.core.t_malli$core8987.cljs$lang$type = true;
    malli.core.t_malli$core8987.cljs$lang$ctorStr = "malli.core/t_malli$core8987";
    malli.core.t_malli$core8987.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core8987");
    };
    malli.core.__GT_t_malli$core8987 = function malli$core$_simple_entry_parser_$___GT_t_malli$core8987(keyset__$1, children__$1, forms__$1, entries__$1, meta8988) {
      return new malli.core.t_malli$core8987(keyset__$1, children__$1, forms__$1, entries__$1, meta8988);
    };
  }
  return new malli.core.t_malli$core8987(keyset, children, forms, entries, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._update_parsed = function malli$core$_update_parsed(entry_parser, _QMARK_key, value, options) {
  var vec__8990 = cljs.core.truth_(cljs.core.vector_QMARK_.call(null, _QMARK_key) ? cljs.core.nth.call(null, _QMARK_key, 0) : false) ? cljs.core.cons.call(null, true, _QMARK_key) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, _QMARK_key], null);
  var override = cljs.core.nth.call(null, vec__8990, 0, null);
  var k = cljs.core.nth.call(null, vec__8990, 1, null);
  var p = cljs.core.nth.call(null, vec__8990, 2, null);
  var keyset = malli.core._entry_keyset.call(null, entry_parser);
  var children = malli.core._entry_children.call(null, entry_parser);
  var forms = malli.core._entry_forms.call(null, entry_parser);
  var s = cljs.core.truth_(value) ? malli.core.schema.call(null, value, options) : null;
  var i = (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(keyset.call(null, k));
  if (s == null) {
    var cut = function malli$core$_update_parsed_$_cut(v) {
      return cljs.core.into.call(null, cljs.core.subvec.call(null, v, 0, i), cljs.core.subvec.call(null, v, i + 1));
    };
    return malli.core._simple_entry_parser.call(null, cljs.core.dissoc.call(null, keyset, k), cut.call(null, children), cut.call(null, forms));
  } else {
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, s], null);
    var p__$1 = cljs.core.truth_(i) ? cljs.core.truth_(override) ? p : cljs.core.nth.call(null, children.call(null, i), 1) : p;
    var f = cljs.core.seq.call(null, p__$1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p__$1, malli.core._form.call(null, s)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form.call(null, s)], null);
    if (cljs.core.truth_(i)) {
      return malli.core._simple_entry_parser.call(null, keyset, cljs.core.assoc.call(null, children, i, c), cljs.core.assoc.call(null, forms, i, f));
    } else {
      var size = cljs.core.count.call(null, keyset) + 1;
      return malli.core._simple_entry_parser.call(null, cljs.core.assoc.call(null, keyset, k, size), cljs.core.conj.call(null, children, c), cljs.core.conj.call(null, forms, f));
    }
  }
};
malli.core._set_entries = function malli$core$_set_entries(schema, _QMARK_key, value) {
  var temp__5751__auto__ = malli.core._entry_parser.call(null, schema);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var entry_parser = temp__5751__auto__;
    return malli.core._set_children.call(null, schema, malli.core._update_parsed.call(null, entry_parser, _QMARK_key, value, malli.core._options.call(null, schema)));
  } else {
    var found = cljs.core.atom.call(null, null);
    var vec__8993 = cljs.core.vector_QMARK_.call(null, _QMARK_key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.call(null, _QMARK_key, 0), cljs.core.second.call(null, _QMARK_key), true], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_key], null);
    var key = cljs.core.nth.call(null, vec__8993, 0, null);
    var props = cljs.core.nth.call(null, vec__8993, 1, null);
    var override = cljs.core.nth.call(null, vec__8993, 2, null);
    var children = function() {
      var G__8996 = malli.core._vmap.call(null, function(p__8997) {
        var vec__8998 = p__8997;
        var k = cljs.core.nth.call(null, vec__8998, 0, null);
        var p = cljs.core.nth.call(null, vec__8998, 1, null);
        var entry = vec__8998;
        if (cljs.core._EQ_.call(null, key, k)) {
          cljs.core.reset_BANG_.call(null, found, true);
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, cljs.core.truth_(override) ? props : p, value], null);
        } else {
          return entry;
        }
      }, malli.core._children.call(null, schema));
      var G__8996__$1 = cljs.core.not.call(null, cljs.core.deref.call(null, found)) ? cljs.core.conj.call(null, G__8996, cljs.core.truth_(key) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, props, value], null) : malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "key-missing", "malli.core/key-missing", -161579801))) : G__8996;
      return cljs.core.filter.call(null, function(e) {
        return !(cljs.core.last.call(null, e) == null);
      }, G__8996__$1);
    }();
    return malli.core._set_children.call(null, schema, children);
  }
};
malli.core._parse_entry = function malli$core$_parse_entry(e, naked_keys, lazy_refs, options, i, _children, _forms, _keyset) {
  var _collect = function malli$core$_parse_entry_$__collect(k, c, f, i__$1) {
    var i__$2 = i__$1 | 0;
    _keyset[2 * i__$2] = k;
    _keyset[2 * i__$2 + 1] = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "order", "order", -1254677256), i__$2], null);
    _children[i__$2] = c;
    _forms[i__$2] = f;
    return i__$2 + 1;
  };
  var _schema = function malli$core$_parse_entry_$__schema(e__$1) {
    return malli.core.schema.call(null, function() {
      var G__9002 = e__$1;
      if (cljs.core.truth_(malli.core._reference_QMARK_.call(null, e__$1) ? lazy_refs : false)) {
        return malli.core._lazy.call(null, G__9002, options);
      } else {
        return G__9002;
      }
    }(), options);
  };
  var _parse_ref_entry = function malli$core$_parse_entry_$__parse_ref_entry(e__$1) {
    var s = _schema.call(null, e__$1);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1, null, s], null);
    return _collect.call(null, e__$1, c, e__$1, i);
  };
  var _parse_ref_vector1 = function malli$core$_parse_entry_$__parse_ref_vector1(e__$1, e0) {
    var s = _schema.call(null, e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect.call(null, e0, c, e__$1, i);
  };
  var _parse_ref_vector2 = function malli$core$_parse_entry_$__parse_ref_vector2(e__$1, e0, e1) {
    var s = _schema.call(null, e0);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect.call(null, e0, c, e__$1, i);
  };
  var _parse_entry_else2 = function malli$core$_parse_entry_$__parse_entry_else2(e0, e1) {
    var s = _schema.call(null, e1);
    var f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, malli.core._form.call(null, s)], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, null, s], null);
    return _collect.call(null, e0, c, f, i);
  };
  var _parse_entry_else3 = function malli$core$_parse_entry_$__parse_entry_else3(e0, e1, e2) {
    var s = _schema.call(null, e2);
    var f_SINGLEQUOTE_ = malli.core._form.call(null, s);
    var f = cljs.core.truth_(e1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, f_SINGLEQUOTE_], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, f_SINGLEQUOTE_], null);
    var c = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e0, e1, s], null);
    return _collect.call(null, e0, c, f, i);
  };
  if (cljs.core.vector_QMARK_.call(null, e)) {
    var ea = cljs.core.object_array.call(null, e);
    var n = ea.length;
    var e0 = ea[0];
    if (n === 1) {
      if (cljs.core.truth_(malli.core._reference_QMARK_.call(null, e0) ? naked_keys : false)) {
        return _parse_ref_vector1.call(null, e, e0);
      } else {
        return i;
      }
    } else {
      var e1 = ea[1];
      if (n === 2) {
        if (malli.core._reference_QMARK_.call(null, e0) && cljs.core.map_QMARK_.call(null, e1)) {
          if (cljs.core.truth_(naked_keys)) {
            return _parse_ref_vector2.call(null, e, e0, e1);
          } else {
            return i;
          }
        } else {
          return _parse_entry_else2.call(null, e0, e1);
        }
      } else {
        var e2 = ea[2];
        return _parse_entry_else3.call(null, e0, e1, e2);
      }
    }
  } else {
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = naked_keys;
      if (cljs.core.truth_(and__4174__auto__)) {
        return malli.core._reference_QMARK_.call(null, e);
      } else {
        return and__4174__auto__;
      }
    }())) {
      return _parse_ref_entry.call(null, e);
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), e], null));
    }
  }
};
malli.core._eager_entry_parser = function malli$core$_eager_entry_parser(children, props, options) {
  var _vec = function malli$core$_eager_entry_parser_$__vec(arr) {
    return cljs.core.vec.call(null, arr);
  };
  var _map = function malli$core$_eager_entry_parser_$__map(arr) {
    var m = cljs.core.apply.call(null, cljs.core.array_map, arr);
    if (cljs.core._EQ_.call(null, 2 * cljs.core.count.call(null, m), cljs.core.count.call(null, arr))) {
    } else {
      malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "duplicate-keys", "malli.core/duplicate-keys", 1684166326));
    }
    return m;
  };
  var _arange = function malli$core$_eager_entry_parser_$__arange(arr, to) {
    return arr.slice(0, to);
  };
  var map__9004 = props;
  var map__9004__$1 = (!(map__9004 == null) ? map__9004.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9004.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9004) : map__9004;
  var naked_keys = cljs.core.get.call(null, map__9004__$1, new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828));
  var lazy_refs = cljs.core.get.call(null, map__9004__$1, new cljs.core.Keyword(null, "lazy-refs", "lazy-refs", 409178818));
  var ca = cljs.core.object_array.call(null, children);
  var n = ca.length;
  var _children = cljs.core.object_array.call(null, n);
  var _forms = cljs.core.object_array.call(null, n);
  var _keyset = cljs.core.object_array.call(null, 2 * n);
  var i = 0 | 0;
  var ci = 0 | 0;
  while (true) {
    if (ci === n) {
      var f = ci === i ? _vec : function(i, ci, map__9004, map__9004__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset) {
        return function(p1__9003_SHARP_) {
          return _vec.call(null, _arange.call(null, p1__9003_SHARP_, i));
        };
      }(i, ci, map__9004, map__9004__$1, naked_keys, lazy_refs, ca, n, _children, _forms, _keyset);
      return malli.core._simple_entry_parser.call(null, _map.call(null, _keyset), f.call(null, _children), f.call(null, _forms));
    } else {
      var G__9006 = malli.core._parse_entry.call(null, ca[i], naked_keys, lazy_refs, options, i, _children, _forms, _keyset) | 0;
      var G__9007 = ci + 1;
      i = G__9006;
      ci = G__9007;
      continue;
    }
    break;
  }
};
malli.core._lazy_entry_parser = function malli$core$_lazy_entry_parser(_QMARK_children, props, options) {
  var parser = new cljs.core.Delay(function() {
    return malli.core._eager_entry_parser.call(null, _QMARK_children, props, options);
  }, null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9008 !== "undefined") {
  } else {
    malli.core.t_malli$core9008 = function(_QMARK_children, props, options, parser, meta9009) {
      this._QMARK_children = _QMARK_children;
      this.props = props;
      this.options = options;
      this.parser = parser;
      this.meta9009 = meta9009;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9008.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9010, meta9009__$1) {
      var self__ = this;
      var _9010__$1 = this;
      return new malli.core.t_malli$core9008(self__._QMARK_children, self__.props, self__.options, self__.parser, meta9009__$1);
    };
    malli.core.t_malli$core9008.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9010) {
      var self__ = this;
      var _9010__$1 = this;
      return self__.meta9009;
    };
    malli.core.t_malli$core9008.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9008.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_keyset.call(null, cljs.core.deref.call(null, self__.parser));
    };
    malli.core.t_malli$core9008.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_children.call(null, cljs.core.deref.call(null, self__.parser));
    };
    malli.core.t_malli$core9008.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_entries.call(null, cljs.core.deref.call(null, self__.parser));
    };
    malli.core.t_malli$core9008.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._entry_forms.call(null, cljs.core.deref.call(null, self__.parser));
    };
    malli.core.t_malli$core9008.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?children", "?children", 2075030425, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "parser", "parser", 97036217, null), new cljs.core.Symbol(null, "meta9009", "meta9009", 756984022, null)], null);
    };
    malli.core.t_malli$core9008.cljs$lang$type = true;
    malli.core.t_malli$core9008.cljs$lang$ctorStr = "malli.core/t_malli$core9008";
    malli.core.t_malli$core9008.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9008");
    };
    malli.core.__GT_t_malli$core9008 = function malli$core$_lazy_entry_parser_$___GT_t_malli$core9008(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta9009) {
      return new malli.core.t_malli$core9008(_QMARK_children__$1, props__$1, options__$1, parser__$1, meta9009);
    };
  }
  return new malli.core.t_malli$core9008(_QMARK_children, props, options, parser, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._create_entry_parser = function malli$core$_create_entry_parser(_QMARK_children, props, options) {
  if (malli.core._entry_parser_QMARK_.call(null, _QMARK_children)) {
    return _QMARK_children;
  } else {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(props);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return (new cljs.core.Keyword("malli.core", "lazy-entries", "malli.core/lazy-entries", 762112361)).cljs$core$IFn$_invoke$arity$1(options);
      }
    }())) {
      return malli.core._lazy_entry_parser.call(null, _QMARK_children, props, options);
    } else {
      return malli.core._eager_entry_parser.call(null, _QMARK_children, props, options);
    }
  }
};
malli.core._intercepting = function malli$core$_intercepting(var_args) {
  var G__9012 = arguments.length;
  switch(G__9012) {
    case 1:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._intercepting.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$1 = function(interceptor) {
  return malli.core._intercepting.call(null, interceptor, null);
};
malli.core._intercepting.cljs$core$IFn$_invoke$arity$2 = function(p__9013, f) {
  var map__9014 = p__9013;
  var map__9014__$1 = (!(map__9014 == null) ? map__9014.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9014.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9014) : map__9014;
  var enter = cljs.core.get.call(null, map__9014__$1, new cljs.core.Keyword(null, "enter", "enter", 1792452624));
  var leave = cljs.core.get.call(null, map__9014__$1, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  var G__9016 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [leave, f, enter], null);
  var G__9016__$1 = G__9016 == null ? null : cljs.core.keep.call(null, cljs.core.identity, G__9016);
  var G__9016__$2 = G__9016__$1 == null ? null : cljs.core.seq.call(null, G__9016__$1);
  if (G__9016__$2 == null) {
    return null;
  } else {
    return cljs.core.apply.call(null, malli.core._comp, G__9016__$2);
  }
};
malli.core._intercepting.cljs$lang$maxFixedArity = 2;
malli.core._into_transformer = function malli$core$_into_transformer(x) {
  if (malli.core._transformer_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.fn_QMARK_.call(null, x)) {
      return malli.core._into_transformer.call(null, x.call(null));
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-transformer", "malli.core/invalid-transformer", 962129811), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null));
    }
  }
};
malli.core._parent_children_transformer = function malli$core$_parent_children_transformer(parent, children, transformer, method, options) {
  var parent_transformer = malli.core._value_transformer.call(null, transformer, parent, method, options);
  var child_transformers = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.keep.call(null, function(p1__9018_SHARP_) {
    return malli.core._transformer.call(null, p1__9018_SHARP_, transformer, method, options);
  }), children);
  var child_transformer = cljs.core.seq.call(null, child_transformers) ? cljs.core.apply.call(null, malli.core._comp, cljs.core.rseq.call(null, child_transformers)) : null;
  return malli.core._intercepting.call(null, parent_transformer, child_transformer);
};
malli.core._map_transformer = function malli$core$_map_transformer(ts) {
  return function(x) {
    return cljs.core.reduce.call(null, function malli$core$_map_transformer_$_child_transformer(m, p__9019) {
      var vec__9020 = p__9019;
      var k = cljs.core.nth.call(null, vec__9020, 0, null);
      var t = cljs.core.nth.call(null, vec__9020, 1, null);
      var temp__5751__auto__ = cljs.core.find.call(null, m, k);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var entry = temp__5751__auto__;
        return cljs.core.assoc.call(null, m, k, t.call(null, cljs.core.val.call(null, entry)));
      } else {
        return m;
      }
    }, x, ts);
  };
};
malli.core._tuple_transformer = function malli$core$_tuple_transformer(ts) {
  return function(x) {
    return cljs.core.reduce_kv.call(null, malli.core._update, x, ts);
  };
};
malli.core._collection_transformer = function malli$core$_collection_transformer(t, empty) {
  return function(x) {
    return cljs.core.into.call(null, cljs.core.truth_(x) ? empty : null, cljs.core.map.call(null, t), x);
  };
};
malli.core._parse_entry_ast = function malli$core$_parse_entry_ast(ast, options) {
  var ast_entry_order = (new cljs.core.Keyword("malli.core", "ast-entry-order", "malli.core/ast-entry-order", -659579476)).cljs$core$IFn$_invoke$arity$1(options);
  var keyset = (new cljs.core.Keyword(null, "keys", "keys", 1068423698)).cljs$core$IFn$_invoke$arity$1(ast);
  var __GT_child = function(p__9024) {
    var vec__9025 = p__9024;
    var k = cljs.core.nth.call(null, vec__9025, 0, null);
    var v = cljs.core.nth.call(null, vec__9025, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(v), malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(v), options)], null);
  };
  var children = new cljs.core.Delay(function() {
    return malli.core._vmap.call(null, __GT_child, function() {
      var G__9028 = keyset;
      if (cljs.core.truth_(ast_entry_order)) {
        return cljs.core.sort_by.call(null, function(p1__9023_SHARP_) {
          return (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, p1__9023_SHARP_));
        }, keyset, G__9028);
      } else {
        return G__9028;
      }
    }());
  }, null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9029 !== "undefined") {
  } else {
    malli.core.t_malli$core9029 = function(ast, options, ast_entry_order, keyset, __GT_child, children, meta9030) {
      this.ast = ast;
      this.options = options;
      this.ast_entry_order = ast_entry_order;
      this.keyset = keyset;
      this.__GT_child = __GT_child;
      this.children = children;
      this.meta9030 = meta9030;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9031, meta9030__$1) {
      var self__ = this;
      var _9031__$1 = this;
      return new malli.core.t_malli$core9029(self__.ast, self__.options, self__.ast_entry_order, self__.keyset, self__.__GT_child, self__.children, meta9030__$1);
    };
    malli.core.t_malli$core9029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9031) {
      var self__ = this;
      var _9031__$1 = this;
      return self__.meta9030;
    };
    malli.core.t_malli$core9029.prototype.malli$core$EntryParser$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9029.prototype.malli$core$EntryParser$_entry_keyset$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.keyset;
    };
    malli.core.t_malli$core9029.prototype.malli$core$EntryParser$_entry_children$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.children);
    };
    malli.core.t_malli$core9029.prototype.malli$core$EntryParser$_entry_entries$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._vmap.call(null, function(p__9032) {
        var vec__9033 = p__9032;
        var k = cljs.core.nth.call(null, vec__9033, 0, null);
        var p = cljs.core.nth.call(null, vec__9033, 1, null);
        var s = cljs.core.nth.call(null, vec__9033, 2, null);
        return malli.impl.util._tagged.call(null, k, malli.core._val_schema.call(null, s, p));
      }, cljs.core.deref.call(null, self__.children));
    };
    malli.core.t_malli$core9029.prototype.malli$core$EntryParser$_entry_forms$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return malli.core._vmap.call(null, function(p__9036) {
        var vec__9037 = p__9036;
        var k = cljs.core.nth.call(null, vec__9037, 0, null);
        var p = cljs.core.nth.call(null, vec__9037, 1, null);
        var v = cljs.core.nth.call(null, vec__9037, 2, null);
        if (cljs.core.truth_(p)) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, p, malli.core._form.call(null, v)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._form.call(null, v)], null);
        }
      }, cljs.core.deref.call(null, self__.children));
    };
    malli.core.t_malli$core9029.getBasis = function() {
      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ast", "ast", 780197459, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "ast-entry-order", "ast-entry-order", 825309915, null), new cljs.core.Symbol(null, "keyset", "keyset", 2135291099, null), new cljs.core.Symbol(null, "-\x3echild", "-\x3echild", -1245989531, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
      null), new cljs.core.Symbol(null, "meta9030", "meta9030", -1484039104, null)], null);
    };
    malli.core.t_malli$core9029.cljs$lang$type = true;
    malli.core.t_malli$core9029.cljs$lang$ctorStr = "malli.core/t_malli$core9029";
    malli.core.t_malli$core9029.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9029");
    };
    malli.core.__GT_t_malli$core9029 = function malli$core$_parse_entry_ast_$___GT_t_malli$core9029(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta9030) {
      return new malli.core.t_malli$core9029(ast__$1, options__$1, ast_entry_order__$1, keyset__$1, __GT_child__$1, children__$1, meta9030);
    };
  }
  return new malli.core.t_malli$core9029(ast, options, ast_entry_order, keyset, __GT_child, children, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core._from_entry_ast = function malli$core$_from_entry_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), malli.core._parse_entry_ast.call(null, ast, options), options);
};
malli.core._ast = function malli$core$_ast(acc, properties, options) {
  var registry = function() {
    var temp__5753__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(properties);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var registry = temp__5753__auto__;
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__9040) {
        var vec__9041 = p__9040;
        var k = cljs.core.nth.call(null, vec__9041, 0, null);
        var v = cljs.core.nth.call(null, vec__9041, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core.ast.call(null, v, options)], null);
      }), registry);
    } else {
      return null;
    }
  }();
  var properties__$1 = cljs.core.not_empty.call(null, function() {
    var G__9044 = properties;
    if (cljs.core.truth_(registry)) {
      return cljs.core.dissoc.call(null, G__9044, new cljs.core.Keyword(null, "registry", "registry", 1021159018));
    } else {
      return G__9044;
    }
  }());
  var G__9045 = acc;
  var G__9045__$1 = cljs.core.truth_(properties__$1) ? cljs.core.assoc.call(null, G__9045, new cljs.core.Keyword(null, "properties", "properties", 685819552), properties__$1) : G__9045;
  if (cljs.core.truth_(registry)) {
    return cljs.core.assoc.call(null, G__9045__$1, new cljs.core.Keyword(null, "registry", "registry", 1021159018), registry);
  } else {
    return G__9045__$1;
  }
};
malli.core._entry_ast = function malli$core$_entry_ast(schema, keyset) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "keys", "keys", 1068423698), cljs.core.reduce.call(null, function(acc, p__9046) {
    var vec__9047 = p__9046;
    var k = cljs.core.nth.call(null, vec__9047, 0, null);
    var p = cljs.core.nth.call(null, vec__9047, 1, null);
    var s = cljs.core.nth.call(null, vec__9047, 2, null);
    return cljs.core.assoc.call(null, acc, k, function() {
      var G__9050 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "order", "order", -1254677256), (new cljs.core.Keyword(null, "order", "order", -1254677256)).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, keyset, k)), new cljs.core.Keyword(null, "value", "value", 305978217), malli.core.ast.call(null, s)], null);
      if (cljs.core.truth_(p)) {
        return cljs.core.assoc.call(null, G__9050, new cljs.core.Keyword(null, "properties", "properties", 685819552), p);
      } else {
        return G__9050;
      }
    }());
  }, cljs.core.PersistentArrayMap.EMPTY, malli.core._children.call(null, schema))], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_child_ast = function malli$core$_from_child_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "child", "child", 623967545)).cljs$core$IFn$_invoke$arity$1(ast), options)], null), options);
};
malli.core._to_child_ast = function malli$core$_to_child_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "child", "child", 623967545), malli.core.ast.call(null, cljs.core.nth.call(null, malli.core._children.call(null, schema), 0))], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_value_ast = function malli$core$_from_value_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), function() {
    var temp__5753__auto__ = (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(ast);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var value = temp__5753__auto__;
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null);
    } else {
      return null;
    }
  }(), options);
};
malli.core._to_value_ast = function malli$core$_to_value_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.nth.call(null, malli.core._children.call(null, schema), 0)], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._from_type_ast = function malli$core$_from_type_ast(parent, ast, options) {
  return malli.core._into_schema.call(null, parent, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), null, options);
};
malli.core._to_type_ast = function malli$core$_to_type_ast(schema) {
  return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, schema)], null), malli.core._properties.call(null, schema), malli.core._options.call(null, schema));
};
malli.core._min_max_pred = function malli$core$_min_max_pred(f) {
  return function(p__9051) {
    var map__9052 = p__9051;
    var map__9052__$1 = (!(map__9052 == null) ? map__9052.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9052.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9052) : map__9052;
    var min = cljs.core.get.call(null, map__9052__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
    var max = cljs.core.get.call(null, map__9052__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
    if (cljs.core.not.call(null, function() {
      var or__4185__auto__ = min;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return max;
      }
    }())) {
      return null;
    } else {
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = function() {
          var and__4174__auto__ = min;
          if (cljs.core.truth_(and__4174__auto__)) {
            return max;
          } else {
            return and__4174__auto__;
          }
        }();
        if (cljs.core.truth_(and__4174__auto__)) {
          return f;
        } else {
          return and__4174__auto__;
        }
      }())) {
        return function(x) {
          var size = f.call(null, x);
          return min <= size && size <= max;
        };
      } else {
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = min;
          if (cljs.core.truth_(and__4174__auto__)) {
            return max;
          } else {
            return and__4174__auto__;
          }
        }())) {
          return function(x) {
            return min <= x && x <= max;
          };
        } else {
          if (cljs.core.truth_(function() {
            var and__4174__auto__ = min;
            if (cljs.core.truth_(and__4174__auto__)) {
              return f;
            } else {
              return and__4174__auto__;
            }
          }())) {
            return function(x) {
              return min <= f.call(null, x);
            };
          } else {
            if (cljs.core.truth_(min)) {
              return function(x) {
                return min <= x;
              };
            } else {
              if (cljs.core.truth_(function() {
                var and__4174__auto__ = max;
                if (cljs.core.truth_(and__4174__auto__)) {
                  return f;
                } else {
                  return and__4174__auto__;
                }
              }())) {
                return function(x) {
                  return f.call(null, x) <= max;
                };
              } else {
                if (cljs.core.truth_(max)) {
                  return function(x) {
                    return x <= max;
                  };
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  };
};
malli.core._validate_limits = function malli$core$_validate_limits(min, max) {
  var or__4185__auto__ = malli.core._min_max_pred.call(null, cljs.core.count).call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 61366548), max], null));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.constantly.call(null, true);
  }
};
malli.core._qualified_keyword_pred = function malli$core$_qualified_keyword_pred(properties) {
  var temp__5753__auto__ = function() {
    var G__9054 = properties;
    var G__9054__$1 = G__9054 == null ? null : (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(G__9054);
    if (G__9054__$1 == null) {
      return null;
    } else {
      return cljs.core.name.call(null, G__9054__$1);
    }
  }();
  if (cljs.core.truth_(temp__5753__auto__)) {
    var ns_name = temp__5753__auto__;
    return function(x) {
      return cljs.core._EQ_.call(null, cljs.core.namespace.call(null, x), ns_name);
    };
  } else {
    return null;
  }
};
malli.core._simple_schema = function malli$core$_simple_schema(_QMARK_props) {
  var map__9055 = cljs.core.map_QMARK_.call(null, _QMARK_props) ? _QMARK_props : null;
  var map__9055__$1 = (!(map__9055 == null) ? map__9055.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9055.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9055) : map__9055;
  var type = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var type_properties = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126));
  var pred = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
  var property_pred = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729));
  var min = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
  var max = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "max", "max", 61366548), 0);
  var from_ast = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "from-ast", "from-ast", -246238449), malli.core._from_value_ast);
  var to_ast = cljs.core.get.call(null, map__9055__$1, new cljs.core.Keyword(null, "to-ast", "to-ast", -21935298), malli.core._to_type_ast);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9057 !== "undefined") {
  } else {
    malli.core.t_malli$core9057 = function(map__9055, property_pred, to_ast, min, type_properties, pred, type, from_ast, _QMARK_props, max, meta9058) {
      this.map__9055 = map__9055;
      this.property_pred = property_pred;
      this.to_ast = to_ast;
      this.min = min;
      this.type_properties = type_properties;
      this.pred = pred;
      this.type = type;
      this.from_ast = from_ast;
      this._QMARK_props = _QMARK_props;
      this.max = max;
      this.meta9058 = meta9058;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9057.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9059, meta9058__$1) {
      var self__ = this;
      var _9059__$1 = this;
      return new malli.core.t_malli$core9057(self__.map__9055, self__.property_pred, self__.to_ast, self__.min, self__.type_properties, self__.pred, self__.type, self__.from_ast, self__._QMARK_props, self__.max, meta9058__$1);
    };
    malli.core.t_malli$core9057.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9059) {
      var self__ = this;
      var _9059__$1 = this;
      return self__.meta9058;
    };
    malli.core.t_malli$core9057.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9057.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return self__.from_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type_properties;
    };
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9057.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      if (cljs.core.fn_QMARK_.call(null, self__._QMARK_props)) {
        return malli.core._into_schema.call(null, malli.core._simple_schema.call(null, self__._QMARK_props.call(null, properties, children)), properties, children, options);
      } else {
        var form = new cljs.core.Delay(function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children, cljs.core.identity, options);
        }, null);
        var cache = malli.core._create_cache.call(null, options);
        malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9060 !== "undefined") {
        } else {
          malli.core.t_malli$core9060 = function(form, options, map__9055, property_pred, to_ast, properties, children, min, type_properties, parent, pred, meta9058, type, from_ast, cache, _QMARK_props, max, meta9061) {
            this.form = form;
            this.options = options;
            this.map__9055 = map__9055;
            this.property_pred = property_pred;
            this.to_ast = to_ast;
            this.properties = properties;
            this.children = children;
            this.min = min;
            this.type_properties = type_properties;
            this.parent = parent;
            this.pred = pred;
            this.meta9058 = meta9058;
            this.type = type;
            this.from_ast = from_ast;
            this.cache = cache;
            this._QMARK_props = _QMARK_props;
            this.max = max;
            this.meta9061 = meta9061;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core9060.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9062, meta9061__$1) {
            var self__ = this;
            var _9062__$1 = this;
            return new malli.core.t_malli$core9060(self__.form, self__.options, self__.map__9055, self__.property_pred, self__.to_ast, self__.properties, self__.children, self__.min, self__.type_properties, self__.parent, self__.pred, self__.meta9058, self__.type, self__.from_ast, self__.cache, self__._QMARK_props, self__.max, meta9061__$1);
          };
          malli.core.t_malli$core9060.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9062) {
            var self__ = this;
            var _9062__$1 = this;
            return self__.meta9061;
          };
          malli.core.t_malli$core9060.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9060.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return self__.to_ast.call(null, this$__$1);
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            var temp__5751__auto__ = cljs.core.truth_(self__.property_pred) ? self__.property_pred.call(null, self__.properties) : null;
            if (cljs.core.truth_(temp__5751__auto__)) {
              var pvalidator = temp__5751__auto__;
              return function(x) {
                var and__4174__auto__ = self__.pred.call(null, x);
                if (cljs.core.truth_(and__4174__auto__)) {
                  return pvalidator.call(null, x);
                } else {
                  return and__4174__auto__;
                }
              };
            } else {
              return self__.pred;
            }
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_options$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function(x) {
              if (cljs.core.truth_(validator.call(null, x))) {
                return x;
              } else {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              }
            };
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_children$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_form$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var validator = malli.core._validator.call(null, this$__$1);
            return function malli$core$_simple_schema_$_explain(x, in$, acc) {
              if (cljs.core.not.call(null, validator.call(null, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._parser.call(null, this$__$1);
          };
          malli.core.t_malli$core9060.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
          malli.core.t_malli$core9060.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9060.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
          malli.core.t_malli$core9060.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9060.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return null;
          };
          malli.core.t_malli$core9060.prototype.malli$core$LensSchema$_get$arity$3 = function(_, ___$1, default$) {
            var self__ = this;
            var ___$2 = this;
            return default$;
          };
          malli.core.t_malli$core9060.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "non-associative-schema", "malli.core/non-associative-schema", -588379948), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
          };
          malli.core.t_malli$core9060.getBasis = function() {
            return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "map__9055", "map__9055", -517870688, null), new cljs.core.Symbol(null, "property-pred", "property-pred", -841131040, null), new cljs.core.Symbol(null, "to-ast", "to-ast", 1618596229, null), new cljs.core.Symbol(null, "properties", "properties", 
            -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9057", "malli.core/t_malli$core9057", 
            -862423514, null)], null)), new cljs.core.Symbol(null, "pred", "pred", -727012372, null), new cljs.core.Symbol(null, "meta9058", "meta9058", -139847822, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "from-ast", "from-ast", 1394293078, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, 
            "meta9061", "meta9061", -2146291269, null)], null);
          };
          malli.core.t_malli$core9060.cljs$lang$type = true;
          malli.core.t_malli$core9060.cljs$lang$ctorStr = "malli.core/t_malli$core9060";
          malli.core.t_malli$core9060.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
            return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9060");
          };
          malli.core.__GT_t_malli$core9060 = function malli$core$_simple_schema_$___GT_t_malli$core9060(form__$1, options__$1, map__9055__$1, property_pred__$1, to_ast__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, meta9058__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta9061) {
            return new malli.core.t_malli$core9060(form__$1, options__$1, map__9055__$1, property_pred__$1, to_ast__$1, properties__$1, children__$1, min__$1, type_properties__$1, parent__$2, pred__$1, meta9058__$1, type__$1, from_ast__$1, cache__$1, _QMARK_props__$1, max__$1, meta9061);
          };
        }
        return new malli.core.t_malli$core9060(form, options, self__.map__9055, self__.property_pred, self__.to_ast, properties, children, self__.min, self__.type_properties, parent__$1, self__.pred, self__.meta9058, self__.type, self__.from_ast, cache, self__._QMARK_props, self__.max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
      }
    };
    malli.core.t_malli$core9057.getBasis = function() {
      return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "map__9055", "map__9055", -517870688, null), new cljs.core.Symbol(null, "property-pred", "property-pred", -841131040, null), new cljs.core.Symbol(null, "to-ast", "to-ast", 1618596229, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "pred", "pred", 
      -727012372, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "from-ast", "from-ast", 1394293078, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "meta9058", "meta9058", -139847822, null)], null);
    };
    malli.core.t_malli$core9057.cljs$lang$type = true;
    malli.core.t_malli$core9057.cljs$lang$ctorStr = "malli.core/t_malli$core9057";
    malli.core.t_malli$core9057.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9057");
    };
    malli.core.__GT_t_malli$core9057 = function malli$core$_simple_schema_$___GT_t_malli$core9057(map__9055__$2, property_pred__$1, to_ast__$1, min__$1, type_properties__$1, pred__$1, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta9058) {
      return new malli.core.t_malli$core9057(map__9055__$2, property_pred__$1, to_ast__$1, min__$1, type_properties__$1, pred__$1, type__$1, from_ast__$1, _QMARK_props__$1, max__$1, meta9058);
    };
  }
  return new malli.core.t_malli$core9057(map__9055__$1, property_pred, to_ast, min, type_properties, pred, type, from_ast, _QMARK_props, max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._nil_schema = function malli$core$_nil_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "nil", "nil", 99600501), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.nil_QMARK_], null));
};
malli.core._any_schema = function malli$core$_any_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "any", "any", 1705907423), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.any_QMARK_], null));
};
malli.core._string_schema = function malli$core$_string_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.string_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, cljs.core.count)], null));
};
malli.core._int_schema = function malli$core$_int_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.int_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, null)], null));
};
malli.core._double_schema = function malli$core$_double_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.double_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._min_max_pred.call(null, null)], null));
};
malli.core._boolean_schema = function malli$core$_boolean_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.boolean_QMARK_], null));
};
malli.core._keyword_schema = function malli$core$_keyword_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "keyword", "keyword", 811389747), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.keyword_QMARK_], null));
};
malli.core._symbol_schema = function malli$core$_symbol_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.symbol_QMARK_], null));
};
malli.core._qualified_keyword_schema = function malli$core$_qualified_keyword_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.qualified_keyword_QMARK_, new cljs.core.Keyword(null, "property-pred", "property-pred", 1813304729), malli.core._qualified_keyword_pred], null));
};
malli.core._qualified_symbol_schema = function malli$core$_qualified_symbol_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.qualified_symbol_QMARK_], null));
};
malli.core._uuid_schema = function malli$core$_uuid_schema() {
  return malli.core._simple_schema.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.uuid_QMARK_], null));
};
malli.core._and_schema = function malli$core$_and_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9065 !== "undefined") {
  } else {
    malli.core.t_malli$core9065 = function(meta9066) {
      this.meta9066 = meta9066;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9065.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9067, meta9066__$1) {
      var self__ = this;
      var _9067__$1 = this;
      return new malli.core.t_malli$core9065(meta9066__$1);
    };
    malli.core.t_malli$core9065.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9067) {
      var self__ = this;
      var _9067__$1 = this;
      return self__.meta9066;
    };
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "and", "and", -971899817);
    };
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9065.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "and", "and", -971899817), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(p1__9063_SHARP_) {
        return malli.core.schema.call(null, p1__9063_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(f, m) {
        var parsers = m.call(null, malli.core._vmap.call(null, f, children__$1));
        return function(p1__9064_SHARP_) {
          return cljs.core.reduce.call(null, function(x, parser) {
            return malli.impl.util._map_invalid.call(null, cljs.core.reduced, parser.call(null, x));
          }, p1__9064_SHARP_, parsers);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9068 !== "undefined") {
      } else {
        malli.core.t_malli$core9068 = function(meta9066, parent, properties, children, options, form, cache, __GT_parser, meta9069) {
          this.meta9066 = meta9066;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta9069 = meta9069;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9068.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9070, meta9069__$1) {
          var self__ = this;
          var _9070__$1 = this;
          return new malli.core.t_malli$core9068(self__.meta9066, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta9069__$1);
        };
        malli.core.t_malli$core9068.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9070) {
          var self__ = this;
          var _9070__$1 = this;
          return self__.meta9069;
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
          return malli.impl.util._every_pred.call(null, validators);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser, cljs.core.seq);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainers = malli.core._vmap.call(null, function(p__9071) {
            var vec__9072 = p__9071;
            var i = cljs.core.nth.call(null, vec__9072, 0, null);
            var c = cljs.core.nth.call(null, vec__9072, 1, null);
            return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, i));
          }, cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
          return function malli$core$_and_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.call(null, function(acc_SINGLEQUOTE_, explainer) {
              return explainer.call(null, x, in$, acc_SINGLEQUOTE_);
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser, cljs.core.rseq);
        };
        malli.core.t_malli$core9068.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9068.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9068.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9068.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9068.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9068.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9068.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9068.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9066", "meta9066", 1468757145, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9065", "malli.core/t_malli$core9065", 2070646677, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "meta9069", "meta9069", -1362690556, null)], null);
        };
        malli.core.t_malli$core9068.cljs$lang$type = true;
        malli.core.t_malli$core9068.cljs$lang$ctorStr = "malli.core/t_malli$core9068";
        malli.core.t_malli$core9068.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9068");
        };
        malli.core.__GT_t_malli$core9068 = function malli$core$_and_schema_$___GT_t_malli$core9068(meta9066__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta9069) {
          return new malli.core.t_malli$core9068(meta9066__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta9069);
        };
      }
      return new malli.core.t_malli$core9068(self__.meta9066, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9065.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9066", "meta9066", 1468757145, null)], null);
    };
    malli.core.t_malli$core9065.cljs$lang$type = true;
    malli.core.t_malli$core9065.cljs$lang$ctorStr = "malli.core/t_malli$core9065";
    malli.core.t_malli$core9065.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9065");
    };
    malli.core.__GT_t_malli$core9065 = function malli$core$_and_schema_$___GT_t_malli$core9065(meta9066) {
      return new malli.core.t_malli$core9065(meta9066);
    };
  }
  return new malli.core.t_malli$core9065(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._or_schema = function malli$core$_or_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9078 !== "undefined") {
  } else {
    malli.core.t_malli$core9078 = function(meta9079) {
      this.meta9079 = meta9079;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9078.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9080, meta9079__$1) {
      var self__ = this;
      var _9080__$1 = this;
      return new malli.core.t_malli$core9078(meta9079__$1);
    };
    malli.core.t_malli$core9078.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9080) {
      var self__ = this;
      var _9080__$1 = this;
      return self__.meta9079;
    };
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "or", "or", 235744169);
    };
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9078.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "or", "or", 235744169), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(p1__9075_SHARP_) {
        return malli.core.schema.call(null, p1__9075_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(f) {
        var parsers = malli.core._vmap.call(null, f, children__$1);
        return function(p1__9076_SHARP_) {
          return cljs.core.reduce.call(null, function(_, parser) {
            return malli.impl.util._map_valid.call(null, cljs.core.reduced, parser.call(null, p1__9076_SHARP_));
          }, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900), parsers);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9081 !== "undefined") {
      } else {
        malli.core.t_malli$core9081 = function(meta9079, parent, properties, children, options, form, cache, __GT_parser, meta9082) {
          this.meta9079 = meta9079;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.cache = cache;
          this.__GT_parser = __GT_parser;
          this.meta9082 = meta9082;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9081.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9083, meta9082__$1) {
          var self__ = this;
          var _9083__$1 = this;
          return new malli.core.t_malli$core9081(self__.meta9079, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.cache, self__.__GT_parser, meta9082__$1);
        };
        malli.core.t_malli$core9081.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9083) {
          var self__ = this;
          var _9083__$1 = this;
          return self__.meta9082;
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
          return malli.impl.util._some_pred.call(null, validators);
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          if (cljs.core.seq.call(null, self__.children)) {
            var transformers = malli.core._vmap.call(null, function(p1__9077_SHARP_) {
              var or__4185__auto__ = malli.core._transformer.call(null, p1__9077_SHARP_, transformer, method, options__$1);
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return cljs.core.identity;
              }
            }, self__.children);
            var validators = malli.core._vmap.call(null, malli.core._validator, self__.children);
            return malli.core._intercepting.call(null, this_transformer, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "decode", "decode", -1306165281), method) ? function(x) {
              return cljs.core.reduce_kv.call(null, function(x__$1, i, transformer__$1) {
                var x_STAR_ = transformer__$1.call(null, x__$1);
                if (cljs.core.truth_(cljs.core.nth.call(null, validators, i).call(null, x_STAR_))) {
                  return cljs.core.reduced.call(null, x_STAR_);
                } else {
                  return x__$1;
                }
              }, x, transformers);
            } : function(x) {
              return cljs.core.reduce_kv.call(null, function(x__$1, i, validator) {
                if (cljs.core.truth_(validator.call(null, x__$1))) {
                  return cljs.core.reduced.call(null, cljs.core.nth.call(null, transformers, i).call(null, x__$1));
                } else {
                  return x__$1;
                }
              }, x, validators);
            });
          } else {
            return malli.core._intercepting.call(null, this_transformer);
          }
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainers = malli.core._vmap.call(null, function(p__9084) {
            var vec__9085 = p__9084;
            var i = cljs.core.nth.call(null, vec__9085, 0, null);
            var c = cljs.core.nth.call(null, vec__9085, 1, null);
            return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, i));
          }, cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
          return function malli$core$_or_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.call(null, function(acc_SINGLEQUOTE_, explainer) {
              var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.call(null, x, in$, acc_SINGLEQUOTE_);
              if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                return cljs.core.reduced.call(null, acc);
              } else {
                return acc_SINGLEQUOTE__SINGLEQUOTE_;
              }
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core9081.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9081.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9081.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9081.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9081.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9081.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9081.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9081.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9079", "meta9079", -1180795431, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9078", "malli.core/t_malli$core9078", -1192646840, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "meta9082", "meta9082", -732754105, null)], null);
        };
        malli.core.t_malli$core9081.cljs$lang$type = true;
        malli.core.t_malli$core9081.cljs$lang$ctorStr = "malli.core/t_malli$core9081";
        malli.core.t_malli$core9081.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9081");
        };
        malli.core.__GT_t_malli$core9081 = function malli$core$_or_schema_$___GT_t_malli$core9081(meta9079__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta9082) {
          return new malli.core.t_malli$core9081(meta9079__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, cache__$1, __GT_parser__$1, meta9082);
        };
      }
      return new malli.core.t_malli$core9081(self__.meta9079, parent__$1, properties, children__$1, options, form, cache, __GT_parser, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9078.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9079", "meta9079", -1180795431, null)], null);
    };
    malli.core.t_malli$core9078.cljs$lang$type = true;
    malli.core.t_malli$core9078.cljs$lang$ctorStr = "malli.core/t_malli$core9078";
    malli.core.t_malli$core9078.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9078");
    };
    malli.core.__GT_t_malli$core9078 = function malli$core$_or_schema_$___GT_t_malli$core9078(meta9079) {
      return new malli.core.t_malli$core9078(meta9079);
    };
  }
  return new malli.core.t_malli$core9078(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._orn_schema = function malli$core$_orn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9089 !== "undefined") {
  } else {
    malli.core.t_malli$core9089 = function(meta9090) {
      this.meta9090 = meta9090;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9089.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9091, meta9090__$1) {
      var self__ = this;
      var _9091__$1 = this;
      return new malli.core.t_malli$core9089(meta9090__$1);
    };
    malli.core.t_malli$core9089.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9091) {
      var self__ = this;
      var _9091__$1 = this;
      return self__.meta9090;
    };
    malli.core.t_malli$core9089.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9089.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "orn", "orn", 738436484);
    };
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9089.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "orn", "orn", 738436484), properties, children, 1, null);
      var entry_parser = malli.core._create_entry_parser.call(null, children, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null), options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9092 !== "undefined") {
      } else {
        malli.core.t_malli$core9092 = function(meta9090, parent, properties, children, options, entry_parser, form, cache, meta9093) {
          this.meta9090 = meta9090;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.entry_parser = entry_parser;
          this.form = form;
          this.cache = cache;
          this.meta9093 = meta9093;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9094, meta9093__$1) {
          var self__ = this;
          var _9094__$1 = this;
          return new malli.core.t_malli$core9092(self__.meta9090, self__.parent, self__.properties, self__.children, self__.options, self__.entry_parser, self__.form, self__.cache, meta9093__$1);
        };
        malli.core.t_malli$core9092.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9094) {
          var self__ = this;
          var _9094__$1 = this;
          return self__.meta9093;
        };
        malli.core.t_malli$core9092.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9092.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.impl.util._some_pred.call(null, malli.core._vmap.call(null, function(p__9095) {
            var vec__9096 = p__9095;
            var _ = cljs.core.nth.call(null, vec__9096, 0, null);
            var ___$1 = cljs.core.nth.call(null, vec__9096, 1, null);
            var c = cljs.core.nth.call(null, vec__9096, 2, null);
            return malli.core._validator.call(null, c);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          if (cljs.core.seq.call(null, malli.core._children.call(null, this$__$1))) {
            var transformers = malli.core._vmap.call(null, function(p__9099) {
              var vec__9100 = p__9099;
              var _ = cljs.core.nth.call(null, vec__9100, 0, null);
              var ___$1 = cljs.core.nth.call(null, vec__9100, 1, null);
              var c = cljs.core.nth.call(null, vec__9100, 2, null);
              var or__4185__auto__ = malli.core._transformer.call(null, c, transformer, method, options__$1);
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return cljs.core.identity;
              }
            }, malli.core._children.call(null, this$__$1));
            var validators = malli.core._vmap.call(null, function(p__9103) {
              var vec__9104 = p__9103;
              var _ = cljs.core.nth.call(null, vec__9104, 0, null);
              var ___$1 = cljs.core.nth.call(null, vec__9104, 1, null);
              var c = cljs.core.nth.call(null, vec__9104, 2, null);
              return malli.core._validator.call(null, c);
            }, malli.core._children.call(null, this$__$1));
            return malli.core._intercepting.call(null, this_transformer, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "decode", "decode", -1306165281), method) ? function(x) {
              return cljs.core.reduce_kv.call(null, function(x__$1, i, transformer__$1) {
                var x_STAR_ = transformer__$1.call(null, x__$1);
                if (cljs.core.truth_(cljs.core.nth.call(null, validators, i).call(null, x_STAR_))) {
                  return cljs.core.reduced.call(null, x_STAR_);
                } else {
                  return x__$1;
                }
              }, x, transformers);
            } : function(x) {
              return cljs.core.reduce_kv.call(null, function(x__$1, i, validator) {
                if (cljs.core.truth_(validator.call(null, x__$1))) {
                  return cljs.core.reduced.call(null, cljs.core.nth.call(null, transformers, i).call(null, x__$1));
                } else {
                  return x__$1;
                }
              }, x, validators);
            });
          } else {
            return malli.core._intercepting.call(null, this_transformer);
          }
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var parsers = malli.core._vmap.call(null, function(p__9107) {
            var vec__9108 = p__9107;
            var k = cljs.core.nth.call(null, vec__9108, 0, null);
            var _ = cljs.core.nth.call(null, vec__9108, 1, null);
            var c = cljs.core.nth.call(null, vec__9108, 2, null);
            var c__$1 = malli.core._parser.call(null, c);
            return function(x) {
              return malli.impl.util._map_valid.call(null, function(p1__9088_SHARP_) {
                return cljs.core.reduced.call(null, malli.impl.util._tagged.call(null, k, p1__9088_SHARP_));
              }, c__$1.call(null, x));
            };
          }, malli.core._children.call(null, this$__$1));
          return function(x) {
            return cljs.core.reduce.call(null, function(_, parser) {
              return parser.call(null, x);
            }, x, parsers);
          };
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var explainers = malli.core._vmap.call(null, function(p__9111) {
            var vec__9112 = p__9111;
            var k = cljs.core.nth.call(null, vec__9112, 0, null);
            var _ = cljs.core.nth.call(null, vec__9112, 1, null);
            var c = cljs.core.nth.call(null, vec__9112, 2, null);
            return malli.core._explainer.call(null, c, cljs.core.conj.call(null, path, k));
          }, malli.core._children.call(null, this$__$1));
          return function malli$core$_orn_schema_$_explain(x, in$, acc) {
            return cljs.core.reduce.call(null, function(acc_SINGLEQUOTE_, explainer) {
              var acc_SINGLEQUOTE__SINGLEQUOTE_ = explainer.call(null, x, in$, acc_SINGLEQUOTE_);
              if (acc_SINGLEQUOTE_ === acc_SINGLEQUOTE__SINGLEQUOTE_) {
                return cljs.core.reduced.call(null, acc);
              } else {
                return acc_SINGLEQUOTE__SINGLEQUOTE_;
              }
            }, acc, explainers);
          };
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var unparsers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__9115) {
            var vec__9116 = p__9115;
            var k = cljs.core.nth.call(null, vec__9116, 0, null);
            var _ = cljs.core.nth.call(null, vec__9116, 1, null);
            var c = cljs.core.nth.call(null, vec__9116, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._unparser.call(null, c)], null);
          }), malli.core._children.call(null, this$__$1));
          return function(x) {
            if (malli.impl.util._tagged_QMARK_.call(null, x)) {
              var temp__5755__auto__ = cljs.core.get.call(null, unparsers, cljs.core.key.call(null, x));
              if (temp__5755__auto__ == null) {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              } else {
                var unparse = temp__5755__auto__;
                return unparse.call(null, cljs.core.val.call(null, x));
              }
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9092.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9092.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9092.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9092.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core9092.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9092.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9092.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9092.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9092.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries.call(null, this$__$1, key, default$);
        };
        malli.core.t_malli$core9092.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9092.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9090", "meta9090", -810633047, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9089", "malli.core/t_malli$core9089", 1925939762, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9093", "meta9093", 672079768, null)], null);
        };
        malli.core.t_malli$core9092.cljs$lang$type = true;
        malli.core.t_malli$core9092.cljs$lang$ctorStr = "malli.core/t_malli$core9092";
        malli.core.t_malli$core9092.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9092");
        };
        malli.core.__GT_t_malli$core9092 = function malli$core$_orn_schema_$___GT_t_malli$core9092(meta9090__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta9093) {
          return new malli.core.t_malli$core9092(meta9090__$1, parent__$2, properties__$1, children__$1, options__$1, entry_parser__$1, form__$1, cache__$1, meta9093);
        };
      }
      return new malli.core.t_malli$core9092(self__.meta9090, parent__$1, properties, children, options, entry_parser, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9089.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9090", "meta9090", -810633047, null)], null);
    };
    malli.core.t_malli$core9089.cljs$lang$type = true;
    malli.core.t_malli$core9089.cljs$lang$ctorStr = "malli.core/t_malli$core9089";
    malli.core.t_malli$core9089.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9089");
    };
    malli.core.__GT_t_malli$core9089 = function malli$core$_orn_schema_$___GT_t_malli$core9089(meta9090) {
      return new malli.core.t_malli$core9089(meta9090);
    };
  }
  return new malli.core.t_malli$core9089(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._not_schema = function malli$core$_not_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9120 !== "undefined") {
  } else {
    malli.core.t_malli$core9120 = function(meta9121) {
      this.meta9121 = meta9121;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9120.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9122, meta9121__$1) {
      var self__ = this;
      var _9122__$1 = this;
      return new malli.core.t_malli$core9120(meta9121__$1);
    };
    malli.core.t_malli$core9120.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9122) {
      var self__ = this;
      var _9122__$1 = this;
      return self__.meta9121;
    };
    malli.core.t_malli$core9120.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9120.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "not", "not", -595976884);
    };
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9120.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "not", "not", -595976884), properties, children, 1, 1);
      var vec__9123 = malli.core._vmap.call(null, function(p1__9119_SHARP_) {
        return malli.core.schema.call(null, p1__9119_SHARP_, options);
      }, children);
      var schema = cljs.core.nth.call(null, vec__9123, 0, null);
      var children__$1 = vec__9123;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9126 !== "undefined") {
      } else {
        malli.core.t_malli$core9126 = function(form, options, vec__9123, properties, schema, children, parent, meta9121, cache, meta9127) {
          this.form = form;
          this.options = options;
          this.vec__9123 = vec__9123;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.parent = parent;
          this.meta9121 = meta9121;
          this.cache = cache;
          this.meta9127 = meta9127;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9126.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9128, meta9127__$1) {
          var self__ = this;
          var _9128__$1 = this;
          return new malli.core.t_malli$core9126(self__.form, self__.options, self__.vec__9123, self__.properties, self__.schema, self__.children, self__.parent, self__.meta9121, self__.cache, meta9127__$1);
        };
        malli.core.t_malli$core9126.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9128) {
          var self__ = this;
          var _9128__$1 = this;
          return self__.meta9127;
        };
        malli.core.t_malli$core9126.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9126.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.complement.call(null, malli.core._validator.call(null, self__.schema));
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function(x) {
            if (cljs.core.truth_(validator.call(null, x))) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function malli$core$_not_schema_$_explain(x, in$, acc) {
            if (cljs.core.not.call(null, validator.call(null, x))) {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, 0), in$, this$__$1, x));
            } else {
              return acc;
            }
          };
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9126.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9126.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9126.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9126.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9126.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9126.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9126.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9126.getBasis = function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "vec__9123", "vec__9123", 1670961636, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
          null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9120", "malli.core/t_malli$core9120", -1222483695, null)], null)), new cljs.core.Symbol(null, "meta9121", "meta9121", -718294643, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9127", "meta9127", 979825678, 
          null)], null);
        };
        malli.core.t_malli$core9126.cljs$lang$type = true;
        malli.core.t_malli$core9126.cljs$lang$ctorStr = "malli.core/t_malli$core9126";
        malli.core.t_malli$core9126.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9126");
        };
        malli.core.__GT_t_malli$core9126 = function malli$core$_not_schema_$___GT_t_malli$core9126(form__$1, options__$1, vec__9123__$1, properties__$1, schema__$1, children__$2, parent__$2, meta9121__$1, cache__$1, meta9127) {
          return new malli.core.t_malli$core9126(form__$1, options__$1, vec__9123__$1, properties__$1, schema__$1, children__$2, parent__$2, meta9121__$1, cache__$1, meta9127);
        };
      }
      return new malli.core.t_malli$core9126(form, options, vec__9123, properties, schema, children__$1, parent__$1, self__.meta9121, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9120.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9121", "meta9121", -718294643, null)], null);
    };
    malli.core.t_malli$core9120.cljs$lang$type = true;
    malli.core.t_malli$core9120.cljs$lang$ctorStr = "malli.core/t_malli$core9120";
    malli.core.t_malli$core9120.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9120");
    };
    malli.core.__GT_t_malli$core9120 = function malli$core$_not_schema_$___GT_t_malli$core9120(meta9121) {
      return new malli.core.t_malli$core9120(meta9121);
    };
  }
  return new malli.core.t_malli$core9120(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._val_schema = function malli$core$_val_schema(var_args) {
  var G__9131 = arguments.length;
  switch(G__9131) {
    case 2:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 0:
      return malli.core._val_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$2 = function(schema, properties) {
  return malli.core._into_schema.call(null, malli.core._val_schema.call(null), properties, new cljs.core.List(null, schema, null, 1, null), malli.core._options.call(null, schema));
};
malli.core._val_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9132 !== "undefined") {
  } else {
    malli.core.t_malli$core9132 = function(meta9133) {
      this.meta9133 = meta9133;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9132.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9134, meta9133__$1) {
      var self__ = this;
      var _9134__$1 = this;
      return new malli.core.t_malli$core9132(meta9133__$1);
    };
    malli.core.t_malli$core9132.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9134) {
      var self__ = this;
      var _9134__$1 = this;
      return self__.meta9133;
    };
    malli.core.t_malli$core9132.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9132.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword("malli.core", "val", "malli.core/val", 39501268);
    };
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9132.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.call(null, function(p1__9129_SHARP_) {
        return malli.core.schema.call(null, p1__9129_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var schema = cljs.core.first.call(null, children__$1);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9135 !== "undefined") {
      } else {
        malli.core.t_malli$core9135 = function(meta9133, parent, properties, children, options, form, schema, cache, meta9136) {
          this.meta9133 = meta9133;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.form = form;
          this.schema = schema;
          this.cache = cache;
          this.meta9136 = meta9136;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9135.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9137, meta9136__$1) {
          var self__ = this;
          var _9137__$1 = this;
          return new malli.core.t_malli$core9135(self__.meta9133, self__.parent, self__.properties, self__.children, self__.options, self__.form, self__.schema, self__.cache, meta9136__$1);
        };
        malli.core.t_malli$core9135.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9137) {
          var self__ = this;
          var _9137__$1 = this;
          return self__.meta9136;
        };
        malli.core.t_malli$core9135.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9135.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._validator.call(null, self__.schema);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._options.call(null, self__.schema);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer.call(null, this$__$1, new cljs.core.List(null, self__.schema, null, 1, null), transformer, method, options__$1);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_((new cljs.core.Keyword("malli.core", "walk-entry-vals", "malli.core/walk-entry-vals", -64238340)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
            if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
              return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.List(null, malli.core._inner.call(null, walker, self__.schema, path, options__$1), null, 1, null), options__$1);
            } else {
              return null;
            }
          } else {
            return malli.core._walk.call(null, self__.schema, walker, path, options__$1);
          }
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._parser.call(null, self__.schema);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.schema], null);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._explainer.call(null, self__.schema, path);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._unparser.call(null, self__.schema);
        };
        malli.core.t_malli$core9135.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9135.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9135.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9135.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9135.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9135.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.call(null, 0, key)) {
            return self__.schema;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core9135.prototype.malli$core$LensSchema$_set$arity$3 = function(_, key, value) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.call(null, 0, key)) {
            return malli.core._val_schema.call(null, value, self__.properties);
          } else {
            return null;
          }
        };
        malli.core.t_malli$core9135.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9135.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9135.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.schema;
        };
        malli.core.t_malli$core9135.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9133", "meta9133", -215127214, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9132", "malli.core/t_malli$core9132", -846459742, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9136", "meta9136", -870329266, null)], null);
        };
        malli.core.t_malli$core9135.cljs$lang$type = true;
        malli.core.t_malli$core9135.cljs$lang$ctorStr = "malli.core/t_malli$core9135";
        malli.core.t_malli$core9135.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9135");
        };
        malli.core.__GT_t_malli$core9135 = function malli$core$__GT_t_malli$core9135(meta9133__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta9136) {
          return new malli.core.t_malli$core9135(meta9133__$1, parent__$2, properties__$1, children__$2, options__$1, form__$1, schema__$1, cache__$1, meta9136);
        };
      }
      return new malli.core.t_malli$core9135(self__.meta9133, parent__$1, properties, children__$1, options, form, schema, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9132.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9133", "meta9133", -215127214, null)], null);
    };
    malli.core.t_malli$core9132.cljs$lang$type = true;
    malli.core.t_malli$core9132.cljs$lang$ctorStr = "malli.core/t_malli$core9132";
    malli.core.t_malli$core9132.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9132");
    };
    malli.core.__GT_t_malli$core9132 = function malli$core$__GT_t_malli$core9132(meta9133) {
      return new malli.core.t_malli$core9132(meta9133);
    };
  }
  return new malli.core.t_malli$core9132(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._val_schema.cljs$lang$maxFixedArity = 2;
malli.core._map_schema = function malli$core$_map_schema(var_args) {
  var G__9140 = arguments.length;
  switch(G__9140) {
    case 0:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._map_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._map_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null));
};
malli.core._map_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9141 !== "undefined") {
  } else {
    malli.core.t_malli$core9141 = function(opts, meta9142) {
      this.opts = opts;
      this.meta9142 = meta9142;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9141.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9143, meta9142__$1) {
      var self__ = this;
      var _9143__$1 = this;
      return new malli.core.t_malli$core9141(self__.opts, meta9142__$1);
    };
    malli.core.t_malli$core9141.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9143) {
      var self__ = this;
      var _9143__$1 = this;
      return self__.meta9142;
    };
    malli.core.t_malli$core9141.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9141.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "map", "map", 1371690461);
    };
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9141.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__9144, children, options) {
      var self__ = this;
      var map__9145 = p__9144;
      var map__9145__$1 = (!(map__9145 == null) ? map__9145.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9145.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9145) : map__9145;
      var properties = map__9145__$1;
      var closed = cljs.core.get.call(null, map__9145__$1, new cljs.core.Keyword(null, "closed", "closed", -919675359));
      var parent__$1 = this;
      var entry_parser = malli.core._create_entry_parser.call(null, children, self__.opts, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(this$, f) {
        var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$));
        var parsers = function() {
          var G__9147 = malli.core._vmap.call(null, function(p__9148) {
            var vec__9149 = p__9148;
            var key = cljs.core.nth.call(null, vec__9149, 0, null);
            var map__9152 = cljs.core.nth.call(null, vec__9149, 1, null);
            var map__9152__$1 = (!(map__9152 == null) ? map__9152.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9152.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9152) : map__9152;
            var optional = cljs.core.get.call(null, map__9152__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
            var schema = cljs.core.nth.call(null, vec__9149, 2, null);
            var parser = f.call(null, schema);
            return function(m) {
              var temp__5751__auto__ = cljs.core.find.call(null, m, key);
              if (cljs.core.truth_(temp__5751__auto__)) {
                var e = temp__5751__auto__;
                var v = cljs.core.val.call(null, e);
                var v_STAR_ = parser.call(null, v);
                if (malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                  return cljs.core.reduced.call(null, v_STAR_);
                } else {
                  if (v_STAR_ === v) {
                    return m;
                  } else {
                    return cljs.core.assoc.call(null, m, key, v_STAR_);
                  }
                }
              } else {
                if (cljs.core.truth_(optional)) {
                  return m;
                } else {
                  return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
                }
              }
            };
          }, malli.core._children.call(null, this$));
          if (cljs.core.truth_(closed)) {
            return cljs.core.cons.call(null, function(m) {
              return cljs.core.reduce.call(null, function(m__$1, k) {
                if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                  return m__$1;
                } else {
                  return cljs.core.reduced.call(null, cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900)));
                }
              }, m, cljs.core.keys.call(null, m));
            }, G__9147);
          } else {
            return G__9147;
          }
        }();
        return function(x) {
          if (cljs.core.map_QMARK_.call(null, x)) {
            return cljs.core.reduce.call(null, function(m, parser) {
              return parser.call(null, m);
            }, x, parsers);
          } else {
            return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9154 !== "undefined") {
      } else {
        malli.core.t_malli$core9154 = function(form, options, properties, closed, children, entry_parser, parent, p__9144, map__9145, __GT_parser, cache, opts, meta9142, meta9155) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.closed = closed;
          this.children = children;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.p__9144 = p__9144;
          this.map__9145 = map__9145;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.opts = opts;
          this.meta9142 = meta9142;
          this.meta9155 = meta9155;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9154.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9156, meta9155__$1) {
          var self__ = this;
          var _9156__$1 = this;
          return new malli.core.t_malli$core9154(self__.form, self__.options, self__.properties, self__.closed, self__.children, self__.entry_parser, self__.parent, self__.p__9144, self__.map__9145, self__.__GT_parser, self__.cache, self__.opts, self__.meta9142, meta9155__$1);
        };
        malli.core.t_malli$core9154.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9156) {
          var self__ = this;
          var _9156__$1 = this;
          return self__.meta9155;
        };
        malli.core.t_malli$core9154.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9154.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$__$1));
          var validators = function() {
            var G__9157 = malli.core._vmap.call(null, function(p__9158) {
              var vec__9159 = p__9158;
              var key = cljs.core.nth.call(null, vec__9159, 0, null);
              var map__9162 = cljs.core.nth.call(null, vec__9159, 1, null);
              var map__9162__$1 = (!(map__9162 == null) ? map__9162.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9162.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9162) : map__9162;
              var optional = cljs.core.get.call(null, map__9162__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
              var value = cljs.core.nth.call(null, vec__9159, 2, null);
              var valid_QMARK_ = malli.core._validator.call(null, value);
              var default$ = cljs.core.boolean$.call(null, optional);
              return function(m) {
                var temp__5751__auto__ = cljs.core.find.call(null, m, key);
                if (cljs.core.truth_(temp__5751__auto__)) {
                  var map_entry = temp__5751__auto__;
                  return valid_QMARK_.call(null, cljs.core.val.call(null, map_entry));
                } else {
                  return default$;
                }
              };
            }, malli.core._children.call(null, this$__$1));
            if (cljs.core.truth_(self__.closed)) {
              return cljs.core.conj.call(null, G__9157, function(m) {
                return cljs.core.reduce.call(null, function(acc, k) {
                  if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                    return acc;
                  } else {
                    return cljs.core.reduced.call(null, false);
                  }
                }, true, cljs.core.keys.call(null, m));
              });
            } else {
              return G__9157;
            }
          }();
          var validate = malli.impl.util._every_pred.call(null, validators);
          return function(m) {
            if (cljs.core.map_QMARK_.call(null, m)) {
              return validate.call(null, m);
            } else {
              return false;
            }
          };
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.reduce.call(null, function(acc, p__9164) {
            var vec__9165 = p__9164;
            var k = cljs.core.nth.call(null, vec__9165, 0, null);
            var s = cljs.core.nth.call(null, vec__9165, 1, null);
            var t = malli.core._transformer.call(null, s, transformer, method, options__$1);
            var G__9168 = acc;
            if (cljs.core.truth_(t)) {
              return cljs.core.conj.call(null, G__9168, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null));
            } else {
              return G__9168;
            }
          }, cljs.core.PersistentVector.EMPTY, malli.core._entries.call(null, this$__$1));
          var apply__GT_children = cljs.core.seq.call(null, __GT_children) ? malli.core._map_transformer.call(null, __GT_children) : null;
          var apply__GT_children__$1 = malli.core._guard.call(null, cljs.core.map_QMARK_, apply__GT_children);
          return malli.core._intercepting.call(null, this_transformer, apply__GT_children__$1);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.__GT_parser.call(null, this$__$1, malli.core._parser);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var keyset = malli.core._entry_keyset.call(null, malli.core._entry_parser.call(null, this$__$1));
          var explainers = function() {
            var G__9169 = malli.core._vmap.call(null, function(p__9170) {
              var vec__9171 = p__9170;
              var key = cljs.core.nth.call(null, vec__9171, 0, null);
              var map__9174 = cljs.core.nth.call(null, vec__9171, 1, null);
              var map__9174__$1 = (!(map__9174 == null) ? map__9174.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9174.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9174) : map__9174;
              var optional = cljs.core.get.call(null, map__9174__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
              var schema = cljs.core.nth.call(null, vec__9171, 2, null);
              var explainer = malli.core._explainer.call(null, schema, cljs.core.conj.call(null, path, key));
              return function(x, in$, acc) {
                var temp__5751__auto__ = cljs.core.find.call(null, x, key);
                if (cljs.core.truth_(temp__5751__auto__)) {
                  var e = temp__5751__auto__;
                  return explainer.call(null, cljs.core.val.call(null, e), cljs.core.conj.call(null, in$, key), acc);
                } else {
                  if (cljs.core.not.call(null, optional)) {
                    return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, key), cljs.core.conj.call(null, in$, key), this$__$1, null, new cljs.core.Keyword("malli.core", "missing-key", "malli.core/missing-key", 1439107666)));
                  } else {
                    return acc;
                  }
                }
              };
            }, malli.core._children.call(null, this$__$1));
            if (cljs.core.truth_(self__.closed)) {
              return cljs.core.conj.call(null, G__9169, function(x, in$, acc) {
                return cljs.core.reduce.call(null, function(acc__$1, k) {
                  if (cljs.core.contains_QMARK_.call(null, keyset, k)) {
                    return acc__$1;
                  } else {
                    return cljs.core.conj.call(null, acc__$1, malli.impl.util._error.call(null, cljs.core.conj.call(null, path, k), cljs.core.conj.call(null, in$, k), this$__$1, null, new cljs.core.Keyword("malli.core", "extra-key", "malli.core/extra-key", 574816512)));
                  }
                }, acc, cljs.core.keys.call(null, x));
              });
            } else {
              return G__9169;
            }
          }();
          return function(x, in$, acc) {
            if (!cljs.core.map_QMARK_.call(null, x)) {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
            } else {
              return cljs.core.reduce.call(null, function(acc__$1, explainer) {
                return explainer.call(null, x, in$, acc__$1);
              }, acc, explainers);
            }
          };
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.__GT_parser.call(null, this$__$1, malli.core._unparser);
        };
        malli.core.t_malli$core9154.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9154.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9154.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9154.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core9154.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9154.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9154.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9154.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9154.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries.call(null, this$__$1, key, default$);
        };
        malli.core.t_malli$core9154.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9154.getBasis = function() {
          return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, 
          null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9141", "malli.core/t_malli$core9141", -1966160695, null)], null)), new cljs.core.Symbol(null, "p__9144", "p__9144", -1036127890, null), new cljs.core.Symbol(null, "map__9145", "map__9145", 801408210, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 
          1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta9142", "meta9142", -254638082, null), new cljs.core.Symbol(null, "meta9155", "meta9155", -1031847588, null)], null);
        };
        malli.core.t_malli$core9154.cljs$lang$type = true;
        malli.core.t_malli$core9154.cljs$lang$ctorStr = "malli.core/t_malli$core9154";
        malli.core.t_malli$core9154.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9154");
        };
        malli.core.__GT_t_malli$core9154 = function malli$core$__GT_t_malli$core9154(form__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, p__9144__$1, map__9145__$2, __GT_parser__$1, cache__$1, opts__$1, meta9142__$1, meta9155) {
          return new malli.core.t_malli$core9154(form__$1, options__$1, properties__$1, closed__$1, children__$1, entry_parser__$1, parent__$2, p__9144__$1, map__9145__$2, __GT_parser__$1, cache__$1, opts__$1, meta9142__$1, meta9155);
        };
      }
      return new malli.core.t_malli$core9154(form, options, properties, closed, children, entry_parser, parent__$1, p__9144, map__9145__$1, __GT_parser, cache, self__.opts, self__.meta9142, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9141.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta9142", "meta9142", -254638082, null)], null);
    };
    malli.core.t_malli$core9141.cljs$lang$type = true;
    malli.core.t_malli$core9141.cljs$lang$ctorStr = "malli.core/t_malli$core9141";
    malli.core.t_malli$core9141.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9141");
    };
    malli.core.__GT_t_malli$core9141 = function malli$core$__GT_t_malli$core9141(opts__$1, meta9142) {
      return new malli.core.t_malli$core9141(opts__$1, meta9142);
    };
  }
  return new malli.core.t_malli$core9141(opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._map_schema.cljs$lang$maxFixedArity = 1;
malli.core._map_of_schema = function malli$core$_map_of_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9188 !== "undefined") {
  } else {
    malli.core.t_malli$core9188 = function(meta9189) {
      this.meta9189 = meta9189;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9188.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9190, meta9189__$1) {
      var self__ = this;
      var _9190__$1 = this;
      return new malli.core.t_malli$core9188(meta9189__$1);
    };
    malli.core.t_malli$core9188.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9190) {
      var self__ = this;
      var _9190__$1 = this;
      return self__.meta9189;
    };
    malli.core.t_malli$core9188.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9188.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(ast), options), malli.core.from_ast.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(ast), 
      options)], null), options);
    };
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "map-of", "map-of", 1189682355);
    };
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9188.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__9191, children, options) {
      var self__ = this;
      var map__9192 = p__9191;
      var map__9192__$1 = (!(map__9192 == null) ? map__9192.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9192.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9192) : map__9192;
      var properties = map__9192__$1;
      var min = cljs.core.get.call(null, map__9192__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__9192__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), properties, children, 2, 2);
      var vec__9194 = malli.core._vmap.call(null, function(p1__9177_SHARP_) {
        return malli.core.schema.call(null, p1__9177_SHARP_, options);
      }, children);
      var key_schema = cljs.core.nth.call(null, vec__9194, 0, null);
      var value_schema = cljs.core.nth.call(null, vec__9194, 1, null);
      var children__$1 = vec__9194;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var validate_limits = malli.core._validate_limits.call(null, min, max);
      var __GT_parser = function(f) {
        var key_parser = f.call(null, key_schema);
        var value_parser = f.call(null, value_schema);
        return function(x) {
          if (cljs.core.map_QMARK_.call(null, x)) {
            return cljs.core.reduce_kv.call(null, function(acc, k, v) {
              var k_STAR_ = key_parser.call(null, k);
              var v_STAR_ = value_parser.call(null, v);
              if (malli.impl.util._invalid_QMARK_.call(null, k_STAR_) || malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
              } else {
                return cljs.core.assoc.call(null, acc, k_STAR_, v_STAR_);
              }
            }, cljs.core.empty.call(null, x), x);
          } else {
            return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9197 !== "undefined") {
      } else {
        malli.core.t_malli$core9197 = function(form, options, vec__9194, map__9192, properties, children, min, value_schema, parent, meta9189, p__9191, key_schema, __GT_parser, cache, validate_limits, max, meta9198) {
          this.form = form;
          this.options = options;
          this.vec__9194 = vec__9194;
          this.map__9192 = map__9192;
          this.properties = properties;
          this.children = children;
          this.min = min;
          this.value_schema = value_schema;
          this.parent = parent;
          this.meta9189 = meta9189;
          this.p__9191 = p__9191;
          this.key_schema = key_schema;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.validate_limits = validate_limits;
          this.max = max;
          this.meta9198 = meta9198;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9197.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9199, meta9198__$1) {
          var self__ = this;
          var _9199__$1 = this;
          return new malli.core.t_malli$core9197(self__.form, self__.options, self__.vec__9194, self__.map__9192, self__.properties, self__.children, self__.min, self__.value_schema, self__.parent, self__.meta9189, self__.p__9191, self__.key_schema, self__.__GT_parser, self__.cache, self__.validate_limits, self__.max, meta9198__$1);
        };
        malli.core.t_malli$core9197.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9199) {
          var self__ = this;
          var _9199__$1 = this;
          return self__.meta9198;
        };
        malli.core.t_malli$core9197.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9197.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.Keyword(null, "key", "key", -1516042587), malli.core.ast.call(null, self__.key_schema), new cljs.core.Keyword(null, "value", "value", 305978217), malli.core.ast.call(null, self__.value_schema)], null), self__.properties, self__.options);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var key_valid_QMARK_ = malli.core._validator.call(null, self__.key_schema);
          var value_valid_QMARK_ = malli.core._validator.call(null, self__.value_schema);
          return function(m) {
            if (cljs.core.map_QMARK_.call(null, m)) {
              var and__4174__auto__ = self__.validate_limits.call(null, m);
              if (cljs.core.truth_(and__4174__auto__)) {
                return cljs.core.reduce_kv.call(null, function(___$2, key, value) {
                  var or__4185__auto__ = function() {
                    var and__4174__auto____$1 = key_valid_QMARK_.call(null, key);
                    if (cljs.core.truth_(and__4174__auto____$1)) {
                      return value_valid_QMARK_.call(null, value);
                    } else {
                      return and__4174__auto____$1;
                    }
                  }();
                  if (cljs.core.truth_(or__4185__auto__)) {
                    return or__4185__auto__;
                  } else {
                    return cljs.core.reduced.call(null, false);
                  }
                }, true, m);
              } else {
                return and__4174__auto__;
              }
            } else {
              return false;
            }
          };
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          var __GT_key = malli.core._transformer.call(null, self__.key_schema, transformer, method, options__$1);
          var __GT_child = malli.core._transformer.call(null, self__.value_schema, transformer, method, options__$1);
          var __GT_key_child = cljs.core.truth_(function() {
            var and__4174__auto__ = __GT_key;
            if (cljs.core.truth_(and__4174__auto__)) {
              return __GT_child;
            } else {
              return and__4174__auto__;
            }
          }()) ? function(p1__9178_SHARP_, p2__9179_SHARP_, p3__9180_SHARP_) {
            return cljs.core.assoc.call(null, p1__9178_SHARP_, __GT_key.call(null, p2__9179_SHARP_), __GT_child.call(null, p3__9180_SHARP_));
          } : cljs.core.truth_(__GT_key) ? function(p1__9181_SHARP_, p2__9182_SHARP_, p3__9183_SHARP_) {
            return cljs.core.assoc.call(null, p1__9181_SHARP_, __GT_key.call(null, p2__9182_SHARP_), p3__9183_SHARP_);
          } : cljs.core.truth_(__GT_child) ? function(p1__9184_SHARP_, p2__9185_SHARP_, p3__9186_SHARP_) {
            return cljs.core.assoc.call(null, p1__9184_SHARP_, p2__9185_SHARP_, __GT_child.call(null, p3__9186_SHARP_));
          } : null;
          var apply__GT_key_child = cljs.core.truth_(__GT_key_child) ? function(p1__9187_SHARP_) {
            return cljs.core.reduce_kv.call(null, __GT_key_child, cljs.core.empty.call(null, p1__9187_SHARP_), p1__9187_SHARP_);
          } : null;
          var apply__GT_key_child__$1 = malli.core._guard.call(null, cljs.core.map_QMARK_, apply__GT_key_child);
          return malli.core._intercepting.call(null, this_transformer, apply__GT_key_child__$1);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var key_explainer = malli.core._explainer.call(null, self__.key_schema, cljs.core.conj.call(null, path, 0));
          var value_explainer = malli.core._explainer.call(null, self__.value_schema, cljs.core.conj.call(null, path, 1));
          return function malli$core$_map_of_schema_$_explain(m, in$, acc) {
            if (!cljs.core.map_QMARK_.call(null, m)) {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, m, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
            } else {
              if (cljs.core.not.call(null, self__.validate_limits.call(null, m))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, m, new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863)));
              } else {
                return cljs.core.reduce_kv.call(null, function(acc__$1, key, value) {
                  var in$__$1 = cljs.core.conj.call(null, in$, key);
                  return value_explainer.call(null, value, in$__$1, key_explainer.call(null, key, in$__$1, acc__$1));
                }, acc, m);
              }
            }
          };
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core9197.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9197.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9197.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9197.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9197.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9197.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9197.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9197.getBasis = function() {
          return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "vec__9194", "vec__9194", -90114012, null), new cljs.core.Symbol(null, "map__9192", "map__9192", 2052423044, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
          null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "value-schema", "value-schema", -1754883189, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9188", "malli.core/t_malli$core9188", 193120597, null)], null)), new cljs.core.Symbol(null, "meta9189", "meta9189", 
          -1151517490, null), new cljs.core.Symbol(null, "p__9191", "p__9191", -339428464, null), new cljs.core.Symbol(null, "key-schema", "key-schema", 543870801, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "validate-limits", "validate-limits", -2141569735, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "meta9198", "meta9198", 
          -1477506413, null)], null);
        };
        malli.core.t_malli$core9197.cljs$lang$type = true;
        malli.core.t_malli$core9197.cljs$lang$ctorStr = "malli.core/t_malli$core9197";
        malli.core.t_malli$core9197.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9197");
        };
        malli.core.__GT_t_malli$core9197 = function malli$core$_map_of_schema_$___GT_t_malli$core9197(form__$1, options__$1, vec__9194__$1, map__9192__$2, properties__$1, children__$2, min__$1, value_schema__$1, parent__$2, meta9189__$1, p__9191__$1, key_schema__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta9198) {
          return new malli.core.t_malli$core9197(form__$1, options__$1, vec__9194__$1, map__9192__$2, properties__$1, children__$2, min__$1, value_schema__$1, parent__$2, meta9189__$1, p__9191__$1, key_schema__$1, __GT_parser__$1, cache__$1, validate_limits__$1, max__$1, meta9198);
        };
      }
      return new malli.core.t_malli$core9197(form, options, vec__9194, map__9192__$1, properties, children__$1, min, value_schema, parent__$1, self__.meta9189, p__9191, key_schema, __GT_parser, cache, validate_limits, max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9188.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9189", "meta9189", -1151517490, null)], null);
    };
    malli.core.t_malli$core9188.cljs$lang$type = true;
    malli.core.t_malli$core9188.cljs$lang$ctorStr = "malli.core/t_malli$core9188";
    malli.core.t_malli$core9188.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9188");
    };
    malli.core.__GT_t_malli$core9188 = function malli$core$_map_of_schema_$___GT_t_malli$core9188(meta9189) {
      return new malli.core.t_malli$core9188(meta9189);
    };
  }
  return new malli.core.t_malli$core9188(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._collection_schema = function malli$core$_collection_schema(_QMARK_props) {
  var props_STAR_ = cljs.core.atom.call(null, cljs.core.map_QMARK_.call(null, _QMARK_props) ? _QMARK_props : null);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9203 !== "undefined") {
  } else {
    malli.core.t_malli$core9203 = function(_QMARK_props, props_STAR_, meta9204) {
      this._QMARK_props = _QMARK_props;
      this.props_STAR_ = props_STAR_;
      this.meta9204 = meta9204;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9203.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9205, meta9204__$1) {
      var self__ = this;
      var _9205__$1 = this;
      return new malli.core.t_malli$core9203(self__._QMARK_props, self__.props_STAR_, meta9204__$1);
    };
    malli.core.t_malli$core9203.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9205) {
      var self__ = this;
      var _9205__$1 = this;
      return self__.meta9204;
    };
    malli.core.t_malli$core9203.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9203.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.props_STAR_));
    };
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return (new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.props_STAR_));
    };
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9203.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, p__9206, children, options) {
      var self__ = this;
      var map__9207 = p__9206;
      var map__9207__$1 = (!(map__9207 == null) ? map__9207.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9207.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9207) : map__9207;
      var properties = map__9207__$1;
      var min = cljs.core.get.call(null, map__9207__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__9207__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      var parent__$1 = this;
      if (cljs.core.fn_QMARK_.call(null, self__._QMARK_props)) {
        return malli.core._into_schema.call(null, malli.core._collection_schema.call(null, self__._QMARK_props.call(null, properties, children)), properties, children, options);
      } else {
        var map__9209 = self__._QMARK_props;
        var map__9209__$1 = (!(map__9209 == null) ? map__9209.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9209.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9209) : map__9209;
        var fpred = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "pred", "pred", 1927423397));
        var fempty = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "empty", "empty", 767870958));
        var fin = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "in", "in", -1531184865), function(i, _) {
          return i;
        });
        var type = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
        var parse = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "parse", "parse", -1162164619));
        var unparse = cljs.core.get.call(null, map__9209__$1, new cljs.core.Keyword(null, "unparse", "unparse", -1504915552));
        cljs.core.reset_BANG_.call(null, self__.props_STAR_, self__._QMARK_props);
        malli.core._check_children_BANG_.call(null, type, properties, children, 1, 1);
        var vec__9211 = malli.core._vmap.call(null, function(p1__9200_SHARP_) {
          return malli.core.schema.call(null, p1__9200_SHARP_, options);
        }, children);
        var schema = cljs.core.nth.call(null, vec__9211, 0, null);
        var children__$1 = vec__9211;
        var form = new cljs.core.Delay(function() {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        }, null);
        var cache = malli.core._create_cache.call(null, options);
        var validate_limits = malli.core._validate_limits.call(null, min, max);
        var __GT_parser = function(f, g) {
          var child_parser = f.call(null, schema);
          return function(x) {
            if (cljs.core.not.call(null, fpred.call(null, x))) {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            } else {
              if (cljs.core.not.call(null, validate_limits.call(null, x))) {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              } else {
                var x_SINGLEQUOTE_ = cljs.core.reduce.call(null, function(acc, v) {
                  var v_SINGLEQUOTE_ = child_parser.call(null, v);
                  if (malli.impl.util._invalid_QMARK_.call(null, v_SINGLEQUOTE_)) {
                    return cljs.core.reduced.call(null, new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900));
                  } else {
                    return cljs.core.conj.call(null, acc, v_SINGLEQUOTE_);
                  }
                }, cljs.core.PersistentVector.EMPTY, x);
                if (malli.impl.util._invalid_QMARK_.call(null, x_SINGLEQUOTE_)) {
                  return x_SINGLEQUOTE_;
                } else {
                  if (cljs.core.truth_(g)) {
                    return g.call(null, x_SINGLEQUOTE_);
                  } else {
                    if (cljs.core.truth_(fempty)) {
                      return cljs.core.into.call(null, fempty, x_SINGLEQUOTE_);
                    } else {
                      return x_SINGLEQUOTE_;
                    }
                  }
                }
              }
            }
          };
        };
        if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9214 !== "undefined") {
        } else {
          malli.core.t_malli$core9214 = function(form, options, meta9204, fpred, fin, vec__9211, properties, unparse, schema, children, min, parent, props_STAR_, map__9207, type, __GT_parser, fempty, cache, validate_limits, _QMARK_props, max, parse, map__9209, p__9206, meta9215) {
            this.form = form;
            this.options = options;
            this.meta9204 = meta9204;
            this.fpred = fpred;
            this.fin = fin;
            this.vec__9211 = vec__9211;
            this.properties = properties;
            this.unparse = unparse;
            this.schema = schema;
            this.children = children;
            this.min = min;
            this.parent = parent;
            this.props_STAR_ = props_STAR_;
            this.map__9207 = map__9207;
            this.type = type;
            this.__GT_parser = __GT_parser;
            this.fempty = fempty;
            this.cache = cache;
            this.validate_limits = validate_limits;
            this._QMARK_props = _QMARK_props;
            this.max = max;
            this.parse = parse;
            this.map__9209 = map__9209;
            this.p__9206 = p__9206;
            this.meta9215 = meta9215;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          malli.core.t_malli$core9214.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9216, meta9215__$1) {
            var self__ = this;
            var _9216__$1 = this;
            return new malli.core.t_malli$core9214(self__.form, self__.options, self__.meta9204, self__.fpred, self__.fin, self__.vec__9211, self__.properties, self__.unparse, self__.schema, self__.children, self__.min, self__.parent, self__.props_STAR_, self__.map__9207, self__.type, self__.__GT_parser, self__.fempty, self__.cache, self__.validate_limits, self__._QMARK_props, self__.max, self__.parse, self__.map__9209, self__.p__9206, meta9215__$1);
          };
          malli.core.t_malli$core9214.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9216) {
            var self__ = this;
            var _9216__$1 = this;
            return self__.meta9215;
          };
          malli.core.t_malli$core9214.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9214.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._to_child_ast.call(null, this$__$1);
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            var validator = malli.core._validator.call(null, self__.schema);
            return function(x) {
              var and__4174__auto__ = self__.fpred.call(null, x);
              if (cljs.core.truth_(and__4174__auto__)) {
                var and__4174__auto____$1 = self__.validate_limits.call(null, x);
                if (cljs.core.truth_(and__4174__auto____$1)) {
                  return cljs.core.reduce.call(null, function(acc, v) {
                    if (cljs.core.truth_(validator.call(null, v))) {
                      return acc;
                    } else {
                      return cljs.core.reduced.call(null, false);
                    }
                  }, true, x);
                } else {
                  return and__4174__auto____$1;
                }
              } else {
                return and__4174__auto__;
              }
            };
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_options$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.options;
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            var collection_QMARK_ = function(p1__9201_SHARP_) {
              return cljs.core.sequential_QMARK_.call(null, p1__9201_SHARP_) || cljs.core.set_QMARK_.call(null, p1__9201_SHARP_);
            };
            var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
            var child_transformer = malli.core._transformer.call(null, self__.schema, transformer, method, options__$1);
            var __GT_child = cljs.core.truth_(child_transformer) ? cljs.core.truth_(self__.fempty) ? malli.core._collection_transformer.call(null, child_transformer, self__.fempty) : function(p1__9202_SHARP_) {
              return malli.core._vmap.call(null, child_transformer, p1__9202_SHARP_);
            } : null;
            var __GT_child__$1 = malli.core._guard.call(null, collection_QMARK_, __GT_child);
            return malli.core._intercepting.call(null, this_transformer, __GT_child__$1);
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
            var self__ = this;
            var this$__$1 = this;
            if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
              return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core._inner.call(null, walker, self__.schema, cljs.core.conj.call(null, path, new cljs.core.Keyword("malli.core", "in", "malli.core/in", -1208578537)), options__$1)], null), options__$1);
            } else {
              return null;
            }
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._parser, self__.parse);
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.properties;
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_children$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.children;
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_form$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.deref.call(null, self__.form);
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
            var self__ = this;
            var this$__$1 = this;
            var explainer = malli.core._explainer.call(null, self__.schema, cljs.core.conj.call(null, path, 0));
            return function(x, in$, acc) {
              if (cljs.core.not.call(null, self__.fpred.call(null, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
              } else {
                if (cljs.core.not.call(null, self__.validate_limits.call(null, x))) {
                  return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "limits", "malli.core/limits", -1343466863)));
                } else {
                  var size = cljs.core.count.call(null, x);
                  var acc__$1 = acc;
                  var i = 0;
                  var G__9220 = x;
                  var vec__9221 = G__9220;
                  var seq__9222 = cljs.core.seq.call(null, vec__9221);
                  var first__9223 = cljs.core.first.call(null, seq__9222);
                  var seq__9222__$1 = cljs.core.next.call(null, seq__9222);
                  var x__$1 = first__9223;
                  var xs = seq__9222__$1;
                  var acc__$2 = acc__$1;
                  var i__$1 = i;
                  var G__9220__$1 = G__9220;
                  while (true) {
                    var acc__$3 = acc__$2;
                    var i__$2 = i__$1;
                    var vec__9224 = G__9220__$1;
                    var seq__9225 = cljs.core.seq.call(null, vec__9224);
                    var first__9226 = cljs.core.first.call(null, seq__9225);
                    var seq__9225__$1 = cljs.core.next.call(null, seq__9225);
                    var x__$2 = first__9226;
                    var xs__$1 = seq__9225__$1;
                    if (i__$2 < size) {
                      var G__9227 = function() {
                        var or__4185__auto__ = explainer.call(null, x__$2, cljs.core.conj.call(null, in$, self__.fin.call(null, i__$2, x__$2)), acc__$3);
                        if (cljs.core.truth_(or__4185__auto__)) {
                          return or__4185__auto__;
                        } else {
                          return acc__$3;
                        }
                      }();
                      if (xs__$1) {
                        var G__9228 = G__9227;
                        var G__9229 = i__$2 + 1;
                        var G__9230 = xs__$1;
                        acc__$2 = G__9228;
                        i__$1 = G__9229;
                        G__9220__$1 = G__9230;
                        continue;
                      } else {
                        return G__9227;
                      }
                    } else {
                      return acc__$3;
                    }
                    break;
                  }
                }
              }
            };
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.__GT_parser.call(null, malli.core._unparser, self__.unparse);
          };
          malli.core.t_malli$core9214.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.parent;
          };
          malli.core.t_malli$core9214.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9214.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.cache;
          };
          malli.core.t_malli$core9214.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
          malli.core.t_malli$core9214.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
            var self__ = this;
            var ___$1 = this;
            return true;
          };
          malli.core.t_malli$core9214.prototype.malli$core$LensSchema$_get$arity$3 = function(_, ___$1, ___$2) {
            var self__ = this;
            var ___$3 = this;
            return self__.schema;
          };
          malli.core.t_malli$core9214.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, _, value) {
            var self__ = this;
            var this$__$1 = this;
            return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          };
          malli.core.t_malli$core9214.getBasis = function() {
            return new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "meta9204", "meta9204", 1613180769, null), new cljs.core.Symbol(null, "fpred", "fpred", 1016397475, null), new cljs.core.Symbol(null, "fin", "fin", -1942189562, null), new cljs.core.Symbol(null, "vec__9211", "vec__9211", 1118713798, null), new cljs.core.Symbol(null, 
            "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "unparse", "unparse", 135615975, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), 
            new cljs.core.Symbol("malli.core", "t_malli$core9203", "malli.core/t_malli$core9203", -1220713471, null)], null)), new cljs.core.Symbol(null, "props*", "props*", -768250162, null), new cljs.core.Symbol(null, "map__9207", "map__9207", 935990705, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "fempty", "fempty", 1035749368, null), new cljs.core.Symbol(null, "cache", 
            "cache", 403508473, null), new cljs.core.Symbol(null, "validate-limits", "validate-limits", -2141569735, null), new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "parse", "parse", 478366908, null), new cljs.core.Symbol(null, "map__9209", "map__9209", -1333091523, null), new cljs.core.Symbol(null, "p__9206", "p__9206", 574827358, null), new cljs.core.Symbol(null, "meta9215", "meta9215", 
            1791294887, null)], null);
          };
          malli.core.t_malli$core9214.cljs$lang$type = true;
          malli.core.t_malli$core9214.cljs$lang$ctorStr = "malli.core/t_malli$core9214";
          malli.core.t_malli$core9214.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
            return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9214");
          };
          malli.core.__GT_t_malli$core9214 = function malli$core$_collection_schema_$___GT_t_malli$core9214(form__$1, options__$1, meta9204__$1, fpred__$1, fin__$1, vec__9211__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, map__9207__$2, type__$1, __GT_parser__$1, fempty__$1, cache__$1, validate_limits__$1, _QMARK_props__$1, max__$1, parse__$1, map__9209__$2, p__9206__$1, meta9215) {
            return new malli.core.t_malli$core9214(form__$1, options__$1, meta9204__$1, fpred__$1, fin__$1, vec__9211__$1, properties__$1, unparse__$1, schema__$1, children__$2, min__$1, parent__$2, props_STAR___$1, map__9207__$2, type__$1, __GT_parser__$1, fempty__$1, cache__$1, validate_limits__$1, _QMARK_props__$1, max__$1, parse__$1, map__9209__$2, p__9206__$1, meta9215);
          };
        }
        return new malli.core.t_malli$core9214(form, options, self__.meta9204, fpred, fin, vec__9211, properties, unparse, schema, children__$1, min, parent__$1, self__.props_STAR_, map__9207__$1, type, __GT_parser, fempty, cache, validate_limits, self__._QMARK_props, max, parse, map__9209__$1, p__9206, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
      }
    };
    malli.core.t_malli$core9203.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?props", "?props", 561193402, null), new cljs.core.Symbol(null, "props*", "props*", -768250162, null), new cljs.core.Symbol(null, "meta9204", "meta9204", 1613180769, null)], null);
    };
    malli.core.t_malli$core9203.cljs$lang$type = true;
    malli.core.t_malli$core9203.cljs$lang$ctorStr = "malli.core/t_malli$core9203";
    malli.core.t_malli$core9203.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9203");
    };
    malli.core.__GT_t_malli$core9203 = function malli$core$_collection_schema_$___GT_t_malli$core9203(_QMARK_props__$1, props_STAR___$1, meta9204) {
      return new malli.core.t_malli$core9203(_QMARK_props__$1, props_STAR___$1, meta9204);
    };
  }
  return new malli.core.t_malli$core9203(_QMARK_props, props_STAR_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._tuple_schema = function malli$core$_tuple_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9232 !== "undefined") {
  } else {
    malli.core.t_malli$core9232 = function(meta9233) {
      this.meta9233 = meta9233;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9232.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9234, meta9233__$1) {
      var self__ = this;
      var _9234__$1 = this;
      return new malli.core.t_malli$core9232(meta9233__$1);
    };
    malli.core.t_malli$core9232.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9234) {
      var self__ = this;
      var _9234__$1 = this;
      return self__.meta9233;
    };
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "tuple", "tuple", -472667284);
    };
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9232.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var children__$1 = malli.core._vmap.call(null, function(p1__9231_SHARP_) {
        return malli.core.schema.call(null, p1__9231_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var size = cljs.core.count.call(null, children__$1);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(f) {
        var parsers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.map_indexed.call(null, cljs.core.vector)), children__$1);
        return function(x) {
          if (!cljs.core.vector_QMARK_.call(null, x)) {
            return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
          } else {
            if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), size)) {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            } else {
              return cljs.core.reduce_kv.call(null, function(x__$1, i, c) {
                var v = cljs.core.get.call(null, x__$1, i);
                var v_STAR_ = c.call(null, v);
                if (malli.impl.util._invalid_QMARK_.call(null, v_STAR_)) {
                  return cljs.core.reduced.call(null, v_STAR_);
                } else {
                  if (v_STAR_ === v) {
                    return x__$1;
                  } else {
                    return cljs.core.assoc.call(null, x__$1, i, v_STAR_);
                  }
                }
              }, x, parsers);
            }
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9235 !== "undefined") {
      } else {
        malli.core.t_malli$core9235 = function(form, options, properties, children, parent, meta9233, size, __GT_parser, cache, meta9236) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.meta9233 = meta9233;
          this.size = size;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.meta9236 = meta9236;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9235.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9237, meta9236__$1) {
          var self__ = this;
          var _9237__$1 = this;
          return new malli.core.t_malli$core9235(self__.form, self__.options, self__.properties, self__.children, self__.parent, self__.meta9233, self__.size, self__.__GT_parser, self__.cache, meta9236__$1);
        };
        malli.core.t_malli$core9235.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9237) {
          var self__ = this;
          var _9237__$1 = this;
          return self__.meta9236;
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validators = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.call(null, cljs.core.vector, cljs.core.mapv.call(null, malli.core._validator, self__.children)));
          return function(x) {
            if (cljs.core.vector_QMARK_.call(null, x)) {
              if (cljs.core._EQ_.call(null, cljs.core.count.call(null, x), self__.size)) {
                return cljs.core.reduce_kv.call(null, function(acc, i, validator) {
                  if (cljs.core.truth_(validator.call(null, cljs.core.nth.call(null, x, i)))) {
                    return acc;
                  } else {
                    return cljs.core.reduced.call(null, false);
                  }
                }, true, validators);
              } else {
                return false;
              }
            } else {
              return false;
            }
          };
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.map_indexed.call(null, cljs.core.vector), cljs.core.keep.call(null, function(p__9238) {
            var vec__9239 = p__9238;
            var k = cljs.core.nth.call(null, vec__9239, 0, null);
            var c = cljs.core.nth.call(null, vec__9239, 1, null);
            var temp__5757__auto__ = malli.core._transformer.call(null, c, transformer, method, options__$1);
            if (temp__5757__auto__ == null) {
              return null;
            } else {
              var t = temp__5757__auto__;
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, t], null);
            }
          })), self__.children);
          var apply__GT_children = cljs.core.seq.call(null, __GT_children) ? malli.core._tuple_transformer.call(null, __GT_children) : null;
          var apply__GT_children__$1 = malli.core._guard.call(null, cljs.core.vector_QMARK_, apply__GT_children);
          return malli.core._intercepting.call(null, this_transformer, apply__GT_children__$1);
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var explainers = malli.core._vmap.call(null, function(p__9242) {
            var vec__9243 = p__9242;
            var i = cljs.core.nth.call(null, vec__9243, 0, null);
            var s = cljs.core.nth.call(null, vec__9243, 1, null);
            return malli.core._explainer.call(null, s, cljs.core.conj.call(null, path, i));
          }, cljs.core.map_indexed.call(null, cljs.core.vector, self__.children));
          return function(x, in$, acc) {
            if (!cljs.core.vector_QMARK_.call(null, x)) {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-type", "malli.core/invalid-type", -1367388450)));
            } else {
              if (cljs.core.not_EQ_.call(null, cljs.core.count.call(null, x), self__.size)) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, new cljs.core.Keyword("malli.core", "tuple-size", "malli.core/tuple-size", -1004468077)));
              } else {
                var acc__$1 = acc;
                var i = 0;
                var G__9252 = x;
                var vec__9254 = G__9252;
                var seq__9255 = cljs.core.seq.call(null, vec__9254);
                var first__9256 = cljs.core.first.call(null, seq__9255);
                var seq__9255__$1 = cljs.core.next.call(null, seq__9255);
                var x__$1 = first__9256;
                var xs = seq__9255__$1;
                var G__9253 = explainers;
                var vec__9257 = G__9253;
                var seq__9258 = cljs.core.seq.call(null, vec__9257);
                var first__9259 = cljs.core.first.call(null, seq__9258);
                var seq__9258__$1 = cljs.core.next.call(null, seq__9258);
                var e = first__9259;
                var es = seq__9258__$1;
                var acc__$2 = acc__$1;
                var i__$1 = i;
                var G__9252__$1 = G__9252;
                var G__9253__$1 = G__9253;
                while (true) {
                  var acc__$3 = acc__$2;
                  var i__$2 = i__$1;
                  var vec__9267 = G__9252__$1;
                  var seq__9268 = cljs.core.seq.call(null, vec__9267);
                  var first__9269 = cljs.core.first.call(null, seq__9268);
                  var seq__9268__$1 = cljs.core.next.call(null, seq__9268);
                  var x__$2 = first__9269;
                  var xs__$1 = seq__9268__$1;
                  var vec__9270 = G__9253__$1;
                  var seq__9271 = cljs.core.seq.call(null, vec__9270);
                  var first__9272 = cljs.core.first.call(null, seq__9271);
                  var seq__9271__$1 = cljs.core.next.call(null, seq__9271);
                  var e__$1 = first__9272;
                  var es__$1 = seq__9271__$1;
                  var G__9273 = e__$1.call(null, x__$2, cljs.core.conj.call(null, in$, i__$2), acc__$3);
                  if (xs__$1) {
                    var G__9274 = G__9273;
                    var G__9275 = i__$2 + 1;
                    var G__9276 = xs__$1;
                    var G__9277 = es__$1;
                    acc__$2 = G__9274;
                    i__$1 = G__9275;
                    G__9252__$1 = G__9276;
                    G__9253__$1 = G__9277;
                    continue;
                  } else {
                    return G__9273;
                  }
                  break;
                }
              }
            }
          };
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core9235.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9235.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9235.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9235.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9235.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9235.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9235.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9235.getBasis = function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
          "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9232", "malli.core/t_malli$core9232", 735760861, null)], null)), new cljs.core.Symbol(null, "meta9233", "meta9233", -1812251955, null), new cljs.core.Symbol(null, "size", "size", -1555742762, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9236", "meta9236", -1981409652, null)], null);
        };
        malli.core.t_malli$core9235.cljs$lang$type = true;
        malli.core.t_malli$core9235.cljs$lang$ctorStr = "malli.core/t_malli$core9235";
        malli.core.t_malli$core9235.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9235");
        };
        malli.core.__GT_t_malli$core9235 = function malli$core$_tuple_schema_$___GT_t_malli$core9235(form__$1, options__$1, properties__$1, children__$2, parent__$2, meta9233__$1, size__$1, __GT_parser__$1, cache__$1, meta9236) {
          return new malli.core.t_malli$core9235(form__$1, options__$1, properties__$1, children__$2, parent__$2, meta9233__$1, size__$1, __GT_parser__$1, cache__$1, meta9236);
        };
      }
      return new malli.core.t_malli$core9235(form, options, properties, children__$1, parent__$1, self__.meta9233, size, __GT_parser, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9232.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9233", "meta9233", -1812251955, null)], null);
    };
    malli.core.t_malli$core9232.cljs$lang$type = true;
    malli.core.t_malli$core9232.cljs$lang$ctorStr = "malli.core/t_malli$core9232";
    malli.core.t_malli$core9232.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9232");
    };
    malli.core.__GT_t_malli$core9232 = function malli$core$_tuple_schema_$___GT_t_malli$core9232(meta9233) {
      return new malli.core.t_malli$core9232(meta9233);
    };
  }
  return new malli.core.t_malli$core9232(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._enum_schema = function malli$core$_enum_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9278 !== "undefined") {
  } else {
    malli.core.t_malli$core9278 = function(meta9279) {
      this.meta9279 = meta9279;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9278.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9280, meta9279__$1) {
      var self__ = this;
      var _9280__$1 = this;
      return new malli.core.t_malli$core9278(meta9279__$1);
    };
    malli.core.t_malli$core9278.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9280) {
      var self__ = this;
      var _9280__$1 = this;
      return self__.meta9279;
    };
    malli.core.t_malli$core9278.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9278.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(ast), options);
    };
    malli.core.t_malli$core9278.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9278.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "enum", "enum", 1679018432);
    };
    malli.core.t_malli$core9278.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9278.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "enum", "enum", 1679018432), properties, children, 1, null);
      var children__$1 = cljs.core.vec.call(null, children);
      var schema = cljs.core.set.call(null, children__$1);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9281 !== "undefined") {
      } else {
        malli.core.t_malli$core9281 = function(meta9279, parent, properties, children, options, schema, form, cache, meta9282) {
          this.meta9279 = meta9279;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.schema = schema;
          this.form = form;
          this.cache = cache;
          this.meta9282 = meta9282;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9281.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9283, meta9282__$1) {
          var self__ = this;
          var _9283__$1 = this;
          return new malli.core.t_malli$core9281(self__.meta9279, self__.parent, self__.properties, self__.children, self__.options, self__.schema, self__.form, self__.cache, meta9282__$1);
        };
        malli.core.t_malli$core9281.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9283) {
          var self__ = this;
          var _9283__$1 = this;
          return self__.meta9282;
        };
        malli.core.t_malli$core9281.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9281.prototype.malli$core$AST$_to_ast$arity$2 = function(_, ___$1) {
          var self__ = this;
          var ___$2 = this;
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "enum", "enum", 1679018432), new cljs.core.Keyword(null, "values", "values", 372645556), self__.children], null);
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return function(x) {
            return cljs.core.contains_QMARK_.call(null, self__.schema, x);
          };
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return function(x) {
            if (cljs.core.contains_QMARK_.call(null, self__.schema, x)) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function malli$core$_enum_schema_$_explain(x, in$, acc) {
            if (cljs.core.not.call(null, validator.call(null, x))) {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
            } else {
              return acc;
            }
          };
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9281.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9281.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9281.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9281.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9281.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9281.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9281.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9281.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9279", "meta9279", -1983707081, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9278", "malli.core/t_malli$core9278", -2127160274, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9282", "meta9282", 953817689, null)], null);
        };
        malli.core.t_malli$core9281.cljs$lang$type = true;
        malli.core.t_malli$core9281.cljs$lang$ctorStr = "malli.core/t_malli$core9281";
        malli.core.t_malli$core9281.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9281");
        };
        malli.core.__GT_t_malli$core9281 = function malli$core$_enum_schema_$___GT_t_malli$core9281(meta9279__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta9282) {
          return new malli.core.t_malli$core9281(meta9279__$1, parent__$2, properties__$1, children__$2, options__$1, schema__$1, form__$1, cache__$1, meta9282);
        };
      }
      return new malli.core.t_malli$core9281(self__.meta9279, parent__$1, properties, children__$1, options, schema, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9278.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9279", "meta9279", -1983707081, null)], null);
    };
    malli.core.t_malli$core9278.cljs$lang$type = true;
    malli.core.t_malli$core9278.cljs$lang$ctorStr = "malli.core/t_malli$core9278";
    malli.core.t_malli$core9278.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9278");
    };
    malli.core.__GT_t_malli$core9278 = function malli$core$_enum_schema_$___GT_t_malli$core9278(meta9279) {
      return new malli.core.t_malli$core9278(meta9279);
    };
  }
  return new malli.core.t_malli$core9278(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._re_schema = function malli$core$_re_schema(class_QMARK_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9285 !== "undefined") {
  } else {
    malli.core.t_malli$core9285 = function(class_QMARK_, meta9286) {
      this.class_QMARK_ = class_QMARK_;
      this.meta9286 = meta9286;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9285.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9287, meta9286__$1) {
      var self__ = this;
      var _9287__$1 = this;
      return new malli.core.t_malli$core9285(self__.class_QMARK_, meta9286__$1);
    };
    malli.core.t_malli$core9285.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9287) {
      var self__ = this;
      var _9287__$1 = this;
      return self__.meta9286;
    };
    malli.core.t_malli$core9285.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9285.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "re", "re", 228676202);
    };
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9285.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, p__9288, options) {
      var self__ = this;
      var vec__9289 = p__9288;
      var child = cljs.core.nth.call(null, vec__9289, 0, null);
      var children = vec__9289;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "re", "re", 228676202), properties, children, 1, 1);
      var children__$1 = cljs.core.vec.call(null, children);
      var re = cljs.core.re_pattern.call(null, child);
      var form = new cljs.core.Delay(function() {
        if (cljs.core.truth_(self__.class_QMARK_)) {
          return re;
        } else {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
        }
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9292 !== "undefined") {
      } else {
        malli.core.t_malli$core9292 = function(form, options, child, properties, meta9286, children, parent, re, class_QMARK_, cache, vec__9289, p__9288, meta9293) {
          this.form = form;
          this.options = options;
          this.child = child;
          this.properties = properties;
          this.meta9286 = meta9286;
          this.children = children;
          this.parent = parent;
          this.re = re;
          this.class_QMARK_ = class_QMARK_;
          this.cache = cache;
          this.vec__9289 = vec__9289;
          this.p__9288 = p__9288;
          this.meta9293 = meta9293;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9292.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9294, meta9293__$1) {
          var self__ = this;
          var _9294__$1 = this;
          return new malli.core.t_malli$core9292(self__.form, self__.options, self__.child, self__.properties, self__.meta9286, self__.children, self__.parent, self__.re, self__.class_QMARK_, self__.cache, self__.vec__9289, self__.p__9288, meta9293__$1);
        };
        malli.core.t_malli$core9292.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9294) {
          var self__ = this;
          var _9294__$1 = this;
          return self__.meta9293;
        };
        malli.core.t_malli$core9292.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9292.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._safe_pred.call(null, function(p1__9284_SHARP_) {
            return cljs.core.re_find.call(null, self__.re, p1__9284_SHARP_);
          });
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var valid_QMARK_ = malli.core._validator.call(null, this$__$1);
          return function(x) {
            if (cljs.core.truth_(valid_QMARK_.call(null, x))) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return function malli$core$_re_schema_$_explain(x, in$, acc) {
            try {
              if (cljs.core.not.call(null, cljs.core.re_find.call(null, self__.re, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                return acc;
              }
            } catch (e9295) {
              if (e9295 instanceof Error) {
                var e = e9295;
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, e))));
              } else {
                throw e9295;
              }
            }
          };
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9292.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9292.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9292.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9292.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9292.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9292.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9292.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9292.getBasis = function() {
          return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "meta9286", "meta9286", 911179592, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), 
          cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9285", "malli.core/t_malli$core9285", 1511098206, null)], null)), new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "class?", "class?", 2026366098, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, 
          "vec__9289", "vec__9289", -1206138022, null), new cljs.core.Symbol(null, "p__9288", "p__9288", 270396636, null), new cljs.core.Symbol(null, "meta9293", "meta9293", 422677049, null)], null);
        };
        malli.core.t_malli$core9292.cljs$lang$type = true;
        malli.core.t_malli$core9292.cljs$lang$ctorStr = "malli.core/t_malli$core9292";
        malli.core.t_malli$core9292.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9292");
        };
        malli.core.__GT_t_malli$core9292 = function malli$core$_re_schema_$___GT_t_malli$core9292(form__$1, options__$1, child__$1, properties__$1, meta9286__$1, children__$2, parent__$2, re__$1, class_QMARK___$1, cache__$1, vec__9289__$1, p__9288__$1, meta9293) {
          return new malli.core.t_malli$core9292(form__$1, options__$1, child__$1, properties__$1, meta9286__$1, children__$2, parent__$2, re__$1, class_QMARK___$1, cache__$1, vec__9289__$1, p__9288__$1, meta9293);
        };
      }
      return new malli.core.t_malli$core9292(form, options, child, properties, self__.meta9286, children__$1, parent__$1, re, self__.class_QMARK_, cache, vec__9289, p__9288, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9285.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "class?", "class?", 2026366098, null), new cljs.core.Symbol(null, "meta9286", "meta9286", 911179592, null)], null);
    };
    malli.core.t_malli$core9285.cljs$lang$type = true;
    malli.core.t_malli$core9285.cljs$lang$ctorStr = "malli.core/t_malli$core9285";
    malli.core.t_malli$core9285.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9285");
    };
    malli.core.__GT_t_malli$core9285 = function malli$core$_re_schema_$___GT_t_malli$core9285(class_QMARK___$1, meta9286) {
      return new malli.core.t_malli$core9285(class_QMARK___$1, meta9286);
    };
  }
  return new malli.core.t_malli$core9285(class_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._fn_schema = function malli$core$_fn_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9296 !== "undefined") {
  } else {
    malli.core.t_malli$core9296 = function(meta9297) {
      this.meta9297 = meta9297;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9296.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9298, meta9297__$1) {
      var self__ = this;
      var _9298__$1 = this;
      return new malli.core.t_malli$core9296(meta9297__$1);
    };
    malli.core.t_malli$core9296.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9298) {
      var self__ = this;
      var _9298__$1 = this;
      return self__.meta9297;
    };
    malli.core.t_malli$core9296.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9296.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9296.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9296.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
    };
    malli.core.t_malli$core9296.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9296.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), properties, children, 1, 1);
      var children__$1 = cljs.core.vec.call(null, children);
      var f = malli.core.eval.call(null, cljs.core.first.call(null, children__$1), options);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9299 !== "undefined") {
      } else {
        malli.core.t_malli$core9299 = function(meta9297, parent, properties, children, options, f, form, cache, meta9300) {
          this.meta9297 = meta9297;
          this.parent = parent;
          this.properties = properties;
          this.children = children;
          this.options = options;
          this.f = f;
          this.form = form;
          this.cache = cache;
          this.meta9300 = meta9300;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9299.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9301, meta9300__$1) {
          var self__ = this;
          var _9301__$1 = this;
          return new malli.core.t_malli$core9299(self__.meta9297, self__.parent, self__.properties, self__.children, self__.options, self__.f, self__.form, self__.cache, meta9300__$1);
        };
        malli.core.t_malli$core9299.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9301) {
          var self__ = this;
          var _9301__$1 = this;
          return self__.meta9300;
        };
        malli.core.t_malli$core9299.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9299.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._safe_pred.call(null, self__.f);
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._intercepting.call(null, malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1));
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_leaf.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function(x) {
            if (cljs.core.truth_(validator.call(null, x))) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return function malli$core$_fn_schema_$_explain(x, in$, acc) {
            try {
              if (cljs.core.not.call(null, self__.f.call(null, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                return acc;
              }
            } catch (e9302) {
              if (e9302 instanceof Error) {
                var e = e9302;
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, e))));
              } else {
                throw e9302;
              }
            }
          };
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9299.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9299.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9299.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9299.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9299.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9299.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9299.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9299.getBasis = function() {
          return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9297", "meta9297", -22154866, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9296", "malli.core/t_malli$core9296", 515896351, null)], null)), new cljs.core.Symbol(null, "properties", 
          "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "meta9300", "meta9300", 614985229, null)], null);
        };
        malli.core.t_malli$core9299.cljs$lang$type = true;
        malli.core.t_malli$core9299.cljs$lang$ctorStr = "malli.core/t_malli$core9299";
        malli.core.t_malli$core9299.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9299");
        };
        malli.core.__GT_t_malli$core9299 = function malli$core$_fn_schema_$___GT_t_malli$core9299(meta9297__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta9300) {
          return new malli.core.t_malli$core9299(meta9297__$1, parent__$2, properties__$1, children__$2, options__$1, f__$1, form__$1, cache__$1, meta9300);
        };
      }
      return new malli.core.t_malli$core9299(self__.meta9297, parent__$1, properties, children__$1, options, f, form, cache, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9296.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9297", "meta9297", -22154866, null)], null);
    };
    malli.core.t_malli$core9296.cljs$lang$type = true;
    malli.core.t_malli$core9296.cljs$lang$ctorStr = "malli.core/t_malli$core9296";
    malli.core.t_malli$core9296.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9296");
    };
    malli.core.__GT_t_malli$core9296 = function malli$core$_fn_schema_$___GT_t_malli$core9296(meta9297) {
      return new malli.core.t_malli$core9296(meta9297);
    };
  }
  return new malli.core.t_malli$core9296(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._maybe_schema = function malli$core$_maybe_schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9304 !== "undefined") {
  } else {
    malli.core.t_malli$core9304 = function(meta9305) {
      this.meta9305 = meta9305;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9304.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9306, meta9305__$1) {
      var self__ = this;
      var _9306__$1 = this;
      return new malli.core.t_malli$core9304(meta9305__$1);
    };
    malli.core.t_malli$core9304.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9306) {
      var self__ = this;
      var _9306__$1 = this;
      return self__.meta9305;
    };
    malli.core.t_malli$core9304.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9304.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_child_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "maybe", "maybe", -314397560);
    };
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9304.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "maybe", "maybe", -314397560), properties, children, 1, 1);
      var vec__9307 = malli.core._vmap.call(null, function(p1__9303_SHARP_) {
        return malli.core.schema.call(null, p1__9303_SHARP_, options);
      }, children);
      var schema = cljs.core.nth.call(null, vec__9307, 0, null);
      var children__$1 = vec__9307;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(f) {
        var parser = f.call(null, schema);
        return function(x) {
          if (x == null) {
            return x;
          } else {
            return parser.call(null, x);
          }
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9310 !== "undefined") {
      } else {
        malli.core.t_malli$core9310 = function(form, options, properties, schema, children, parent, __GT_parser, cache, vec__9307, meta9305, meta9311) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.schema = schema;
          this.children = children;
          this.parent = parent;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.vec__9307 = vec__9307;
          this.meta9305 = meta9305;
          this.meta9311 = meta9311;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9310.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9312, meta9311__$1) {
          var self__ = this;
          var _9312__$1 = this;
          return new malli.core.t_malli$core9310(self__.form, self__.options, self__.properties, self__.schema, self__.children, self__.parent, self__.__GT_parser, self__.cache, self__.vec__9307, self__.meta9305, meta9311__$1);
        };
        malli.core.t_malli$core9310.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9312) {
          var self__ = this;
          var _9312__$1 = this;
          return self__.meta9311;
        };
        malli.core.t_malli$core9310.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9310.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_child_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validator = malli.core._validator.call(null, self__.schema);
          return function(x) {
            var or__4185__auto__ = x == null;
            if (or__4185__auto__) {
              return or__4185__auto__;
            } else {
              return validator.call(null, x);
            }
          };
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainer = malli.core._explainer.call(null, self__.schema, cljs.core.conj.call(null, path, 0));
          return function malli$core$_maybe_schema_$_explain(x, in$, acc) {
            if (x == null) {
              return acc;
            } else {
              return explainer.call(null, x, in$, acc);
            }
          };
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core9310.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9310.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9310.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9310.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9310.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9310.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.call(null, 0, key)) {
            return self__.schema;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core9310.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.call(null, 0, key)) {
            return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
          }
        };
        malli.core.t_malli$core9310.getBasis = function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "schema", "schema", 58529736, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 
          761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9304", "malli.core/t_malli$core9304", 957835271, null)], null)), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "vec__9307", "vec__9307", -1645543365, null), new cljs.core.Symbol(null, "meta9305", "meta9305", 
          -155255747, null), new cljs.core.Symbol(null, "meta9311", "meta9311", 196256221, null)], null);
        };
        malli.core.t_malli$core9310.cljs$lang$type = true;
        malli.core.t_malli$core9310.cljs$lang$ctorStr = "malli.core/t_malli$core9310";
        malli.core.t_malli$core9310.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9310");
        };
        malli.core.__GT_t_malli$core9310 = function malli$core$_maybe_schema_$___GT_t_malli$core9310(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, __GT_parser__$1, cache__$1, vec__9307__$1, meta9305__$1, meta9311) {
          return new malli.core.t_malli$core9310(form__$1, options__$1, properties__$1, schema__$1, children__$2, parent__$2, __GT_parser__$1, cache__$1, vec__9307__$1, meta9305__$1, meta9311);
        };
      }
      return new malli.core.t_malli$core9310(form, options, properties, schema, children__$1, parent__$1, __GT_parser, cache, vec__9307, self__.meta9305, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9304.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9305", "meta9305", -155255747, null)], null);
    };
    malli.core.t_malli$core9304.cljs$lang$type = true;
    malli.core.t_malli$core9304.cljs$lang$ctorStr = "malli.core/t_malli$core9304";
    malli.core.t_malli$core9304.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9304");
    };
    malli.core.__GT_t_malli$core9304 = function malli$core$_maybe_schema_$___GT_t_malli$core9304(meta9305) {
      return new malli.core.t_malli$core9304(meta9305);
    };
  }
  return new malli.core.t_malli$core9304(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._multi_schema = function malli$core$_multi_schema(var_args) {
  var G__9316 = arguments.length;
  switch(G__9316) {
    case 0:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._multi_schema.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "naked-keys", "naked-keys", -90769828), true], null));
};
malli.core._multi_schema.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9317 !== "undefined") {
  } else {
    malli.core.t_malli$core9317 = function(opts, meta9318) {
      this.opts = opts;
      this.meta9318 = meta9318;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9317.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9319, meta9318__$1) {
      var self__ = this;
      var _9319__$1 = this;
      return new malli.core.t_malli$core9317(self__.opts, meta9318__$1);
    };
    malli.core.t_malli$core9317.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9319) {
      var self__ = this;
      var _9319__$1 = this;
      return self__.meta9318;
    };
    malli.core.t_malli$core9317.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9317.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__4185__auto__ = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return new cljs.core.Keyword(null, "multi", "multi", -190293005);
      }
    };
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return (new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126)).cljs$core$IFn$_invoke$arity$1(self__.opts);
    };
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9317.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      var opts_SINGLEQUOTE_ = cljs.core.merge.call(null, self__.opts, cljs.core.select_keys.call(null, properties, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "lazy-refs", "lazy-refs", 409178818)], null)));
      var entry_parser = malli.core._create_entry_parser.call(null, children, opts_SINGLEQUOTE_, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var dispatch = malli.core.eval.call(null, (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$1(properties), options);
      var dispatch_map = new cljs.core.Delay(function() {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, malli.core._entry_entries.call(null, entry_parser));
      }, null);
      var finder = function(p__9320) {
        var map__9321 = p__9320;
        var map__9321__$1 = (!(map__9321 == null) ? map__9321.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9321.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9321) : map__9321;
        var m = map__9321__$1;
        var default$ = cljs.core.get.call(null, map__9321__$1, new cljs.core.Keyword("malli.core", "default", "malli.core/default", -1706204176));
        return function(x) {
          return m.call(null, x, default$);
        };
      };
      if (cljs.core.truth_(dispatch)) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "missing-property", "malli.core/missing-property", -818756333), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9323 !== "undefined") {
      } else {
        malli.core.t_malli$core9323 = function(form, options, properties, children, entry_parser, parent, opts_SINGLEQUOTE_, dispatch, cache, finder, opts, meta9318, dispatch_map, meta9324) {
          this.form = form;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.opts_SINGLEQUOTE_ = opts_SINGLEQUOTE_;
          this.dispatch = dispatch;
          this.cache = cache;
          this.finder = finder;
          this.opts = opts;
          this.meta9318 = meta9318;
          this.dispatch_map = dispatch_map;
          this.meta9324 = meta9324;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9323.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9325, meta9324__$1) {
          var self__ = this;
          var _9325__$1 = this;
          return new malli.core.t_malli$core9323(self__.form, self__.options, self__.properties, self__.children, self__.entry_parser, self__.parent, self__.opts_SINGLEQUOTE_, self__.dispatch, self__.cache, self__.finder, self__.opts, self__.meta9318, self__.dispatch_map, meta9324__$1);
        };
        malli.core.t_malli$core9323.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9325) {
          var self__ = this;
          var _9325__$1 = this;
          return self__.meta9324;
        };
        malli.core.t_malli$core9323.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9323.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var find = self__.finder.call(null, cljs.core.reduce_kv.call(null, function(acc, k, s) {
            return cljs.core.assoc.call(null, acc, k, malli.core._validator.call(null, s));
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map)));
          return function(x) {
            var temp__5751__auto__ = find.call(null, self__.dispatch.call(null, x));
            if (cljs.core.truth_(temp__5751__auto__)) {
              var validator = temp__5751__auto__;
              return validator.call(null, x);
            } else {
              return false;
            }
          };
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          var __GT_children = cljs.core.reduce_kv.call(null, function(acc, k, s) {
            var t = malli.core._transformer.call(null, s, transformer, method, options__$1);
            var G__9326 = acc;
            if (cljs.core.truth_(t)) {
              return cljs.core.assoc.call(null, G__9326, k, t);
            } else {
              return G__9326;
            }
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map));
          var find = self__.finder.call(null, __GT_children);
          var child_transformer = cljs.core.seq.call(null, __GT_children) ? function(x) {
            var temp__5755__auto__ = find.call(null, self__.dispatch.call(null, x));
            if (temp__5755__auto__ == null) {
              return x;
            } else {
              var t = temp__5755__auto__;
              return t.call(null, x);
            }
          } : null;
          return malli.core._intercepting.call(null, this_transformer, child_transformer);
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var parse = function(k, s) {
            var p = malli.core._parser.call(null, s);
            return function(x) {
              return malli.impl.util._map_valid.call(null, function(p1__9314_SHARP_) {
                return malli.impl.util._tagged.call(null, k, p1__9314_SHARP_);
              }, p.call(null, x));
            };
          };
          var find = self__.finder.call(null, cljs.core.reduce_kv.call(null, function(acc, k, s) {
            return cljs.core.assoc.call(null, acc, k, parse.call(null, k, s));
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map)));
          return function(x) {
            var temp__5755__auto__ = find.call(null, self__.dispatch.call(null, x));
            if (temp__5755__auto__ == null) {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            } else {
              var parser = temp__5755__auto__;
              return parser.call(null, x);
            }
          };
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var find = self__.finder.call(null, cljs.core.reduce.call(null, function(acc, p__9327) {
            var vec__9328 = p__9327;
            var k = cljs.core.nth.call(null, vec__9328, 0, null);
            var s = cljs.core.nth.call(null, vec__9328, 1, null);
            return cljs.core.assoc.call(null, acc, k, malli.core._explainer.call(null, s, cljs.core.conj.call(null, path, k)));
          }, cljs.core.PersistentArrayMap.EMPTY, malli.core._entries.call(null, this$__$1)));
          var __GT_path = self__.dispatch instanceof cljs.core.Keyword ? function(p1__9313_SHARP_) {
            return cljs.core.conj.call(null, p1__9313_SHARP_, self__.dispatch);
          } : cljs.core.identity;
          return function(x, in$, acc) {
            var temp__5751__auto__ = find.call(null, self__.dispatch.call(null, x));
            if (cljs.core.truth_(temp__5751__auto__)) {
              var explainer = temp__5751__auto__;
              return explainer.call(null, x, in$, acc);
            } else {
              return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, __GT_path.call(null, path), __GT_path.call(null, in$), this$__$1, x, new cljs.core.Keyword("malli.core", "invalid-dispatch-value", "malli.core/invalid-dispatch-value", 516707675)));
            }
          };
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var unparsers = cljs.core.reduce_kv.call(null, function(acc, k, s) {
            return cljs.core.assoc.call(null, acc, k, malli.core._unparser.call(null, s));
          }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.deref.call(null, self__.dispatch_map));
          return function(x) {
            if (malli.impl.util._tagged_QMARK_.call(null, x)) {
              var temp__5755__auto__ = unparsers.call(null, cljs.core.key.call(null, x));
              if (temp__5755__auto__ == null) {
                return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
              } else {
                var f = temp__5755__auto__;
                return f.call(null, cljs.core.val.call(null, x));
              }
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9323.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9323.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9323.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9323.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core9323.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9323.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9323.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9323.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9323.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries.call(null, this$__$1, key, default$);
        };
        malli.core.t_malli$core9323.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9323.getBasis = function() {
          return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", 
          "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9317", "malli.core/t_malli$core9317", 1042844474, null)], null)), new cljs.core.Symbol(null, "opts'", "opts'", -1154334730, null), new cljs.core.Symbol(null, "dispatch", "dispatch", -1335098760, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "finder", "finder", 1492719066, 
          null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta9318", "meta9318", -252195747, null), new cljs.core.Symbol(null, "dispatch-map", "dispatch-map", 1489026142, null), new cljs.core.Symbol(null, "meta9324", "meta9324", 808546032, null)], null);
        };
        malli.core.t_malli$core9323.cljs$lang$type = true;
        malli.core.t_malli$core9323.cljs$lang$ctorStr = "malli.core/t_malli$core9323";
        malli.core.t_malli$core9323.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9323");
        };
        malli.core.__GT_t_malli$core9323 = function malli$core$__GT_t_malli$core9323(form__$1, options__$1, properties__$1, children__$1, entry_parser__$1, parent__$2, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, meta9318__$1, dispatch_map__$1, meta9324) {
          return new malli.core.t_malli$core9323(form__$1, options__$1, properties__$1, children__$1, entry_parser__$1, parent__$2, opts_SINGLEQUOTE___$1, dispatch__$1, cache__$1, finder__$1, opts__$1, meta9318__$1, dispatch_map__$1, meta9324);
        };
      }
      return new malli.core.t_malli$core9323(form, options, properties, children, entry_parser, parent__$1, opts_SINGLEQUOTE_, dispatch, cache, finder, self__.opts, self__.meta9318, dispatch_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9317.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "meta9318", "meta9318", -252195747, null)], null);
    };
    malli.core.t_malli$core9317.cljs$lang$type = true;
    malli.core.t_malli$core9317.cljs$lang$ctorStr = "malli.core/t_malli$core9317";
    malli.core.t_malli$core9317.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9317");
    };
    malli.core.__GT_t_malli$core9317 = function malli$core$__GT_t_malli$core9317(opts__$1, meta9318) {
      return new malli.core.t_malli$core9317(opts__$1, meta9318);
    };
  }
  return new malli.core.t_malli$core9317(opts, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._multi_schema.cljs$lang$maxFixedArity = 1;
malli.core._ref_schema = function malli$core$_ref_schema(var_args) {
  var G__9334 = arguments.length;
  switch(G__9334) {
    case 0:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core._ref_schema.call(null, null);
};
malli.core._ref_schema.cljs$core$IFn$_invoke$arity$1 = function(p__9335) {
  var map__9336 = p__9335;
  var map__9336__$1 = (!(map__9336 == null) ? map__9336.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9336.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9336) : map__9336;
  var lazy = cljs.core.get.call(null, map__9336__$1, new cljs.core.Keyword(null, "lazy", "lazy", -424547181));
  var type_properties = cljs.core.get.call(null, map__9336__$1, new cljs.core.Keyword(null, "type-properties", "type-properties", -1728352126));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9338 !== "undefined") {
  } else {
    malli.core.t_malli$core9338 = function(p__9335, map__9336, lazy, type_properties, meta9339) {
      this.p__9335 = p__9335;
      this.map__9336 = map__9336;
      this.lazy = lazy;
      this.type_properties = type_properties;
      this.meta9339 = meta9339;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9338.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9340, meta9339__$1) {
      var self__ = this;
      var _9340__$1 = this;
      return new malli.core.t_malli$core9338(self__.p__9335, self__.map__9336, self__.lazy, self__.type_properties, meta9339__$1);
    };
    malli.core.t_malli$core9338.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9340) {
      var self__ = this;
      var _9340__$1 = this;
      return self__.meta9339;
    };
    malli.core.t_malli$core9338.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9338.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_value_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9338.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9338.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "ref", "ref", 1289896967);
    };
    malli.core.t_malli$core9338.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type_properties;
    };
    malli.core.t_malli$core9338.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, p__9341, p__9342) {
      var self__ = this;
      var vec__9343 = p__9341;
      var ref = cljs.core.nth.call(null, vec__9343, 0, null);
      var children = vec__9343;
      var map__9346 = p__9342;
      var map__9346__$1 = (!(map__9346 == null) ? map__9346.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9346.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9346) : map__9346;
      var options = map__9346__$1;
      var allow_invalid_refs = cljs.core.get.call(null, map__9346__$1, new cljs.core.Keyword("malli.core", "allow-invalid-refs", "malli.core/allow-invalid-refs", -1863169617));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "ref", "ref", 1289896967), properties, children, 1, 1);
      if (malli.core._reference_QMARK_.call(null, ref)) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ref", "ref", 1289896967), ref], null));
      }
      var _ref = function() {
        var or__4185__auto__ = function() {
          var and__4174__auto__ = self__.lazy;
          if (cljs.core.truth_(and__4174__auto__)) {
            return malli.core._memoize.call(null, function() {
              return malli.core.schema.call(null, malli.registry._schema.call(null, malli.core._registry.call(null, options), ref), options);
            });
          } else {
            return and__4174__auto__;
          }
        }();
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = function() {
            var temp__5753__auto__ = malli.registry._schema.call(null, malli.core._registry.call(null, options), ref);
            if (cljs.core.truth_(temp__5753__auto__)) {
              var s = temp__5753__auto__;
              return malli.core._memoize.call(null, function() {
                return malli.core.schema.call(null, s, options);
              });
            } else {
              return null;
            }
          }();
          if (cljs.core.truth_(or__4185__auto____$1)) {
            return or__4185__auto____$1;
          } else {
            if (cljs.core.truth_(allow_invalid_refs)) {
              return null;
            } else {
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ref", "malli.core/invalid-ref", -1109933109), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "ref", "ref", 1289896967), ref], null));
            }
          }
        }
      }();
      var children__$1 = cljs.core.vec.call(null, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, cljs.core.identity, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_parser = function(f) {
        var parser = malli.core._memoize.call(null, function() {
          return f.call(null, _ref.call(null));
        });
        return function(x) {
          return parser.call(null).call(null, x);
        };
      };
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9348 !== "undefined") {
      } else {
        malli.core.t_malli$core9348 = function(form, options, p__9342, meta9339, properties, p__9341, children, type_properties, map__9336, parent, ref, map__9346, p__9335, vec__9343, __GT_parser, cache, lazy, allow_invalid_refs, _ref, meta9349) {
          this.form = form;
          this.options = options;
          this.p__9342 = p__9342;
          this.meta9339 = meta9339;
          this.properties = properties;
          this.p__9341 = p__9341;
          this.children = children;
          this.type_properties = type_properties;
          this.map__9336 = map__9336;
          this.parent = parent;
          this.ref = ref;
          this.map__9346 = map__9346;
          this.p__9335 = p__9335;
          this.vec__9343 = vec__9343;
          this.__GT_parser = __GT_parser;
          this.cache = cache;
          this.lazy = lazy;
          this.allow_invalid_refs = allow_invalid_refs;
          this._ref = _ref;
          this.meta9349 = meta9349;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9348.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9350, meta9349__$1) {
          var self__ = this;
          var _9350__$1 = this;
          return new malli.core.t_malli$core9348(self__.form, self__.options, self__.p__9342, self__.meta9339, self__.properties, self__.p__9341, self__.children, self__.type_properties, self__.map__9336, self__.parent, self__.ref, self__.map__9346, self__.p__9335, self__.vec__9343, self__.__GT_parser, self__.cache, self__.lazy, self__.allow_invalid_refs, self__._ref, meta9349__$1);
        };
        malli.core.t_malli$core9348.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9350) {
          var self__ = this;
          var _9350__$1 = this;
          return self__.meta9349;
        };
        malli.core.t_malli$core9348.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._to_value_ast.call(null, this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          var validator = malli.core._memoize.call(null, function() {
            return malli.core._validator.call(null, self__._ref.call(null));
          });
          return function(x) {
            return validator.call(null).call(null, x);
          };
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var this_transformer = malli.core._value_transformer.call(null, transformer, this$__$1, method, options__$1);
          var deref_transformer = malli.core._memoize.call(null, function() {
            return malli.core._transformer.call(null, self__._ref.call(null), transformer, method, options__$1);
          });
          return malli.core._intercepting.call(null, this_transformer, function(x) {
            var temp__5755__auto__ = deref_transformer.call(null);
            if (temp__5755__auto__ == null) {
              return x;
            } else {
              var t = temp__5755__auto__;
              return t.call(null, x);
            }
          });
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          var accept = function() {
            return malli.core._inner.call(null, walker, self__._ref.call(null), cljs.core.into.call(null, path, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)), malli.core._update.call(null, options__$1, new cljs.core.Keyword("malli.core", "walked-refs", "malli.core/walked-refs", -2010140962), function(p1__9332_SHARP_) {
              return cljs.core.conj.call(null, function() {
                var or__4185__auto__ = p1__9332_SHARP_;
                if (cljs.core.truth_(or__4185__auto__)) {
                  return or__4185__auto__;
                } else {
                  return cljs.core.PersistentHashSet.EMPTY;
                }
              }(), self__.ref);
            }));
          };
          if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
            if (cljs.core.not.call(null, malli.core._boolean_fn.call(null, (new cljs.core.Keyword("malli.core", "walk-refs", "malli.core/walk-refs", 755904802)).cljs$core$IFn$_invoke$arity$2(options__$1, false)).call(null, self__.ref)) || cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("malli.core", "walked-refs", "malli.core/walked-refs", -2010140962)).cljs$core$IFn$_invoke$arity$1(options__$1), self__.ref)) {
              return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ref], null), options__$1);
            } else {
              return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [accept.call(null)], null), options__$1);
            }
          } else {
            return null;
          }
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._parser);
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          var explainer = malli.core._memoize.call(null, function() {
            return malli.core._explainer.call(null, self__._ref.call(null), cljs.core.conj.call(null, path, 0));
          });
          return function(x, in$, acc) {
            return explainer.call(null).call(null, x, in$, acc);
          };
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.__GT_parser.call(null, malli.core._unparser);
        };
        malli.core.t_malli$core9348.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9348.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9348.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.call(null, key, 0)) {
            return malli.core._pointer.call(null, self__.ref, self__._ref.call(null), self__.options);
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core9348.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9348.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.call(null, key, 0)) {
            return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
          }
        };
        malli.core.t_malli$core9348.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ref;
        };
        malli.core.t_malli$core9348.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__._ref.call(null);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return false;
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(this$, _, ___$1, ___$2) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "potentially-recursive-seqex", "malli.core/potentially-recursive-seqex", -1574993850), this$__$1);
        };
        malli.core.t_malli$core9348.getBasis = function() {
          return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "p__9342", "p__9342", -406448159, null), new cljs.core.Symbol(null, "meta9339", "meta9339", -572152570, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "p__9341", "p__9341", -613471833, 
          null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "map__9336", "map__9336", 2012181162, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9338", "malli.core/t_malli$core9338", 
          771980532, null)], null)), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null), new cljs.core.Symbol(null, "map__9346", "map__9346", 1258392434, null), new cljs.core.Symbol(null, "p__9335", "p__9335", -350094828, null), new cljs.core.Symbol(null, "vec__9343", "vec__9343", 1453313077, null), new cljs.core.Symbol(null, "-\x3eparser", "-\x3eparser", 1105019639, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "lazy", "lazy", 1215984346, 
          null), new cljs.core.Symbol(null, "allow-invalid-refs", "allow-invalid-refs", -815552802, null), new cljs.core.Symbol(null, "-ref", "-ref", -1337394753, null), new cljs.core.Symbol(null, "meta9349", "meta9349", 771232345, null)], null);
        };
        malli.core.t_malli$core9348.cljs$lang$type = true;
        malli.core.t_malli$core9348.cljs$lang$ctorStr = "malli.core/t_malli$core9348";
        malli.core.t_malli$core9348.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9348");
        };
        malli.core.__GT_t_malli$core9348 = function malli$core$__GT_t_malli$core9348(form__$1, options__$1, p__9342__$1, meta9339__$1, properties__$1, p__9341__$1, children__$2, type_properties__$1, map__9336__$1, parent__$2, ref__$1, map__9346__$2, p__9335__$1, vec__9343__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, _ref__$1, meta9349) {
          return new malli.core.t_malli$core9348(form__$1, options__$1, p__9342__$1, meta9339__$1, properties__$1, p__9341__$1, children__$2, type_properties__$1, map__9336__$1, parent__$2, ref__$1, map__9346__$2, p__9335__$1, vec__9343__$1, __GT_parser__$1, cache__$1, lazy__$1, allow_invalid_refs__$1, _ref__$1, meta9349);
        };
      }
      return new malli.core.t_malli$core9348(form, options, p__9342, self__.meta9339, properties, p__9341, children__$1, self__.type_properties, self__.map__9336, parent__$1, ref, map__9346__$1, self__.p__9335, vec__9343, __GT_parser, cache, self__.lazy, allow_invalid_refs, _ref, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9338.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__9335", "p__9335", -350094828, null), new cljs.core.Symbol(null, "map__9336", "map__9336", 2012181162, null), new cljs.core.Symbol(null, "lazy", "lazy", 1215984346, null), new cljs.core.Symbol(null, "type-properties", "type-properties", -87820599, null), new cljs.core.Symbol(null, "meta9339", "meta9339", -572152570, null)], null);
    };
    malli.core.t_malli$core9338.cljs$lang$type = true;
    malli.core.t_malli$core9338.cljs$lang$ctorStr = "malli.core/t_malli$core9338";
    malli.core.t_malli$core9338.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9338");
    };
    malli.core.__GT_t_malli$core9338 = function malli$core$__GT_t_malli$core9338(p__9335__$1, map__9336__$2, lazy__$1, type_properties__$1, meta9339) {
      return new malli.core.t_malli$core9338(p__9335__$1, map__9336__$2, lazy__$1, type_properties__$1, meta9339);
    };
  }
  return new malli.core.t_malli$core9338(p__9335, map__9336__$1, lazy, type_properties, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._ref_schema.cljs$lang$maxFixedArity = 1;
malli.core._schema_schema = function malli$core$_schema_schema(p__9353) {
  var map__9354 = p__9353;
  var map__9354__$1 = (!(map__9354 == null) ? map__9354.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9354.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9354) : map__9354;
  var id = cljs.core.get.call(null, map__9354__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var raw = cljs.core.get.call(null, map__9354__$1, new cljs.core.Keyword(null, "raw", "raw", 1604651272));
  var internal = function() {
    var or__4185__auto__ = id;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return raw;
    }
  }();
  var type = cljs.core.truth_(internal) ? new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863) : new cljs.core.Keyword(null, "schema", "schema", -1582001791);
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9356 !== "undefined") {
  } else {
    malli.core.t_malli$core9356 = function(p__9353, map__9354, id, raw, internal, type, meta9357) {
      this.p__9353 = p__9353;
      this.map__9354 = map__9354;
      this.id = id;
      this.raw = raw;
      this.internal = internal;
      this.type = type;
      this.meta9357 = meta9357;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9356.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9358, meta9357__$1) {
      var self__ = this;
      var _9358__$1 = this;
      return new malli.core.t_malli$core9356(self__.p__9353, self__.map__9354, self__.id, self__.raw, self__.internal, self__.type, meta9357__$1);
    };
    malli.core.t_malli$core9356.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9358) {
      var self__ = this;
      var _9358__$1 = this;
      return self__.meta9357;
    };
    malli.core.t_malli$core9356.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9356.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return (cljs.core.truth_(self__.internal) ? malli.core._from_value_ast : malli.core._from_child_ast).call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9356.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, self__.type, properties, children, 1, 1);
      var children__$1 = malli.core._vmap.call(null, function(p1__9352_SHARP_) {
        return malli.core.schema.call(null, p1__9352_SHARP_, options);
      }, children);
      var child = cljs.core.nth.call(null, children__$1, 0);
      var form = new cljs.core.Delay(function() {
        var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, properties) ? function() {
          var or__4185__auto__ = self__.id;
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            var and__4174__auto__ = self__.raw;
            if (cljs.core.truth_(and__4174__auto__)) {
              return malli.core._form.call(null, child);
            } else {
              return and__4174__auto__;
            }
          }
        }() : false;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
        }
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9359 !== "undefined") {
      } else {
        malli.core.t_malli$core9359 = function(form, p__9353, options, child, meta9357, properties, map__9354, children, parent, raw, type, internal, cache, id, meta9360) {
          this.form = form;
          this.p__9353 = p__9353;
          this.options = options;
          this.child = child;
          this.meta9357 = meta9357;
          this.properties = properties;
          this.map__9354 = map__9354;
          this.children = children;
          this.parent = parent;
          this.raw = raw;
          this.type = type;
          this.internal = internal;
          this.cache = cache;
          this.id = id;
          this.meta9360 = meta9360;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9359.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9361, meta9360__$1) {
          var self__ = this;
          var _9361__$1 = this;
          return new malli.core.t_malli$core9359(self__.form, self__.p__9353, self__.options, self__.child, self__.meta9357, self__.properties, self__.map__9354, self__.children, self__.parent, self__.raw, self__.type, self__.internal, self__.cache, self__.id, meta9360__$1);
        };
        malli.core.t_malli$core9359.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9361) {
          var self__ = this;
          var _9361__$1 = this;
          return self__.meta9360;
        };
        malli.core.t_malli$core9359.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(self__.id)) {
            return malli.core._ast.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, new cljs.core.Keyword(null, "value", "value", 305978217), self__.id], null), malli.core._properties.call(null, this$__$1), malli.core._options.call(null, this$__$1));
          } else {
            if (cljs.core.truth_(self__.raw)) {
              return malli.core._to_value_ast.call(null, this$__$1);
            } else {
              return malli.core._to_child_ast.call(null, this$__$1);
            }
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._validator.call(null, self__.child);
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parent_children_transformer.call(null, this$__$1, self__.children, transformer, method, options__$1);
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core.truth_(malli.core._accept.call(null, walker, this$__$1, path, options__$1))) {
            if (cljs.core.truth_(function() {
              var or__4185__auto__ = cljs.core.not.call(null, self__.id);
              if (or__4185__auto__) {
                return or__4185__auto__;
              } else {
                return malli.core._boolean_fn.call(null, (new cljs.core.Keyword("malli.core", "walk-schema-refs", "malli.core/walk-schema-refs", -1140065954)).cljs$core$IFn$_invoke$arity$2(options__$1, false)).call(null, self__.id);
              }
            }())) {
              return malli.core._outer.call(null, walker, this$__$1, path, malli.core._inner_indexed.call(null, walker, path, self__.children, options__$1), options__$1);
            } else {
              return malli.core._outer.call(null, walker, this$__$1, path, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.id], null), options__$1);
            }
          } else {
            return null;
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._parser.call(null, self__.child);
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._explainer.call(null, self__.child, cljs.core.conj.call(null, path, 0));
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._unparser.call(null, self__.child);
        };
        malli.core.t_malli$core9359.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9359.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9359.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9359.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core._EQ_.call(null, key, 0)) {
            return self__.child;
          } else {
            return default$;
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          if (cljs.core._EQ_.call(null, key, 0)) {
            return malli.core._set_children.call(null, this$__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null));
          } else {
            return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "index-out-of-bounds", "malli.core/index-out-of-bounds", -371273844), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), this$__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), key], null));
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RefSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$RefSchema$_ref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.id;
        };
        malli.core.t_malli$core9359.prototype.malli$core$RefSchema$_deref$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.child;
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return false;
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_validator.call(null, self__.child);
          } else {
            return malli.impl.regex.item_validator.call(null, malli.core._validator.call(null, self__.child));
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_explainer.call(null, self__.child, path);
          } else {
            return malli.impl.regex.item_explainer.call(null, path, self__.child, malli.core._explainer.call(null, self__.child, path));
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_parser.call(null, self__.child);
          } else {
            return malli.impl.regex.item_parser.call(null, malli.core.parser.call(null, self__.child));
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_unparser.call(null, self__.child);
          } else {
            return malli.impl.regex.item_unparser.call(null, malli.core.unparser.call(null, self__.child));
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(_, transformer, method, options__$1) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.internal)) {
            return malli.core._regex_transformer.call(null, self__.child, transformer, method, options__$1);
          } else {
            return malli.impl.regex.item_transformer.call(null, method, malli.core._validator.call(null, self__.child), function() {
              var or__4185__auto__ = malli.core._transformer.call(null, self__.child, transformer, method, options__$1);
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return cljs.core.identity;
              }
            }());
          }
        };
        malli.core.t_malli$core9359.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._regex_min_max.call(null, self__.child);
        };
        malli.core.t_malli$core9359.getBasis = function() {
          return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "p__9353", "p__9353", 1308223232, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "child", "child", -2030468224, null), new cljs.core.Symbol(null, "meta9357", "meta9357", 624432772, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), 
          new cljs.core.Symbol(null, "map__9354", "map__9354", -1306587064, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9356", "malli.core/t_malli$core9356", 1321560039, null)], null)), new cljs.core.Symbol(null, "raw", "raw", -1049784497, 
          null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "internal", "internal", 785661430, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "meta9360", "meta9360", 1375521101, null)], null);
        };
        malli.core.t_malli$core9359.cljs$lang$type = true;
        malli.core.t_malli$core9359.cljs$lang$ctorStr = "malli.core/t_malli$core9359";
        malli.core.t_malli$core9359.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9359");
        };
        malli.core.__GT_t_malli$core9359 = function malli$core$_schema_schema_$___GT_t_malli$core9359(form__$1, p__9353__$1, options__$1, child__$1, meta9357__$1, properties__$1, map__9354__$1, children__$2, parent__$2, raw__$1, type__$1, internal__$1, cache__$1, id__$1, meta9360) {
          return new malli.core.t_malli$core9359(form__$1, p__9353__$1, options__$1, child__$1, meta9357__$1, properties__$1, map__9354__$1, children__$2, parent__$2, raw__$1, type__$1, internal__$1, cache__$1, id__$1, meta9360);
        };
      }
      return new malli.core.t_malli$core9359(form, self__.p__9353, options, child, self__.meta9357, properties, self__.map__9354, children__$1, parent__$1, self__.raw, self__.type, self__.internal, cache, self__.id, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9356.getBasis = function() {
      return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p__9353", "p__9353", 1308223232, null), new cljs.core.Symbol(null, "map__9354", "map__9354", -1306587064, null), new cljs.core.Symbol(null, "id", "id", 252129435, null), new cljs.core.Symbol(null, "raw", "raw", -1049784497, null), new cljs.core.Symbol(null, "internal", "internal", 785661430, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, 
      "meta9357", "meta9357", 624432772, null)], null);
    };
    malli.core.t_malli$core9356.cljs$lang$type = true;
    malli.core.t_malli$core9356.cljs$lang$ctorStr = "malli.core/t_malli$core9356";
    malli.core.t_malli$core9356.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9356");
    };
    malli.core.__GT_t_malli$core9356 = function malli$core$_schema_schema_$___GT_t_malli$core9356(p__9353__$1, map__9354__$2, id__$1, raw__$1, internal__$1, type__$1, meta9357) {
      return new malli.core.t_malli$core9356(p__9353__$1, map__9354__$2, id__$1, raw__$1, internal__$1, type__$1, meta9357);
    };
  }
  return new malli.core.t_malli$core9356(p__9353, map__9354__$1, id, raw, internal, type, cljs.core.PersistentArrayMap.EMPTY);
};
malli.core.__EQ__GT__schema = function malli$core$__EQ__GT__schema() {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9364 !== "undefined") {
  } else {
    malli.core.t_malli$core9364 = function(meta9365) {
      this.meta9365 = meta9365;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9364.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9366, meta9365__$1) {
      var self__ = this;
      var _9366__$1 = this;
      return new malli.core.t_malli$core9364(meta9365__$1);
    };
    malli.core.t_malli$core9364.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9366) {
      var self__ = this;
      var _9366__$1 = this;
      return self__.meta9365;
    };
    malli.core.t_malli$core9364.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9364.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, p__9367, options) {
      var self__ = this;
      var map__9368 = p__9367;
      var map__9368__$1 = (!(map__9368 == null) ? map__9368.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9368.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9368) : map__9368;
      var input = cljs.core.get.call(null, map__9368__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
      var output = cljs.core.get.call(null, map__9368__$1, new cljs.core.Keyword(null, "output", "output", -1105869043));
      var properties = cljs.core.get.call(null, map__9368__$1, new cljs.core.Keyword(null, "properties", "properties", 685819552));
      var parent__$1 = this;
      return malli.core._into_schema.call(null, parent__$1, properties, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [malli.core.from_ast.call(null, input, options), malli.core.from_ast.call(null, output, options)], null), options);
    };
    malli.core.t_malli$core9364.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9364.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128);
    };
    malli.core.t_malli$core9364.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9364.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__9370) {
      var self__ = this;
      var map__9371 = p__9370;
      var map__9371__$1 = (!(map__9371 == null) ? map__9371.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9371.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9371) : map__9371;
      var options = map__9371__$1;
      var function_checker = cljs.core.get.call(null, map__9371__$1, new cljs.core.Keyword("malli.core", "function-checker", "malli.core/function-checker", -792030936));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), properties, children, 2, 2);
      var vec__9373 = malli.core._vmap.call(null, function(p1__9362_SHARP_) {
        return malli.core.schema.call(null, p1__9362_SHARP_, options);
      }, children);
      var input = cljs.core.nth.call(null, vec__9373, 0, null);
      var output = cljs.core.nth.call(null, vec__9373, 1, null);
      var children__$1 = vec__9373;
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(p1__9363_SHARP_) {
        return function_checker.call(null, p1__9363_SHARP_, options);
      } : cljs.core.constantly.call(null, null);
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "cat", "cat", -1457810207), null, new cljs.core.Keyword(null, "catn", "catn", -48807277), null], null), null)).call(null, malli.core.type.call(null, input)))) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-input-schema", "malli.core/invalid-input-schema", -833477915), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "input", "input", 556931961), input], null));
      }
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9376 !== "undefined") {
      } else {
        malli.core.t_malli$core9376 = function(form, input, options, properties, children, parent, __GT_checker, output, meta9365, function_checker, p__9370, vec__9373, cache, map__9371, meta9377) {
          this.form = form;
          this.input = input;
          this.options = options;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this.__GT_checker = __GT_checker;
          this.output = output;
          this.meta9365 = meta9365;
          this.function_checker = function_checker;
          this.p__9370 = p__9370;
          this.vec__9373 = vec__9373;
          this.cache = cache;
          this.map__9371 = map__9371;
          this.meta9377 = meta9377;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9376.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9378, meta9377__$1) {
          var self__ = this;
          var _9378__$1 = this;
          return new malli.core.t_malli$core9376(self__.form, self__.input, self__.options, self__.properties, self__.children, self__.parent, self__.__GT_checker, self__.output, self__.meta9365, self__.function_checker, self__.p__9370, self__.vec__9373, self__.cache, self__.map__9371, meta9377__$1);
        };
        malli.core.t_malli$core9376.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9378) {
          var self__ = this;
          var _9378__$1 = this;
          return self__.meta9377;
        };
        malli.core.t_malli$core9376.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9376.prototype.malli$core$AST$_to_ast$arity$2 = function(_, ___$1) {
          var self__ = this;
          var ___$2 = this;
          var G__9379 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), new cljs.core.Keyword(null, "input", "input", 556931961), malli.core.ast.call(null, self__.input), new cljs.core.Keyword(null, "output", "output", -1105869043), malli.core.ast.call(null, self__.output)], null);
          if (cljs.core.truth_(self__.properties)) {
            return cljs.core.assoc.call(null, G__9379, new cljs.core.Keyword(null, "properties", "properties", 685819552), self__.properties);
          } else {
            return G__9379;
          }
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            var validator = function(x) {
              return checker.call(null, x) == null;
            };
            return function(x) {
              return cljs.core.ifn_QMARK_.call(null, x) && validator.call(null, x);
            };
          } else {
            return cljs.core.ifn_QMARK_;
          }
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_transformer$arity$4 = function(_, ___$1, ___$2, ___$3) {
          var self__ = this;
          var ___$4 = this;
          return null;
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function(x) {
            if (cljs.core.truth_(validator.call(null, x))) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
              if (!cljs.core.fn_QMARK_.call(null, x)) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                var temp__5751__auto____$1 = checker.call(null, x);
                if (cljs.core.truth_(temp__5751__auto____$1)) {
                  var res = temp__5751__auto____$1;
                  return cljs.core.conj.call(null, acc, cljs.core.assoc.call(null, malli.impl.util._error.call(null, path, in$, this$__$1, x), new cljs.core.Keyword(null, "check", "check", 1226308904), res));
                } else {
                  return acc;
                }
              }
            };
          } else {
            var validator = malli.core._validator.call(null, this$__$1);
            return function malli$core$__EQ__GT__schema_$_explain(x, in$, acc) {
              if (cljs.core.not.call(null, validator.call(null, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          }
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9376.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9376.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9376.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9376.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9376.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return null;
        };
        malli.core.t_malli$core9376.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9376.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9376.getBasis = function() {
          return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "input", "input", -2097503808, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 
          761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9364", "malli.core/t_malli$core9364", 559657686, null)], null)), new cljs.core.Symbol(null, "-\x3echecker", "-\x3echecker", 964293264, null), new cljs.core.Symbol(null, "output", "output", 534662484, null), new cljs.core.Symbol(null, "meta9365", "meta9365", 2117385110, null), new cljs.core.Symbol(null, "function-checker", "function-checker", 
          131742871, null), new cljs.core.Symbol(null, "p__9370", "p__9370", -1252606345, null), new cljs.core.Symbol(null, "vec__9373", "vec__9373", -1974764584, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "map__9371", "map__9371", 434523358, null), new cljs.core.Symbol(null, "meta9377", "meta9377", -964601734, null)], null);
        };
        malli.core.t_malli$core9376.cljs$lang$type = true;
        malli.core.t_malli$core9376.cljs$lang$ctorStr = "malli.core/t_malli$core9376";
        malli.core.t_malli$core9376.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9376");
        };
        malli.core.__GT_t_malli$core9376 = function malli$core$__EQ__GT__schema_$___GT_t_malli$core9376(form__$1, input__$1, options__$1, properties__$1, children__$2, parent__$2, __GT_checker__$1, output__$1, meta9365__$1, function_checker__$1, p__9370__$1, vec__9373__$1, cache__$1, map__9371__$2, meta9377) {
          return new malli.core.t_malli$core9376(form__$1, input__$1, options__$1, properties__$1, children__$2, parent__$2, __GT_checker__$1, output__$1, meta9365__$1, function_checker__$1, p__9370__$1, vec__9373__$1, cache__$1, map__9371__$2, meta9377);
        };
      }
      return new malli.core.t_malli$core9376(form, input, options, properties, children__$1, parent__$1, __GT_checker, output, self__.meta9365, function_checker, p__9370, vec__9373, cache, map__9371__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9364.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta9365", "meta9365", 2117385110, null)], null);
    };
    malli.core.t_malli$core9364.cljs$lang$type = true;
    malli.core.t_malli$core9364.cljs$lang$ctorStr = "malli.core/t_malli$core9364";
    malli.core.t_malli$core9364.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9364");
    };
    malli.core.__GT_t_malli$core9364 = function malli$core$__EQ__GT__schema_$___GT_t_malli$core9364(meta9365) {
      return new malli.core.t_malli$core9364(meta9365);
    };
  }
  return new malli.core.t_malli$core9364(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._function_schema = function malli$core$_function_schema(_) {
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9383 !== "undefined") {
  } else {
    malli.core.t_malli$core9383 = function(_, meta9384) {
      this._ = _;
      this.meta9384 = meta9384;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9383.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9385, meta9384__$1) {
      var self__ = this;
      var _9385__$1 = this;
      return new malli.core.t_malli$core9383(self__._, meta9384__$1);
    };
    malli.core.t_malli$core9383.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9385) {
      var self__ = this;
      var _9385__$1 = this;
      return self__.meta9384;
    };
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$_type$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return new cljs.core.Keyword(null, "function", "function", -2127255473);
    };
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(___$1, ___$2) {
      var self__ = this;
      var ___$3 = this;
      return null;
    };
    malli.core.t_malli$core9383.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, p__9386) {
      var self__ = this;
      var map__9387 = p__9386;
      var map__9387__$1 = (!(map__9387 == null) ? map__9387.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9387.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9387) : map__9387;
      var options = map__9387__$1;
      var function_checker = cljs.core.get.call(null, map__9387__$1, new cljs.core.Keyword("malli.core", "function-checker", "malli.core/function-checker", -792030936));
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, new cljs.core.Keyword(null, "function", "function", -2127255473), properties, children, 1, null);
      var children__$1 = malli.core._vmap.call(null, function(p1__9380_SHARP_) {
        return malli.core.schema.call(null, p1__9380_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      var __GT_checker = cljs.core.truth_(function_checker) ? function(p1__9381_SHARP_) {
        return function_checker.call(null, p1__9381_SHARP_, options);
      } : cljs.core.constantly.call(null, null);
      if (cljs.core.every_QMARK_.call(null, function(p1__9382_SHARP_) {
        return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), malli.core.type.call(null, p1__9382_SHARP_));
      }, children__$1)) {
      } else {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "non-function-childs", "malli.core/non-function-childs", -1591582832), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "children", "children", -940561982), children__$1], null));
      }
      malli.core._group_by_arity_BANG_.call(null, malli.core._vmap.call(null, malli.core._function_info, children__$1));
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9389 !== "undefined") {
      } else {
        malli.core.t_malli$core9389 = function(form, options, map__9387, meta9384, properties, children, parent, _, __GT_checker, function_checker, cache, p__9386, meta9390) {
          this.form = form;
          this.options = options;
          this.map__9387 = map__9387;
          this.meta9384 = meta9384;
          this.properties = properties;
          this.children = children;
          this.parent = parent;
          this._ = _;
          this.__GT_checker = __GT_checker;
          this.function_checker = function_checker;
          this.cache = cache;
          this.p__9386 = p__9386;
          this.meta9390 = meta9390;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9389.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9391, meta9390__$1) {
          var self__ = this;
          var _9391__$1 = this;
          return new malli.core.t_malli$core9389(self__.form, self__.options, self__.map__9387, self__.meta9384, self__.properties, self__.children, self__.parent, self__._, self__.__GT_checker, self__.function_checker, self__.cache, self__.p__9386, meta9390__$1);
        };
        malli.core.t_malli$core9389.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9391) {
          var self__ = this;
          var _9391__$1 = this;
          return self__.meta9390;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            var validator = function(x) {
              return checker.call(null, x) == null;
            };
            return function(x) {
              return cljs.core.ifn_QMARK_.call(null, x) && validator.call(null, x);
            };
          } else {
            return cljs.core.ifn_QMARK_;
          }
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_options$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.options;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_transformer$arity$4 = function(___$1, ___$2, ___$3, ___$4) {
          var self__ = this;
          var ___$5 = this;
          return null;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          var validator = malli.core._validator.call(null, this$__$1);
          return function(x) {
            if (cljs.core.truth_(validator.call(null, x))) {
              return x;
            } else {
              return new cljs.core.Keyword("malli.core", "invalid", "malli.core/invalid", 362080900);
            }
          };
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_properties$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_children$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.children;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_form$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          var temp__5751__auto__ = self__.__GT_checker.call(null, this$__$1);
          if (cljs.core.truth_(temp__5751__auto__)) {
            var checker = temp__5751__auto__;
            return function malli$core$_function_schema_$_explain(x, in$, acc) {
              if (!cljs.core.fn_QMARK_.call(null, x)) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                var temp__5751__auto____$1 = checker.call(null, x);
                if (cljs.core.truth_(temp__5751__auto____$1)) {
                  var res = temp__5751__auto____$1;
                  return cljs.core.conj.call(null, acc, cljs.core.assoc.call(null, malli.impl.util._error.call(null, path, in$, this$__$1, x), new cljs.core.Keyword(null, "check", "check", 1226308904), res));
                } else {
                  return acc;
                }
              }
            };
          } else {
            var validator = malli.core._validator.call(null, this$__$1);
            return function malli$core$_function_schema_$_explain(x, in$, acc) {
              if (cljs.core.not.call(null, validator.call(null, x))) {
                return cljs.core.conj.call(null, acc, malli.impl.util._error.call(null, path, in$, this$__$1, x));
              } else {
                return acc;
              }
            };
          }
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9389.prototype.malli$core$Schema$_parent$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9389.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9389.prototype.malli$core$Cached$_cache$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9389.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9389.prototype.malli$core$LensSchema$_keep$arity$1 = function(___$1) {
          var self__ = this;
          var ___$2 = this;
          return null;
        };
        malli.core.t_malli$core9389.prototype.malli$core$LensSchema$_get$arity$3 = function(___$1, key, default$) {
          var self__ = this;
          var ___$2 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9389.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9389.getBasis = function() {
          return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "map__9387", "map__9387", -587052862, null), new cljs.core.Symbol(null, "meta9384", "meta9384", -1315039290, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "children", "children", 699969545, 
          null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9383", "malli.core/t_malli$core9383", 939700339, null)], null)), new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "-\x3echecker", "-\x3echecker", 964293264, null), new cljs.core.Symbol(null, "function-checker", "function-checker", 
          131742871, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "p__9386", "p__9386", -743874053, null), new cljs.core.Symbol(null, "meta9390", "meta9390", 2023993764, null)], null);
        };
        malli.core.t_malli$core9389.cljs$lang$type = true;
        malli.core.t_malli$core9389.cljs$lang$ctorStr = "malli.core/t_malli$core9389";
        malli.core.t_malli$core9389.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9389");
        };
        malli.core.__GT_t_malli$core9389 = function malli$core$_function_schema_$___GT_t_malli$core9389(form__$1, options__$1, map__9387__$2, meta9384__$1, properties__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, function_checker__$1, cache__$1, p__9386__$1, meta9390) {
          return new malli.core.t_malli$core9389(form__$1, options__$1, map__9387__$2, meta9384__$1, properties__$1, children__$2, parent__$2, ___$1, __GT_checker__$1, function_checker__$1, cache__$1, p__9386__$1, meta9390);
        };
      }
      return new malli.core.t_malli$core9389(form, options, map__9387__$1, self__.meta9384, properties, children__$1, parent__$1, self__._, __GT_checker, function_checker, cache, p__9386, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9383.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "meta9384", "meta9384", -1315039290, null)], null);
    };
    malli.core.t_malli$core9383.cljs$lang$type = true;
    malli.core.t_malli$core9383.cljs$lang$ctorStr = "malli.core/t_malli$core9383";
    malli.core.t_malli$core9383.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9383");
    };
    malli.core.__GT_t_malli$core9383 = function malli$core$_function_schema_$___GT_t_malli$core9383(___$1, meta9384) {
      return new malli.core.t_malli$core9383(___$1, meta9384);
    };
  }
  return new malli.core.t_malli$core9383(_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core.regex_validator = function malli$core$regex_validator(schema) {
  return malli.impl.regex.validator.call(null, malli.core._regex_validator.call(null, schema));
};
malli.core.regex_explainer = function malli$core$regex_explainer(schema, path) {
  return malli.impl.regex.explainer.call(null, schema, path, malli.core._regex_explainer.call(null, schema, path));
};
malli.core.regex_parser = function malli$core$regex_parser(schema) {
  return malli.impl.regex.parser.call(null, malli.core._regex_parser.call(null, schema));
};
malli.core.regex_transformer = function malli$core$regex_transformer(schema, transformer, method, options) {
  var this_transformer = malli.core._value_transformer.call(null, transformer, schema, method, options);
  var __GT_children = malli.impl.regex.transformer.call(null, malli.core._regex_transformer.call(null, schema, transformer, method, options));
  return malli.core._intercepting.call(null, this_transformer, __GT_children);
};
malli.core._sequence_schema = function malli$core$_sequence_schema(p__9394) {
  var map__9395 = p__9394;
  var map__9395__$1 = (!(map__9395 == null) ? map__9395.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9395.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9395) : map__9395;
  var map__9396 = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738));
  var map__9396__$1 = (!(map__9396 == null) ? map__9396.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9396.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9396) : map__9396;
  var min = cljs.core.get.call(null, map__9396__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__9396__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var type = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var re_validator = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208));
  var re_explainer = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200));
  var re_parser = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564));
  var re_unparser = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079));
  var re_transformer = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461));
  var re_min_max = cljs.core.get.call(null, map__9395__$1, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9399 !== "undefined") {
  } else {
    malli.core.t_malli$core9399 = function(re_min_max, p__9394, re_explainer, min, re_parser, re_unparser, map__9396, type, map__9395, re_transformer, max, re_validator, meta9400) {
      this.re_min_max = re_min_max;
      this.p__9394 = p__9394;
      this.re_explainer = re_explainer;
      this.min = min;
      this.re_parser = re_parser;
      this.re_unparser = re_unparser;
      this.map__9396 = map__9396;
      this.type = type;
      this.map__9395 = map__9395;
      this.re_transformer = re_transformer;
      this.max = max;
      this.re_validator = re_validator;
      this.meta9400 = meta9400;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9399.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9401, meta9400__$1) {
      var self__ = this;
      var _9401__$1 = this;
      return new malli.core.t_malli$core9399(self__.re_min_max, self__.p__9394, self__.re_explainer, self__.min, self__.re_parser, self__.re_unparser, self__.map__9396, self__.type, self__.map__9395, self__.re_transformer, self__.max, self__.re_validator, meta9400__$1);
    };
    malli.core.t_malli$core9399.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9401) {
      var self__ = this;
      var _9401__$1 = this;
      return self__.meta9400;
    };
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9399.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
      var children__$1 = malli.core._vmap.call(null, function(p1__9392_SHARP_) {
        return malli.core.schema.call(null, p1__9392_SHARP_, options);
      }, children);
      var form = new cljs.core.Delay(function() {
        return malli.core._simple_form.call(null, parent__$1, properties, children__$1, malli.core._form, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9402 !== "undefined") {
      } else {
        malli.core.t_malli$core9402 = function(form, options, re_min_max, p__9394, properties, re_explainer, children, min, re_parser, parent, re_unparser, meta9400, map__9396, type, map__9395, cache, re_transformer, max, re_validator, meta9403) {
          this.form = form;
          this.options = options;
          this.re_min_max = re_min_max;
          this.p__9394 = p__9394;
          this.properties = properties;
          this.re_explainer = re_explainer;
          this.children = children;
          this.min = min;
          this.re_parser = re_parser;
          this.parent = parent;
          this.re_unparser = re_unparser;
          this.meta9400 = meta9400;
          this.map__9396 = map__9396;
          this.type = type;
          this.map__9395 = map__9395;
          this.cache = cache;
          this.re_transformer = re_transformer;
          this.max = max;
          this.re_validator = re_validator;
          this.meta9403 = meta9403;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9402.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9404, meta9403__$1) {
          var self__ = this;
          var _9404__$1 = this;
          return new malli.core.t_malli$core9402(self__.form, self__.options, self__.re_min_max, self__.p__9394, self__.properties, self__.re_explainer, self__.children, self__.min, self__.re_parser, self__.parent, self__.re_unparser, self__.meta9400, self__.map__9396, self__.type, self__.map__9395, self__.cache, self__.re_transformer, self__.max, self__.re_validator, meta9403__$1);
        };
        malli.core.t_malli$core9402.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9404) {
          var self__ = this;
          var _9404__$1 = this;
          return self__.meta9403;
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_validator.call(null, this$__$1);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_transformer.call(null, this$__$1, transformer, method, options__$1);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_indexed.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.children;
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_explainer.call(null, this$__$1, path);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._regex_unparser.call(null, this$__$1);
        };
        malli.core.t_malli$core9402.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9402.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9402.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9402.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9402.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9402.prototype.malli$core$LensSchema$_get$arity$3 = function(_, key, default$) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.get.call(null, self__.children, key, default$);
        };
        malli.core.t_malli$core9402.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_assoc_children.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_validator.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_validator, self__.children));
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(_, path) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_explainer.call(null, self__.properties, cljs.core.map_indexed.call(null, function(i, child) {
            return malli.core._regex_explainer.call(null, child, cljs.core.conj.call(null, path, i));
          }, self__.children));
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_parser.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_parser, self__.children));
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_unparser.call(null, self__.properties, malli.core._vmap.call(null, malli.core._regex_unparser, self__.children));
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(_, transformer, method, options__$1) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_transformer.call(null, self__.properties, malli.core._vmap.call(null, function(p1__9393_SHARP_) {
            return malli.core._regex_transformer.call(null, p1__9393_SHARP_, transformer, method, options__$1);
          }, self__.children));
        };
        malli.core.t_malli$core9402.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.re_min_max.call(null, self__.properties, self__.children);
        };
        malli.core.t_malli$core9402.getBasis = function() {
          return new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "p__9394", "p__9394", -701362909, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 
          373660327, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9399", "malli.core/t_malli$core9399", -1652312878, 
          null)], null)), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "meta9400", "meta9400", 831437102, null), new cljs.core.Symbol(null, "map__9396", "map__9396", 1923134543, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "map__9395", "map__9395", 1220360183, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 
          124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta9403", "meta9403", 96070712, null)], null);
        };
        malli.core.t_malli$core9402.cljs$lang$type = true;
        malli.core.t_malli$core9402.cljs$lang$ctorStr = "malli.core/t_malli$core9402";
        malli.core.t_malli$core9402.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9402");
        };
        malli.core.__GT_t_malli$core9402 = function malli$core$_sequence_schema_$___GT_t_malli$core9402(form__$1, options__$1, re_min_max__$1, p__9394__$1, properties__$1, re_explainer__$1, children__$2, min__$1, re_parser__$1, parent__$2, re_unparser__$1, meta9400__$1, map__9396__$1, type__$1, map__9395__$1, cache__$1, re_transformer__$1, max__$1, re_validator__$1, meta9403) {
          return new malli.core.t_malli$core9402(form__$1, options__$1, re_min_max__$1, p__9394__$1, properties__$1, re_explainer__$1, children__$2, min__$1, re_parser__$1, parent__$2, re_unparser__$1, meta9400__$1, map__9396__$1, type__$1, map__9395__$1, cache__$1, re_transformer__$1, max__$1, re_validator__$1, meta9403);
        };
      }
      return new malli.core.t_malli$core9402(form, options, self__.re_min_max, self__.p__9394, properties, self__.re_explainer, children__$1, self__.min, self__.re_parser, parent__$1, self__.re_unparser, self__.meta9400, self__.map__9396, self__.type, self__.map__9395, cache, self__.re_transformer, self__.max, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863)], 
      null));
    };
    malli.core.t_malli$core9399.getBasis = function() {
      return new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "p__9394", "p__9394", -701362909, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), new cljs.core.Symbol(null, "re-unparser", "re-unparser", 
      -1221492690, null), new cljs.core.Symbol(null, "map__9396", "map__9396", 1923134543, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "map__9395", "map__9395", 1220360183, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta9400", "meta9400", 
      831437102, null)], null);
    };
    malli.core.t_malli$core9399.cljs$lang$type = true;
    malli.core.t_malli$core9399.cljs$lang$ctorStr = "malli.core/t_malli$core9399";
    malli.core.t_malli$core9399.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9399");
    };
    malli.core.__GT_t_malli$core9399 = function malli$core$_sequence_schema_$___GT_t_malli$core9399(re_min_max__$1, p__9394__$1, re_explainer__$1, min__$1, re_parser__$1, re_unparser__$1, map__9396__$2, type__$1, map__9395__$2, re_transformer__$1, max__$1, re_validator__$1, meta9400) {
      return new malli.core.t_malli$core9399(re_min_max__$1, p__9394__$1, re_explainer__$1, min__$1, re_parser__$1, re_unparser__$1, map__9396__$2, type__$1, map__9395__$2, re_transformer__$1, max__$1, re_validator__$1, meta9400);
    };
  }
  return new malli.core.t_malli$core9399(re_min_max, p__9394, re_explainer, min, re_parser, re_unparser, map__9396__$1, type, map__9395__$1, re_transformer, max, re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core._sequence_entry_schema = function malli$core$_sequence_entry_schema(p__9405) {
  var map__9406 = p__9405;
  var map__9406__$1 = (!(map__9406 == null) ? map__9406.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9406.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9406) : map__9406;
  var opts = map__9406__$1;
  var map__9407 = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738));
  var map__9407__$1 = (!(map__9407 == null) ? map__9407.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9407.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9407) : map__9407;
  var min = cljs.core.get.call(null, map__9407__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max = cljs.core.get.call(null, map__9407__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var type = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var re_validator = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208));
  var re_explainer = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200));
  var re_parser = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564));
  var re_unparser = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079));
  var re_transformer = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461));
  var re_min_max = cljs.core.get.call(null, map__9406__$1, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707));
  if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9410 !== "undefined") {
  } else {
    malli.core.t_malli$core9410 = function(re_min_max, p__9405, re_explainer, min, re_parser, re_unparser, type, map__9407, re_transformer, max, opts, map__9406, re_validator, meta9411) {
      this.re_min_max = re_min_max;
      this.p__9405 = p__9405;
      this.re_explainer = re_explainer;
      this.min = min;
      this.re_parser = re_parser;
      this.re_unparser = re_unparser;
      this.type = type;
      this.map__9407 = map__9407;
      this.re_transformer = re_transformer;
      this.max = max;
      this.opts = opts;
      this.map__9406 = map__9406;
      this.re_validator = re_validator;
      this.meta9411 = meta9411;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    malli.core.t_malli$core9410.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9412, meta9411__$1) {
      var self__ = this;
      var _9412__$1 = this;
      return new malli.core.t_malli$core9410(self__.re_min_max, self__.p__9405, self__.re_explainer, self__.min, self__.re_parser, self__.re_unparser, self__.type, self__.map__9407, self__.re_transformer, self__.max, self__.opts, self__.map__9406, self__.re_validator, meta9411__$1);
    };
    malli.core.t_malli$core9410.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9412) {
      var self__ = this;
      var _9412__$1 = this;
      return self__.meta9411;
    };
    malli.core.t_malli$core9410.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9410.prototype.malli$core$AST$_from_ast$arity$3 = function(parent, ast, options) {
      var self__ = this;
      var parent__$1 = this;
      return malli.core._from_entry_ast.call(null, parent__$1, ast, options);
    };
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$ = cljs.core.PROTOCOL_SENTINEL;
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$_type$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.type;
    };
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$_type_properties$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return null;
    };
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$_properties_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$_children_schema$arity$2 = function(_, ___$1) {
      var self__ = this;
      var ___$2 = this;
      return null;
    };
    malli.core.t_malli$core9410.prototype.malli$core$IntoSchema$_into_schema$arity$4 = function(parent, properties, children, options) {
      var self__ = this;
      var parent__$1 = this;
      malli.core._check_children_BANG_.call(null, self__.type, properties, children, self__.min, self__.max);
      var entry_parser = malli.core._create_entry_parser.call(null, children, self__.opts, options);
      var form = new cljs.core.Delay(function() {
        return malli.core._create_entry_form.call(null, parent__$1, properties, entry_parser, options);
      }, null);
      var cache = malli.core._create_cache.call(null, options);
      if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9413 !== "undefined") {
      } else {
        malli.core.t_malli$core9413 = function(form, options, re_min_max, p__9405, properties, re_explainer, children, min, re_parser, meta9411, entry_parser, parent, re_unparser, type, map__9407, cache, re_transformer, max, opts, map__9406, re_validator, meta9414) {
          this.form = form;
          this.options = options;
          this.re_min_max = re_min_max;
          this.p__9405 = p__9405;
          this.properties = properties;
          this.re_explainer = re_explainer;
          this.children = children;
          this.min = min;
          this.re_parser = re_parser;
          this.meta9411 = meta9411;
          this.entry_parser = entry_parser;
          this.parent = parent;
          this.re_unparser = re_unparser;
          this.type = type;
          this.map__9407 = map__9407;
          this.cache = cache;
          this.re_transformer = re_transformer;
          this.max = max;
          this.opts = opts;
          this.map__9406 = map__9406;
          this.re_validator = re_validator;
          this.meta9414 = meta9414;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
          this.cljs$lang$protocol_mask$partition1$ = 0;
        };
        malli.core.t_malli$core9413.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9415, meta9414__$1) {
          var self__ = this;
          var _9415__$1 = this;
          return new malli.core.t_malli$core9413(self__.form, self__.options, self__.re_min_max, self__.p__9405, self__.properties, self__.re_explainer, self__.children, self__.min, self__.re_parser, self__.meta9411, self__.entry_parser, self__.parent, self__.re_unparser, self__.type, self__.map__9407, self__.cache, self__.re_transformer, self__.max, self__.opts, self__.map__9406, self__.re_validator, meta9414__$1);
        };
        malli.core.t_malli$core9413.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9415) {
          var self__ = this;
          var _9415__$1 = this;
          return self__.meta9414;
        };
        malli.core.t_malli$core9413.prototype.malli$core$AST$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$AST$_to_ast$arity$2 = function(this$, _) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._entry_ast.call(null, this$__$1, malli.core._entry_keyset.call(null, self__.entry_parser));
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_validator.call(null, this$__$1);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_options$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.options;
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_transformer.call(null, this$__$1, transformer, method, options__$1);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_walk$arity$4 = function(this$, walker, path, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._walk_entries.call(null, this$__$1, walker, path, options__$1);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_parser.call(null, this$__$1);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_properties$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.properties;
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_children$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_children.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_form$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.deref.call(null, self__.form);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core.regex_explainer.call(null, this$__$1, path);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._regex_unparser.call(null, this$__$1);
        };
        malli.core.t_malli$core9413.prototype.malli$core$Schema$_parent$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.parent;
        };
        malli.core.t_malli$core9413.prototype.malli$core$Cached$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$Cached$_cache$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.cache;
        };
        malli.core.t_malli$core9413.prototype.malli$core$LensSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$LensSchema$_keep$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9413.prototype.malli$core$LensSchema$_get$arity$3 = function(this$, key, default$) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._get_entries.call(null, this$__$1, key, default$);
        };
        malli.core.t_malli$core9413.prototype.malli$core$LensSchema$_set$arity$3 = function(this$, key, value) {
          var self__ = this;
          var this$__$1 = this;
          return malli.core._set_entries.call(null, this$__$1, key, value);
        };
        malli.core.t_malli$core9413.prototype.malli$core$EntrySchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$EntrySchema$_entries$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return malli.core._entry_entries.call(null, self__.entry_parser);
        };
        malli.core.t_malli$core9413.prototype.malli$core$EntrySchema$_entry_parser$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.entry_parser;
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$ = cljs.core.PROTOCOL_SENTINEL;
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_op_QMARK_$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return true;
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_validator$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_validator.call(null, self__.properties, malli.core._vmap.call(null, function(p__9416) {
            var vec__9417 = p__9416;
            var k = cljs.core.nth.call(null, vec__9417, 0, null);
            var _ = cljs.core.nth.call(null, vec__9417, 1, null);
            var s = cljs.core.nth.call(null, vec__9417, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_validator.call(null, s)], null);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_explainer$arity$2 = function(this$, path) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_explainer.call(null, self__.properties, malli.core._vmap.call(null, function(p__9420) {
            var vec__9421 = p__9420;
            var k = cljs.core.nth.call(null, vec__9421, 0, null);
            var _ = cljs.core.nth.call(null, vec__9421, 1, null);
            var s = cljs.core.nth.call(null, vec__9421, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_explainer.call(null, s, cljs.core.conj.call(null, path, k))], null);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_parser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_parser.call(null, self__.properties, malli.core._vmap.call(null, function(p__9424) {
            var vec__9425 = p__9424;
            var k = cljs.core.nth.call(null, vec__9425, 0, null);
            var _ = cljs.core.nth.call(null, vec__9425, 1, null);
            var s = cljs.core.nth.call(null, vec__9425, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_parser.call(null, s)], null);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_unparser$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_unparser.call(null, self__.properties, malli.core._vmap.call(null, function(p__9428) {
            var vec__9429 = p__9428;
            var k = cljs.core.nth.call(null, vec__9429, 0, null);
            var _ = cljs.core.nth.call(null, vec__9429, 1, null);
            var s = cljs.core.nth.call(null, vec__9429, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_unparser.call(null, s)], null);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_transformer$arity$4 = function(this$, transformer, method, options__$1) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_transformer.call(null, self__.properties, malli.core._vmap.call(null, function(p__9432) {
            var vec__9433 = p__9432;
            var k = cljs.core.nth.call(null, vec__9433, 0, null);
            var _ = cljs.core.nth.call(null, vec__9433, 1, null);
            var s = cljs.core.nth.call(null, vec__9433, 2, null);
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._regex_transformer.call(null, s, transformer, method, options__$1)], null);
          }, malli.core._children.call(null, this$__$1)));
        };
        malli.core.t_malli$core9413.prototype.malli$core$RegexSchema$_regex_min_max$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return self__.re_min_max.call(null, self__.properties, malli.core._children.call(null, this$__$1));
        };
        malli.core.t_malli$core9413.getBasis = function() {
          return new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "form", "form", 16469056, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "p__9405", "p__9405", 701595847, null), new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 
          373660327, null), new cljs.core.Symbol(null, "children", "children", 699969545, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), new cljs.core.Symbol(null, "meta9411", "meta9411", -577931605, null), new cljs.core.Symbol(null, "entry-parser", "entry-parser", -1698599125, null), cljs.core.with_meta(new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.PersistentArrayMap(null, 
          1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("malli.core", "t_malli$core9410", "malli.core/t_malli$core9410", 879535742, null)], null)), new cljs.core.Symbol(null, "re-unparser", "re-unparser", -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "map__9407", "map__9407", -1745529544, null), new cljs.core.Symbol(null, "cache", "cache", 403508473, null), new cljs.core.Symbol(null, "re-transformer", 
          "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "map__9406", "map__9406", 731269567, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, null), new cljs.core.Symbol(null, "meta9414", "meta9414", 36046319, null)], null);
        };
        malli.core.t_malli$core9413.cljs$lang$type = true;
        malli.core.t_malli$core9413.cljs$lang$ctorStr = "malli.core/t_malli$core9413";
        malli.core.t_malli$core9413.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
          return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9413");
        };
        malli.core.__GT_t_malli$core9413 = function malli$core$_sequence_entry_schema_$___GT_t_malli$core9413(form__$1, options__$1, re_min_max__$1, p__9405__$1, properties__$1, re_explainer__$1, children__$1, min__$1, re_parser__$1, meta9411__$1, entry_parser__$1, parent__$2, re_unparser__$1, type__$1, map__9407__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, map__9406__$1, re_validator__$1, meta9414) {
          return new malli.core.t_malli$core9413(form__$1, options__$1, re_min_max__$1, p__9405__$1, properties__$1, re_explainer__$1, children__$1, min__$1, re_parser__$1, meta9411__$1, entry_parser__$1, parent__$2, re_unparser__$1, type__$1, map__9407__$1, cache__$1, re_transformer__$1, max__$1, opts__$1, map__9406__$1, re_validator__$1, meta9414);
        };
      }
      return new malli.core.t_malli$core9413(form, options, self__.re_min_max, self__.p__9405, properties, self__.re_explainer, children, self__.min, self__.re_parser, self__.meta9411, entry_parser, parent__$1, self__.re_unparser, self__.type, self__.map__9407, cache, self__.re_transformer, self__.max, self__.opts, self__.map__9406, self__.re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "schema", 
      "malli.core/schema", -1780373863)], null));
    };
    malli.core.t_malli$core9410.getBasis = function() {
      return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "re-min-max", "re-min-max", -1633564062, null), new cljs.core.Symbol(null, "p__9405", "p__9405", 701595847, null), new cljs.core.Symbol(null, "re-explainer", "re-explainer", 373660327, null), new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.Symbol(null, "re-parser", "re-parser", 410905963, null), new cljs.core.Symbol(null, "re-unparser", "re-unparser", 
      -1221492690, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "map__9407", "map__9407", -1745529544, null), new cljs.core.Symbol(null, "re-transformer", "re-transformer", 124163066, null), new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.Symbol(null, "opts", "opts", 1795607228, null), new cljs.core.Symbol(null, "map__9406", "map__9406", 731269567, null), new cljs.core.Symbol(null, "re-validator", "re-validator", 1460156319, 
      null), new cljs.core.Symbol(null, "meta9411", "meta9411", -577931605, null)], null);
    };
    malli.core.t_malli$core9410.cljs$lang$type = true;
    malli.core.t_malli$core9410.cljs$lang$ctorStr = "malli.core/t_malli$core9410";
    malli.core.t_malli$core9410.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9410");
    };
    malli.core.__GT_t_malli$core9410 = function malli$core$_sequence_entry_schema_$___GT_t_malli$core9410(re_min_max__$1, p__9405__$1, re_explainer__$1, min__$1, re_parser__$1, re_unparser__$1, type__$1, map__9407__$2, re_transformer__$1, max__$1, opts__$1, map__9406__$2, re_validator__$1, meta9411) {
      return new malli.core.t_malli$core9410(re_min_max__$1, p__9405__$1, re_explainer__$1, min__$1, re_parser__$1, re_unparser__$1, type__$1, map__9407__$2, re_transformer__$1, max__$1, opts__$1, map__9406__$2, re_validator__$1, meta9411);
    };
  }
  return new malli.core.t_malli$core9410(re_min_max, p__9405, re_explainer, min, re_parser, re_unparser, type, map__9407__$1, re_transformer, max, opts, map__9406__$1, re_validator, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("malli.core", "into-schema", "malli.core/into-schema", 1522165759)], null));
};
malli.core.into_schema_QMARK_ = function malli$core$into_schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$IntoSchema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.into_schema = function malli$core$into_schema(var_args) {
  var G__9439 = arguments.length;
  switch(G__9439) {
    case 3:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.into_schema.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$3 = function(type, properties, children) {
  return malli.core.into_schema.call(null, type, properties, children, null);
};
malli.core.into_schema.cljs$core$IFn$_invoke$arity$4 = function(type, properties, children, options) {
  var properties__$1 = cljs.core.truth_(properties) ? cljs.core.count.call(null, properties) > 0 ? properties : null : null;
  var r = cljs.core.truth_(properties__$1) ? properties__$1.call(null, new cljs.core.Keyword(null, "registry", "registry", 1021159018)) : null;
  var options__$1 = cljs.core.truth_(r) ? malli.core._update.call(null, options, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(p1__9437_SHARP_) {
    return malli.registry.composite_registry.call(null, r, function() {
      var or__4185__auto__ = p1__9437_SHARP_;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return malli.core._registry.call(null, options);
      }
    }());
  }) : options;
  var properties__$2 = cljs.core.truth_(r) ? cljs.core.assoc.call(null, properties__$1, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, cljs.core.identity)) : properties__$1;
  return malli.core._into_schema.call(null, malli.core._lookup_BANG_.call(null, type, malli.core.into_schema_QMARK_, options__$1), properties__$2, children, options__$1);
};
malli.core.into_schema.cljs$lang$maxFixedArity = 4;
malli.core.type = function malli$core$type(var_args) {
  var G__9442 = arguments.length;
  switch(G__9442) {
    case 1:
      return malli.core.type.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type.call(null, _QMARK_schema, null);
};
malli.core.type.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type.call(null, malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type.cljs$lang$maxFixedArity = 2;
malli.core.type_properties = function malli$core$type_properties(var_args) {
  var G__9445 = arguments.length;
  switch(G__9445) {
    case 1:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.type_properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.type_properties.call(null, _QMARK_schema, null);
};
malli.core.type_properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._type_properties.call(null, malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options)));
};
malli.core.type_properties.cljs$lang$maxFixedArity = 2;
malli.core.properties_schema = function malli$core$properties_schema(var_args) {
  var G__9448 = arguments.length;
  switch(G__9448) {
    case 1:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties_schema.call(null, _QMARK_schema, null);
};
malli.core.properties_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
    var G__9449 = _QMARK_schema;
    var G__9449__$1 = G__9449 == null ? null : malli.core._properties_schema.call(null, G__9449, options);
    if (G__9449__$1 == null) {
      return null;
    } else {
      return malli.core.schema.call(null, G__9449__$1);
    }
  } else {
    var G__9450 = malli.core.schema.call(null, _QMARK_schema, options);
    var G__9450__$1 = G__9450 == null ? null : malli.core._parent.call(null, G__9450);
    if (G__9450__$1 == null) {
      return null;
    } else {
      return malli.core._properties_schema.call(null, G__9450__$1, options);
    }
  }
};
malli.core.properties_schema.cljs$lang$maxFixedArity = 2;
malli.core.children_schema = function malli$core$children_schema(var_args) {
  var G__9453 = arguments.length;
  switch(G__9453) {
    case 1:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children_schema.call(null, _QMARK_schema, null);
};
malli.core.children_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
    var G__9454 = _QMARK_schema;
    var G__9454__$1 = G__9454 == null ? null : malli.core._children_schema.call(null, G__9454, options);
    if (G__9454__$1 == null) {
      return null;
    } else {
      return malli.core.schema.call(null, G__9454__$1);
    }
  } else {
    var G__9455 = malli.core.schema.call(null, _QMARK_schema, options);
    var G__9455__$1 = G__9455 == null ? null : malli.core._parent.call(null, G__9455);
    if (G__9455__$1 == null) {
      return null;
    } else {
      return malli.core._children_schema.call(null, G__9455__$1, options);
    }
  }
};
malli.core.children_schema.cljs$lang$maxFixedArity = 2;
malli.core.schema_QMARK_ = function malli$core$schema_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.malli$core$Schema$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
malli.core.schema = function malli$core$schema(var_args) {
  var G__9459 = arguments.length;
  switch(G__9459) {
    case 1:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.schema.call(null, _QMARK_schema, null);
};
malli.core.schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    if (malli.core.schema_QMARK_.call(null, _QMARK_schema)) {
      return _QMARK_schema;
    } else {
      if (malli.core.into_schema_QMARK_.call(null, _QMARK_schema)) {
        return malli.core._into_schema.call(null, _QMARK_schema, null, null, options);
      } else {
        if (cljs.core.vector_QMARK_.call(null, _QMARK_schema)) {
          var v = _QMARK_schema;
          var t = cljs.core.nth.call(null, v, 0);
          var n = cljs.core.count.call(null, v);
          var _QMARK_p = n > 1 ? cljs.core.nth.call(null, v, 1) : null;
          if (_QMARK_p == null || cljs.core.map_QMARK_.call(null, _QMARK_p)) {
            return malli.core.into_schema.call(null, t, _QMARK_p, 2 < n ? cljs.core.subvec.call(null, _QMARK_schema, 2, n) : null, options);
          } else {
            return malli.core.into_schema.call(null, t, null, 1 < n ? cljs.core.subvec.call(null, _QMARK_schema, 1, n) : null, options);
          }
        } else {
          var temp__5751__auto__ = malli.core._reference_QMARK_.call(null, _QMARK_schema) ? malli.core._lookup.call(null, _QMARK_schema, options) : false;
          if (cljs.core.truth_(temp__5751__auto__)) {
            var _QMARK_schema_SINGLEQUOTE_ = temp__5751__auto__;
            return malli.core._pointer.call(null, _QMARK_schema, malli.core.schema.call(null, _QMARK_schema_SINGLEQUOTE_, options), options);
          } else {
            var G__9461 = malli.core._lookup_BANG_.call(null, _QMARK_schema, null, options);
            var G__9462 = options;
            _QMARK_schema = G__9461;
            options = G__9462;
            continue;
          }
        }
      }
    }
    break;
  }
};
malli.core.schema.cljs$lang$maxFixedArity = 2;
malli.core.form = function malli$core$form(var_args) {
  var G__9464 = arguments.length;
  switch(G__9464) {
    case 1:
      return malli.core.form.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.form.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.form.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.form.call(null, _QMARK_schema, null);
};
malli.core.form.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._form.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.form.cljs$lang$maxFixedArity = 2;
malli.core.properties = function malli$core$properties(var_args) {
  var G__9467 = arguments.length;
  switch(G__9467) {
    case 1:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.properties.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.properties.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.properties.call(null, _QMARK_schema, null);
};
malli.core.properties.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._properties.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.properties.cljs$lang$maxFixedArity = 2;
malli.core.options = function malli$core$options(var_args) {
  var G__9470 = arguments.length;
  switch(G__9470) {
    case 1:
      return malli.core.options.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.options.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.options.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.options.call(null, _QMARK_schema, null);
};
malli.core.options.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._options.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.options.cljs$lang$maxFixedArity = 2;
malli.core.children = function malli$core$children(var_args) {
  var G__9473 = arguments.length;
  switch(G__9473) {
    case 1:
      return malli.core.children.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.children.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.children.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.children.call(null, _QMARK_schema, null);
};
malli.core.children.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  return malli.core._children.call(null, schema);
};
malli.core.children.cljs$lang$maxFixedArity = 2;
malli.core.parent = function malli$core$parent(var_args) {
  var G__9476 = arguments.length;
  switch(G__9476) {
    case 1:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parent.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parent.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parent.call(null, _QMARK_schema, null);
};
malli.core.parent.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._parent.call(null, malli.core.schema.call(null, _QMARK_schema, options));
};
malli.core.parent.cljs$lang$maxFixedArity = 2;
malli.core.walk = function malli$core$walk(var_args) {
  var G__9479 = arguments.length;
  switch(G__9479) {
    case 2:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.walk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.walk.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, f) {
  return malli.core.walk.call(null, _QMARK_schema, f, null);
};
malli.core.walk.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, f, options) {
  return malli.core._walk.call(null, malli.core.schema.call(null, _QMARK_schema, options), function() {
    if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core.t_malli$core9480 !== "undefined") {
    } else {
      malli.core.t_malli$core9480 = function(_QMARK_schema, f, options, meta9481) {
        this._QMARK_schema = _QMARK_schema;
        this.f = f;
        this.options = options;
        this.meta9481 = meta9481;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.core.t_malli$core9480.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9482, meta9481__$1) {
        var self__ = this;
        var _9482__$1 = this;
        return new malli.core.t_malli$core9480(self__._QMARK_schema, self__.f, self__.options, meta9481__$1);
      };
      malli.core.t_malli$core9480.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9482) {
        var self__ = this;
        var _9482__$1 = this;
        return self__.meta9481;
      };
      malli.core.t_malli$core9480.prototype.malli$core$Walker$ = cljs.core.PROTOCOL_SENTINEL;
      malli.core.t_malli$core9480.prototype.malli$core$Walker$_accept$arity$4 = function(_, s, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        return s;
      };
      malli.core.t_malli$core9480.prototype.malli$core$Walker$_inner$arity$4 = function(this$, s, p, options__$1) {
        var self__ = this;
        var this$__$1 = this;
        return malli.core._walk.call(null, s, this$__$1, p, options__$1);
      };
      malli.core.t_malli$core9480.prototype.malli$core$Walker$_outer$arity$5 = function(_, s, p, c, options__$1) {
        var self__ = this;
        var ___$1 = this;
        return self__.f.call(null, s, p, c, options__$1);
      };
      malli.core.t_malli$core9480.getBasis = function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?schema", "?schema", -271534072, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "options", "options", 1740170016, null), new cljs.core.Symbol(null, "meta9481", "meta9481", 1938493282, null)], null);
      };
      malli.core.t_malli$core9480.cljs$lang$type = true;
      malli.core.t_malli$core9480.cljs$lang$ctorStr = "malli.core/t_malli$core9480";
      malli.core.t_malli$core9480.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
        return cljs.core._write.call(null, writer__4429__auto__, "malli.core/t_malli$core9480");
      };
      malli.core.__GT_t_malli$core9480 = function malli$core$__GT_t_malli$core9480(_QMARK_schema__$1, f__$1, options__$1, meta9481) {
        return new malli.core.t_malli$core9480(_QMARK_schema__$1, f__$1, options__$1, meta9481);
      };
    }
    return new malli.core.t_malli$core9480(_QMARK_schema, f, options, cljs.core.PersistentArrayMap.EMPTY);
  }(), cljs.core.PersistentVector.EMPTY, options);
};
malli.core.walk.cljs$lang$maxFixedArity = 3;
malli.core.validator = function malli$core$validator(var_args) {
  var G__9485 = arguments.length;
  switch(G__9485) {
    case 1:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.validator.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validator.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.validator.call(null, _QMARK_schema, null);
};
malli.core.validator.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "validator", "validator", -1966190681), malli.core._validator);
};
malli.core.validator.cljs$lang$maxFixedArity = 2;
malli.core.validate = function malli$core$validate(var_args) {
  var G__9488 = arguments.length;
  switch(G__9488) {
    case 2:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.validate.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.validate.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.validate.call(null, _QMARK_schema, value, null);
};
malli.core.validate.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.validator.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.validate.cljs$lang$maxFixedArity = 3;
malli.core.explainer = function malli$core$explainer(var_args) {
  var G__9492 = arguments.length;
  switch(G__9492) {
    case 1:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.explainer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.explainer.call(null, _QMARK_schema, null);
};
malli.core.explainer.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema_SINGLEQUOTE_ = malli.core.schema.call(null, _QMARK_schema, options);
  var explainer_SINGLEQUOTE_ = malli.core._cached.call(null, schema_SINGLEQUOTE_, new cljs.core.Keyword(null, "explainer", "explainer", -2002221924), function(p1__9490_SHARP_) {
    return malli.core._explainer.call(null, p1__9490_SHARP_, cljs.core.PersistentVector.EMPTY);
  });
  return function() {
    var malli$core$explainer = null;
    var malli$core$explainer__1 = function(value) {
      return malli$core$explainer.call(null, value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
    };
    var malli$core$explainer__3 = function(value, in$, acc) {
      var temp__5753__auto__ = cljs.core.seq.call(null, explainer_SINGLEQUOTE_.call(null, value, in$, acc));
      if (temp__5753__auto__) {
        var errors = temp__5753__auto__;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema_SINGLEQUOTE_, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "errors", "errors", -908790718), errors], null);
      } else {
        return null;
      }
    };
    malli$core$explainer = function(value, in$, acc) {
      switch(arguments.length) {
        case 1:
          return malli$core$explainer__1.call(this, value);
        case 3:
          return malli$core$explainer__3.call(this, value, in$, acc);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    malli$core$explainer.cljs$core$IFn$_invoke$arity$1 = malli$core$explainer__1;
    malli$core$explainer.cljs$core$IFn$_invoke$arity$3 = malli$core$explainer__3;
    return malli$core$explainer;
  }();
};
malli.core.explainer.cljs$lang$maxFixedArity = 2;
malli.core.explain = function malli$core$explain(var_args) {
  var G__9495 = arguments.length;
  switch(G__9495) {
    case 2:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.explain.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.explain.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.explain.call(null, _QMARK_schema, value, null);
};
malli.core.explain.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.explainer.call(null, _QMARK_schema, options).call(null, value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY);
};
malli.core.explain.cljs$lang$maxFixedArity = 3;
malli.core.parser = function malli$core$parser(var_args) {
  var G__9498 = arguments.length;
  switch(G__9498) {
    case 1:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.parser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.parser.call(null, _QMARK_schema, null);
};
malli.core.parser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "parser", "parser", -1543495310), malli.core._parser);
};
malli.core.parser.cljs$lang$maxFixedArity = 2;
malli.core.parse = function malli$core$parse(var_args) {
  var G__9501 = arguments.length;
  switch(G__9501) {
    case 2:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.parse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.parse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.parse.call(null, _QMARK_schema, value, null);
};
malli.core.parse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.parser.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.parse.cljs$lang$maxFixedArity = 3;
malli.core.unparser = function malli$core$unparser(var_args) {
  var G__9504 = arguments.length;
  switch(G__9504) {
    case 1:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.unparser.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.unparser.call(null, _QMARK_schema, null);
};
malli.core.unparser.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  return malli.core._cached.call(null, malli.core.schema.call(null, _QMARK_schema, options), new cljs.core.Keyword(null, "unparser", "unparser", 1801459433), malli.core._unparser);
};
malli.core.unparser.cljs$lang$maxFixedArity = 2;
malli.core.unparse = function malli$core$unparse(var_args) {
  var G__9507 = arguments.length;
  switch(G__9507) {
    case 2:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.unparse.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, value) {
  return malli.core.unparse.call(null, _QMARK_schema, value, null);
};
malli.core.unparse.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, options) {
  return malli.core.unparser.call(null, _QMARK_schema, options).call(null, value);
};
malli.core.unparse.cljs$lang$maxFixedArity = 3;
malli.core.decoder = function malli$core$decoder(var_args) {
  var G__9510 = arguments.length;
  switch(G__9510) {
    case 2:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.decoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.decoder.call(null, _QMARK_schema, null, t);
};
malli.core.decoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4185__auto__ = malli.core._transformer.call(null, malli.core.schema.call(null, _QMARK_schema, options), malli.core._into_transformer.call(null, t), new cljs.core.Keyword(null, "decode", "decode", -1306165281), options);
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.decoder.cljs$lang$maxFixedArity = 3;
malli.core.decode = function malli$core$decode(var_args) {
  var G__9513 = arguments.length;
  switch(G__9513) {
    case 3:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.decode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.decode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.decode.call(null, _QMARK_schema, value, null, t);
};
malli.core.decode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5751__auto__ = malli.core.decoder.call(null, _QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var transform = temp__5751__auto__;
    return transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.decode.cljs$lang$maxFixedArity = 4;
malli.core.encoder = function malli$core$encoder(var_args) {
  var G__9516 = arguments.length;
  switch(G__9516) {
    case 2:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core.encoder.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, t) {
  return malli.core.encoder.call(null, _QMARK_schema, null, t);
};
malli.core.encoder.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, options, t) {
  var or__4185__auto__ = malli.core._transformer.call(null, malli.core.schema.call(null, _QMARK_schema, options), malli.core._into_transformer.call(null, t), new cljs.core.Keyword(null, "encode", "encode", -1753429702), options);
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.identity;
  }
};
malli.core.encoder.cljs$lang$maxFixedArity = 3;
malli.core.encode = function malli$core$encode(var_args) {
  var G__9519 = arguments.length;
  switch(G__9519) {
    case 3:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return malli.core.encode.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.encode.cljs$core$IFn$_invoke$arity$3 = function(_QMARK_schema, value, t) {
  return malli.core.encode.call(null, _QMARK_schema, value, null, t);
};
malli.core.encode.cljs$core$IFn$_invoke$arity$4 = function(_QMARK_schema, value, options, t) {
  var temp__5751__auto__ = malli.core.encoder.call(null, _QMARK_schema, options, t);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var transform = temp__5751__auto__;
    return transform.call(null, value);
  } else {
    return value;
  }
};
malli.core.encode.cljs$lang$maxFixedArity = 4;
malli.core.entries = function malli$core$entries(var_args) {
  var G__9522 = arguments.length;
  switch(G__9522) {
    case 1:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.entries.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.entries.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.entries.call(null, _QMARK_schema, null);
};
malli.core.entries.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var temp__5753__auto__ = malli.core.schema.call(null, _QMARK_schema, options);
  if (cljs.core.truth_(temp__5753__auto__)) {
    var schema = temp__5753__auto__;
    if (malli.core._entry_schema_QMARK_.call(null, schema)) {
      return malli.core._entries.call(null, schema);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
malli.core.entries.cljs$lang$maxFixedArity = 2;
malli.core.deref = function malli$core$deref(var_args) {
  var G__9525 = arguments.length;
  switch(G__9525) {
    case 1:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref.call(null, _QMARK_schema, null);
};
malli.core.deref.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var schema = malli.core.schema.call(null, _QMARK_schema, options);
  var G__9526 = schema;
  if (malli.core._ref_schema_QMARK_.call(null, schema)) {
    return malli.core._deref.call(null, G__9526);
  } else {
    return G__9526;
  }
};
malli.core.deref.cljs$lang$maxFixedArity = 2;
malli.core.deref_all = function malli$core$deref_all(var_args) {
  var G__9529 = arguments.length;
  switch(G__9529) {
    case 1:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.deref_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.deref_all.call(null, _QMARK_schema, null);
};
malli.core.deref_all.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  while (true) {
    var schema = malli.core.deref.call(null, _QMARK_schema, options);
    var G__9530 = schema;
    if (malli.core._ref_schema_QMARK_.call(null, schema)) {
      var G__9532 = G__9530;
      var G__9533 = options;
      _QMARK_schema = G__9532;
      options = G__9533;
      continue;
    } else {
      return G__9530;
    }
    break;
  }
};
malli.core.deref_all.cljs$lang$maxFixedArity = 2;
malli.core.from_ast = function malli$core$from_ast(var_args) {
  var G__9538 = arguments.length;
  switch(G__9538) {
    case 1:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.from_ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_ast) {
  return malli.core.from_ast.call(null, _QMARK_ast, null);
};
malli.core.from_ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_ast, options) {
  if (malli.core.schema_QMARK_.call(null, _QMARK_ast)) {
    return _QMARK_ast;
  } else {
    if (cljs.core.map_QMARK_.call(null, _QMARK_ast)) {
      var temp__5751__auto__ = malli.core._lookup.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(_QMARK_ast), options);
      if (cljs.core.truth_(temp__5751__auto__)) {
        var s = temp__5751__auto__;
        var r = function() {
          var temp__5753__auto__ = (new cljs.core.Keyword(null, "registry", "registry", 1021159018)).cljs$core$IFn$_invoke$arity$1(_QMARK_ast);
          if (cljs.core.truth_(temp__5753__auto__)) {
            var r = temp__5753__auto__;
            return malli.core._delayed_registry.call(null, r, malli.core.from_ast);
          } else {
            return null;
          }
        }();
        var options__$1 = function() {
          var G__9539 = options;
          if (cljs.core.truth_(r)) {
            return malli.core._update.call(null, G__9539, new cljs.core.Keyword(null, "registry", "registry", 1021159018), function(p1__9534_SHARP_) {
              return malli.registry.composite_registry.call(null, r, function() {
                var or__4185__auto__ = p1__9534_SHARP_;
                if (cljs.core.truth_(or__4185__auto__)) {
                  return or__4185__auto__;
                } else {
                  return malli.core._registry.call(null, options);
                }
              }());
            });
          } else {
            return G__9539;
          }
        }();
        var ast = function() {
          var G__9540 = _QMARK_ast;
          if (cljs.core.truth_(r)) {
            return malli.core._update.call(null, G__9540, new cljs.core.Keyword(null, "properties", "properties", 685819552), function(p1__9535_SHARP_) {
              return cljs.core.assoc.call(null, p1__9535_SHARP_, new cljs.core.Keyword(null, "registry", "registry", 1021159018), malli.core._property_registry.call(null, r, options__$1, cljs.core.identity));
            });
          } else {
            return G__9540;
          }
        }();
        if (malli.core.into_schema_QMARK_.call(null, s) && malli.core._ast_QMARK_.call(null, s)) {
          return malli.core._from_ast.call(null, s, ast, options__$1);
        } else {
          if (malli.core.into_schema_QMARK_.call(null, s)) {
            return malli.core._into_schema.call(null, s, (new cljs.core.Keyword(null, "properties", "properties", 685819552)).cljs$core$IFn$_invoke$arity$1(ast), malli.core._vmap.call(null, function(p1__9536_SHARP_) {
              return malli.core.from_ast.call(null, p1__9536_SHARP_, options__$1);
            }, (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(ast)), options__$1);
          } else {
            return s;
          }
        }
      } else {
        return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ast", "malli.core/invalid-ast", -1822979859), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ast", "ast", -860334068), _QMARK_ast], null));
      }
    } else {
      return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-ast", "malli.core/invalid-ast", -1822979859), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ast", "ast", -860334068), _QMARK_ast], null));
    }
  }
};
malli.core.from_ast.cljs$lang$maxFixedArity = 2;
malli.core.ast = function malli$core$ast(var_args) {
  var G__9544 = arguments.length;
  switch(G__9544) {
    case 1:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.ast.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.ast.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.ast.call(null, _QMARK_schema, null);
};
malli.core.ast.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.call(null, _QMARK_schema, options);
  if (malli.core._ast_QMARK_.call(null, s)) {
    return malli.core._to_ast.call(null, s, options);
  } else {
    var c = malli.core._children.call(null, s);
    return malli.core._ast.call(null, function() {
      var G__9545 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), malli.core.type.call(null, s)], null);
      if (cljs.core.truth_(c)) {
        return cljs.core.assoc.call(null, G__9545, new cljs.core.Keyword(null, "children", "children", -940561982), malli.core._vmap.call(null, function(p1__9542_SHARP_) {
          return malli.core.ast.call(null, p1__9542_SHARP_, options);
        }, c));
      } else {
        return G__9545;
      }
    }(), malli.core._properties.call(null, s), malli.core._options.call(null, s));
  }
};
malli.core.ast.cljs$lang$maxFixedArity = 2;
malli.core._default_sci_options = function malli$core$_default_sci_options() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preset", "preset", 777387345), new cljs.core.Keyword(null, "termination-safe", "termination-safe", -1845225130), new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "malli.core", "malli.core", -2051169970, null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null, "properties", "properties", -1968616217, null), malli.core.properties, 
  new cljs.core.Symbol(null, "type", "type", -1480165421, null), malli.core.type, new cljs.core.Symbol(null, "children", "children", 699969545, null), malli.core.children, new cljs.core.Symbol(null, "entries", "entries", 1553588366, null), malli.core.entries], null)], null)], null);
};
var _fail_BANG__9551 = function(p1__9547_SHARP_) {
  return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "sci-not-available", "malli.core/sci-not-available", -1400847277), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), p1__9547_SHARP_], null));
};
var _eval_QMARK__9552 = function(p1__9548_SHARP_) {
  return p1__9548_SHARP_ instanceof cljs.core.Symbol || typeof p1__9548_SHARP_ === "string" || cljs.core.sequential_QMARK_.call(null, p1__9548_SHARP_);
};
var _evaluator_9553 = cljs.core.memoize.call(null, malli.sci.evaluator);
malli.core.eval = function malli$core$eval(var_args) {
  var G__9550 = arguments.length;
  switch(G__9550) {
    case 1:
      return malli.core.eval.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.eval.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.eval.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_code) {
  return malli.core.eval.call(null, _QMARK_code, null);
};
malli.core.eval.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_code, options) {
  if (cljs.core.vector_QMARK_.call(null, _QMARK_code)) {
    return _QMARK_code;
  } else {
    if (_eval_QMARK__9552.call(null, _QMARK_code)) {
      if (cljs.core.truth_((new cljs.core.Keyword("malli.core", "disable-sci", "malli.core/disable-sci", -907669760)).cljs$core$IFn$_invoke$arity$1(options))) {
        return _fail_BANG__9551.call(null, _QMARK_code);
      } else {
        return _evaluator_9553.call(null, function() {
          var or__4185__auto__ = (new cljs.core.Keyword("malli.core", "sci-options", "malli.core/sci-options", 905728020)).cljs$core$IFn$_invoke$arity$1(options);
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            return malli.core._default_sci_options.call(null);
          }
        }(), _fail_BANG__9551).call(null).call(null, _QMARK_code);
      }
    } else {
      return _QMARK_code;
    }
  }
};
malli.core.eval.cljs$lang$maxFixedArity = 2;
malli.core.schema_walker = function malli$core$schema_walker(f) {
  return function(schema, _, children, ___$1) {
    return f.call(null, malli.core._set_children.call(null, schema, children));
  };
};
malli.core.predicate_schemas = function malli$core$predicate_schemas() {
  var _safe_empty_QMARK_ = function(x) {
    return cljs.core.seqable_QMARK_.call(null, x) && cljs.core.empty_QMARK_.call(null, x);
  };
  return cljs.core.reduce.call(null, malli.core._register_var, cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.fromArray([new cljs.core.Var(function() {
    return cljs.core.any_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "any?", "cljs.core/any?", -2068111842, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "any?", "any?", -318999933, null), "cljs/core.cljs", 11, 1, 275, 275, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if given any argument.", cljs.core.truth_(cljs.core.any_QMARK_) ? cljs.core.any_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.some_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "some?", "cljs.core/some?", -440439360, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "some?", "some?", 234752293, null), "cljs/core.cljs", 21, 1, 254, 254, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is not nil, false otherwise.", cljs.core.some_QMARK_ ? cljs.core.some_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.number_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "number?", "cljs.core/number?", -811857295, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), "cljs/core.cljs", 23, 1, 241, 241, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript number.", cljs.core.number_QMARK_ ? cljs.core.number_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.integer_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "integer?", "cljs.core/integer?", 1710697810, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), "cljs/core.cljs", 15, 1, 2252, 2252, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "n", "n", -2092305744, null)], null)), "Returns true if n is a JavaScript number with no decimal part.", cljs.core.truth_(cljs.core.integer_QMARK_) ? cljs.core.integer_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "int?", "cljs.core/int?", 50730120, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "int?", "int?", 1799729645, null), "cljs/core.cljs", 11, 1, 2260, 2260, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies integer? or is an instance of goog.math.Integer\n   or goog.math.Long.", cljs.core.truth_(cljs.core.int_QMARK_) ? cljs.core.int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "pos-int?", "cljs.core/pos-int?", -2115888030, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "pos-int?", "pos-int?", -1205815015, null), "cljs/core.cljs", 15, 1, 2268, 2268, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is positive.", cljs.core.truth_(cljs.core.pos_int_QMARK_) ? cljs.core.pos_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "neg-int?", "cljs.core/neg-int?", -933447883, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "neg-int?", "neg-int?", -1610409390, null), "cljs/core.cljs", 24, 1, 2284, 2284, new cljs.core.Symbol(null, "boolean", "boolean", 
  -278886877, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is negative.", cljs.core.neg_int_QMARK_ ? cljs.core.neg_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nat_int_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "nat-int?", "cljs.core/nat-int?", -164364171, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null), "cljs/core.cljs", 15, 1, 2298, 2298, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies int? and is a natural integer value.", cljs.core.truth_(cljs.core.nat_int_QMARK_) ? cljs.core.nat_int_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.pos_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "pos?", "cljs.core/pos?", -652182749, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), "cljs/core.cljs", 20, 1, 2924, 2924, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is greater than zero, else false", cljs.core.pos_QMARK_ ? cljs.core.pos_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.neg_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "neg?", "cljs.core/neg?", 2002812728, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "neg?", "neg?", -1902175577, null), "cljs/core.cljs", 20, 1, 2933, 2933, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is less than zero, else false", cljs.core.neg_QMARK_ ? cljs.core.neg_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.float_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "float?", "cljs.core/float?", -941017745, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "float?", "float?", 673884616, null), "cljs/core.cljs", 13, 1, 2313, 2313, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.truth_(cljs.core.float_QMARK_) ? cljs.core.float_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.double_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "double?", "cljs.core/double?", 1757455529, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "double?", "double?", -2146564276, null), "cljs/core.cljs", 14, 1, 2318, 2318, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true for JavaScript numbers, false otherwise.", cljs.core.truth_(cljs.core.double_QMARK_) ? cljs.core.double_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.boolean_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "boolean?", "cljs.core/boolean?", 1400713761, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "boolean?", "boolean?", 1790940868, null), "cljs/core.cljs", 15, 1, 2214, 2214, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x is a Boolean", cljs.core.truth_(cljs.core.boolean_QMARK_) ? cljs.core.boolean_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.string_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "string?", "cljs.core/string?", -2072921719, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), "cljs/core.cljs", 23, 1, 265, 265, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript string.", cljs.core.string_QMARK_ ? cljs.core.string_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "ident?", "cljs.core/ident?", 1567441535, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "ident?", "ident?", -2061359468, null), "cljs/core.cljs", 13, 1, 3353, 3353, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword", cljs.core.truth_(cljs.core.ident_QMARK_) ? cljs.core.ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-ident?", "cljs.core/simple-ident?", 1674885558, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-ident?", "simple-ident?", 194189851, null), "cljs/core.cljs", 20, 1, 3357, 3357, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword without a namespace", cljs.core.truth_(cljs.core.simple_ident_QMARK_) ? cljs.core.simple_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_ident_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-ident?", "cljs.core/qualified-ident?", -1863492566, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-ident?", "qualified-ident?", -928894763, null), "cljs/core.cljs", 23, 1, 3361, 3361, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol or keyword with a namespace", cljs.core.truth_(cljs.core.qualified_ident_QMARK_) ? cljs.core.qualified_ident_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "keyword?", "cljs.core/keyword?", 713156450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), "cljs/core.cljs", 15, 1, 3323, 3323, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x is a Keyword", cljs.core.truth_(cljs.core.keyword_QMARK_) ? cljs.core.keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-keyword?", "cljs.core/simple-keyword?", 39474330, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null), "cljs/core.cljs", 22, 1, 3373, 3373, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a keyword without a namespace", cljs.core.truth_(cljs.core.simple_keyword_QMARK_) ? cljs.core.simple_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_keyword_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-keyword?", "cljs.core/qualified-keyword?", -308091478, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null), "cljs/core.cljs", 25, 1, 3377, 3377, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a keyword with a namespace", cljs.core.truth_(cljs.core.qualified_keyword_QMARK_) ? cljs.core.qualified_keyword_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "symbol?", "cljs.core/symbol?", 1422196122, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), "cljs/core.cljs", 23, 1, 1036, 1036, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a Symbol", cljs.core.symbol_QMARK_ ? cljs.core.symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.simple_symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "simple-symbol?", "cljs.core/simple-symbol?", -1951205629, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null), "cljs/core.cljs", 21, 1, 3365, 3365, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol without a namespace", cljs.core.truth_(cljs.core.simple_symbol_QMARK_) ? cljs.core.simple_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.qualified_symbol_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "qualified-symbol?", "cljs.core/qualified-symbol?", 1570873476, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
  new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "qualified-symbol?", "qualified-symbol?", 98763807, null), "cljs/core.cljs", 24, 1, 3369, 3369, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Return true if x is a symbol with a namespace", cljs.core.truth_(cljs.core.qualified_symbol_QMARK_) ? cljs.core.qualified_symbol_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uuid_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "uuid?", "cljs.core/uuid?", -15131116, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null), "cljs/core.cljs", 12, 1, 11287, 11287, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), null, cljs.core.truth_(cljs.core.uuid_QMARK_) ? cljs.core.uuid_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.uri_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "uri?", "cljs.core/uri?", 1085729367, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.9", new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "uri?", "uri?", 2029475116, null), "cljs/core.cljs", 11, 1, 11675, 11675, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true x is a goog.Uri instance.", cljs.core.truth_(cljs.core.uri_QMARK_) ? cljs.core.uri_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.inst_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "inst?", "cljs.core/inst?", 1216133710, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null), "cljs/core.cljs", 12, 1, 1392, 1392, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies Inst", cljs.core.truth_(cljs.core.inst_QMARK_) ? cljs.core.inst_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seqable_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "seqable?", "cljs.core/seqable?", -745394886, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "seqable?", "seqable?", 72462495, null), "cljs/core.cljs", 15, 1, 2230, 2230, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "s", "s", -948495851, null)], null)), "Return true if the seq function is supported for s", cljs.core.truth_(cljs.core.seqable_QMARK_) ? cljs.core.seqable_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.indexed_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "indexed?", "cljs.core/indexed?", -1311257161, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "indexed?", "indexed?", 1234610384, null), "cljs/core.cljs", 15, 1, 1515, 1515, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if coll implements nth in constant time", cljs.core.truth_(cljs.core.indexed_QMARK_) ? cljs.core.indexed_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.map_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "map?", "cljs.core/map?", -1390345523, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), "cljs/core.cljs", 11, 1, 2144, 2144, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies IMap", cljs.core.truth_(cljs.core.map_QMARK_) ? cljs.core.map_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.vector_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), "cljs/core.cljs", 14, 1, 2156, 2156, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Return true if x satisfies IVector", cljs.core.truth_(cljs.core.vector_QMARK_) ? cljs.core.vector_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.list_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "list?", "cljs.core/list?", -684796618, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "list?", "list?", -1494629, null), "cljs/core.cljs", 12, 1, 3099, 3099, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if x implements IList", cljs.core.truth_(cljs.core.list_QMARK_) ? cljs.core.list_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.seq_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "seq?", "cljs.core/seq?", -1302056292, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "seq?", "seq?", -1951934719, null), "cljs/core.cljs", 11, 1, 2223, 2223, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "s", "s", -948495851, null)], null)), "Return true if s satisfies ISeq", cljs.core.truth_(cljs.core.seq_QMARK_) ? cljs.core.seq_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.char_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "char?", "cljs.core/char?", 416405281, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "char?", "char?", -1072221244, null), "cljs/core.cljs", 12, 1, 270, 270, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if x is a JavaScript string of length one.", cljs.core.truth_(cljs.core.char_QMARK_) ? cljs.core.char_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.set_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "set?", "cljs.core/set?", -1176684971, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "set?", "set?", 1636014792, null), "cljs/core.cljs", 11, 1, 2117, 2117, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if x satisfies ISet", cljs.core.truth_(cljs.core.set_QMARK_) ? cljs.core.set_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.nil_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), "cljs/core.cljs", 20, 1, 229, 229, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is nil, false otherwise.", cljs.core.nil_QMARK_ ? cljs.core.nil_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.false_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "false?", "cljs.core/false?", -1660815306, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "false?", "false?", -1522377573, null), "cljs/core.cljs", 22, 1, 2206, 2206, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is the value false, false otherwise.", cljs.core.false_QMARK_ ? cljs.core.false_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.true_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "true?", "cljs.core/true?", -77973136, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "true?", "true?", -1600332395, null), "cljs/core.cljs", 21, 1, 2210, 2210, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if x is the value true, false otherwise.", cljs.core.true_QMARK_ ? cljs.core.true_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.zero_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "zero?", "cljs.core/zero?", -341242858, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), "cljs/core.cljs", 21, 1, 2928, 2928, new cljs.core.Symbol(null, "boolean", "boolean", -278886877, 
  null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "x", "x", -555367584, null)], null)), "Returns true if num is zero, else false", cljs.core.zero_QMARK_ ? cljs.core.zero_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.coll_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "coll?", "cljs.core/coll?", 1208130522, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "coll?", "coll?", -1874821441, null), "cljs/core.cljs", 12, 1, 2110, 2110, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if x satisfies ICollection", cljs.core.truth_(cljs.core.coll_QMARK_) ? cljs.core.coll_QMARK_.cljs$lang$test : null])), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
    return cljs.core.empty_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "empty?", "cljs.core/empty?", 1866613644, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), "cljs/core.cljs", 13, 1, 2104, 2104, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "coll", "coll", -1006698606, null)], null)), "Returns true if coll has no items - same as (not (seq coll)).\n  Please use the idiom (seq x) rather than (not (empty? x))", cljs.core.truth_(cljs.core.empty_QMARK_) ? cljs.core.empty_QMARK_.cljs$lang$test : null])), _safe_empty_QMARK_], null), new cljs.core.Var(function() {
    return cljs.core.associative_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "associative?", "cljs.core/associative?", -540020088, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "associative?", "associative?", -141666771, null), "cljs/core.cljs", 19, 1, 2124, 2124, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if coll implements IAssociative", cljs.core.truth_(cljs.core.associative_QMARK_) ? cljs.core.associative_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.sequential_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "sequential?", "cljs.core/sequential?", 1777854658, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "sequential?", "sequential?", 1102351463, null), "cljs/core.cljs", 18, 1, 2132, 2132, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "x", "x", -555367584, null)], null)), "Returns true if coll satisfies ISequential", cljs.core.truth_(cljs.core.sequential_QMARK_) ? cljs.core.sequential_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.ifn_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "ifn?", "cljs.core/ifn?", 1573873861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), "cljs/core.cljs", 11, 1, 2247, 2247, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "f", "f", 43394975, null)], null)), "Returns true if f returns true for fn? or satisfies IFn.", cljs.core.truth_(cljs.core.ifn_QMARK_) ? cljs.core.ifn_QMARK_.cljs$lang$test : null])), new cljs.core.Var(function() {
    return cljs.core.fn_QMARK_;
  }, new cljs.core.Symbol("cljs.core", "fn?", "cljs.core/fn?", 71876239, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, 
  "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), "cljs/core.cljs", 10, 1, 2001, 2001, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
  "f", "f", 43394975, null)], null)), "Return true if f is a JavaScript function or satisfies the Fn protocol.", cljs.core.truth_(cljs.core.fn_QMARK_) ? cljs.core.fn_QMARK_.cljs$lang$test : null]))], true));
};
malli.core.class_schemas = function malli$core$class_schemas() {
  return cljs.core.PersistentArrayMap.createAsIfByAssoc([RegExp, malli.core._re_schema.call(null, true)]);
};
malli.core.comparator_schemas = function malli$core$comparator_schemas() {
  return cljs.core.reduce_kv.call(null, cljs.core.assoc, null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, malli.core._vmap.call(null, function(p__9556) {
    var vec__9557 = p__9556;
    var k = cljs.core.nth.call(null, vec__9557, 0, null);
    var v = cljs.core.nth.call(null, vec__9557, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, malli.core._simple_schema.call(null, function(_, p__9560) {
      var vec__9561 = p__9560;
      var child = cljs.core.nth.call(null, vec__9561, 0, null);
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), k, new cljs.core.Keyword(null, "pred", "pred", 1927423397), malli.core._safe_pred.call(null, function(p1__9555_SHARP_) {
        return v.call(null, p1__9555_SHARP_, child);
      }), new cljs.core.Keyword(null, "from-ast", "from-ast", -246238449), malli.core._from_value_ast, new cljs.core.Keyword(null, "to-ast", "to-ast", -21935298), malli.core._to_value_ast, new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null);
    })], null);
  }, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "\x3e", "\x3e", -555517146), cljs.core._GT_, new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505), cljs.core._GT__EQ_, new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291), cljs.core._LT_, new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158), cljs.core._LT__EQ_, new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628), cljs.core._EQ_, new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323), cljs.core.not_EQ_], 
  null))));
};
malli.core.type_schemas = function malli$core$type_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "keyword", "keyword", 
  811389747), new cljs.core.Keyword(null, "nil", "nil", 99600501), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "any", "any", 1705907423)], [malli.core._qualified_symbol_schema.call(null), malli.core._double_schema.call(null), malli.core._int_schema.call(null), malli.core._symbol_schema.call(null), malli.core._qualified_keyword_schema.call(null), malli.core._string_schema.call(null), malli.core._keyword_schema.call(null), 
  malli.core._nil_schema.call(null), malli.core._uuid_schema.call(null), malli.core._boolean_schema.call(null), malli.core._any_schema.call(null)]);
};
malli.core.sequence_schemas = function malli$core$sequence_schemas() {
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "+", "+", 1913524883), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "+", "+", 1913524883), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", 
  "max", 61366548), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, p__9564) {
    var vec__9565 = p__9564;
    var child = cljs.core.nth.call(null, vec__9565, 0, null);
    return malli.impl.regex._PLUS__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__9568) {
    var vec__9569 = p__9568;
    var child = cljs.core.nth.call(null, vec__9569, 0, null);
    return malli.impl.regex._PLUS__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__9572) {
    var vec__9573 = p__9572;
    var child = cljs.core.nth.call(null, vec__9573, 0, null);
    return malli.impl.regex._PLUS__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__9576) {
    var vec__9577 = p__9576;
    var child = cljs.core.nth.call(null, vec__9577, 0, null);
    return malli.impl.regex._PLUS__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__9580) {
    var vec__9581 = p__9580;
    var child = cljs.core.nth.call(null, vec__9581, 0, null);
    return malli.impl.regex._PLUS__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, p__9584) {
    var vec__9585 = p__9584;
    var child = cljs.core.nth.call(null, vec__9585, 0, null);
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max.call(null, child))], null);
  }], null)), new cljs.core.Keyword(null, "*", "*", -1294732318), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "*", "*", -1294732318), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null), new cljs.core.Keyword(null, 
  "re-validator", "re-validator", -180375208), function(_, p__9588) {
    var vec__9589 = p__9588;
    var child = cljs.core.nth.call(null, vec__9589, 0, null);
    return malli.impl.regex._STAR__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__9592) {
    var vec__9593 = p__9592;
    var child = cljs.core.nth.call(null, vec__9593, 0, null);
    return malli.impl.regex._STAR__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__9596) {
    var vec__9597 = p__9596;
    var child = cljs.core.nth.call(null, vec__9597, 0, null);
    return malli.impl.regex._STAR__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__9600) {
    var vec__9601 = p__9600;
    var child = cljs.core.nth.call(null, vec__9601, 0, null);
    return malli.impl.regex._STAR__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__9604) {
    var vec__9605 = p__9604;
    var child = cljs.core.nth.call(null, vec__9605, 0, null);
    return malli.impl.regex._STAR__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, ___$1) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 0], null);
  }], null)), new cljs.core.Keyword(null, "?", "?", -1703165233), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "?", "?", -1703165233), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], null), new cljs.core.Keyword(null, 
  "re-validator", "re-validator", -180375208), function(_, p__9608) {
    var vec__9609 = p__9608;
    var child = cljs.core.nth.call(null, vec__9609, 0, null);
    return malli.impl.regex._QMARK__validator.call(null, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, p__9612) {
    var vec__9613 = p__9612;
    var child = cljs.core.nth.call(null, vec__9613, 0, null);
    return malli.impl.regex._QMARK__explainer.call(null, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, p__9616) {
    var vec__9617 = p__9616;
    var child = cljs.core.nth.call(null, vec__9617, 0, null);
    return malli.impl.regex._QMARK__parser.call(null, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, p__9620) {
    var vec__9621 = p__9620;
    var child = cljs.core.nth.call(null, vec__9621, 0, null);
    return malli.impl.regex._QMARK__unparser.call(null, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, p__9624) {
    var vec__9625 = p__9624;
    var child = cljs.core.nth.call(null, vec__9625, 0, null);
    return malli.impl.regex._QMARK__transformer.call(null, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, p__9628) {
    var vec__9629 = p__9628;
    var child = cljs.core.nth.call(null, vec__9629, 0, null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(malli.core._regex_min_max.call(null, child))], null);
  }], null)), new cljs.core.Keyword(null, "repeat", "repeat", 832692087), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "repeat", "repeat", 832692087), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 1, new cljs.core.Keyword(null, "max", "max", 61366548), 1], 
  null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(p__9632, p__9633) {
    var map__9634 = p__9632;
    var map__9634__$1 = (!(map__9634 == null) ? map__9634.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9634.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9634) : map__9634;
    var min = cljs.core.get.call(null, map__9634__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__9634__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__9635 = p__9633;
    var child = cljs.core.nth.call(null, vec__9635, 0, null);
    return malli.impl.regex.repeat_validator.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(p__9639, p__9640) {
    var map__9641 = p__9639;
    var map__9641__$1 = (!(map__9641 == null) ? map__9641.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9641.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9641) : map__9641;
    var min = cljs.core.get.call(null, map__9641__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__9641__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__9642 = p__9640;
    var child = cljs.core.nth.call(null, vec__9642, 0, null);
    return malli.impl.regex.repeat_explainer.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(p__9646, p__9647) {
    var map__9648 = p__9646;
    var map__9648__$1 = (!(map__9648 == null) ? map__9648.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9648.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9648) : map__9648;
    var min = cljs.core.get.call(null, map__9648__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__9648__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__9649 = p__9647;
    var child = cljs.core.nth.call(null, vec__9649, 0, null);
    return malli.impl.regex.repeat_parser.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(p__9653, p__9654) {
    var map__9655 = p__9653;
    var map__9655__$1 = (!(map__9655 == null) ? map__9655.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9655.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9655) : map__9655;
    var min = cljs.core.get.call(null, map__9655__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__9655__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__9656 = p__9654;
    var child = cljs.core.nth.call(null, vec__9656, 0, null);
    return malli.impl.regex.repeat_unparser.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(p__9660, p__9661) {
    var map__9662 = p__9660;
    var map__9662__$1 = (!(map__9662 == null) ? map__9662.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9662.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9662) : map__9662;
    var min = cljs.core.get.call(null, map__9662__$1, new cljs.core.Keyword(null, "min", "min", 444991522), 0);
    var max = cljs.core.get.call(null, map__9662__$1, new cljs.core.Keyword(null, "max", "max", 61366548), Infinity);
    var vec__9663 = p__9661;
    var child = cljs.core.nth.call(null, vec__9663, 0, null);
    return malli.impl.regex.repeat_transformer.call(null, min, max, child);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(props, p__9667) {
    var vec__9668 = p__9667;
    var child = cljs.core.nth.call(null, vec__9668, 0, null);
    return malli.core._re_min_max.call(null, cljs.core._STAR_, props, child);
  }], null)), new cljs.core.Keyword(null, "cat", "cat", -1457810207), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "cat", "cat", -1457810207), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, cljs.core.partial.call(null, malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), children);
  }], null)), new cljs.core.Keyword(null, "alt", "alt", -3214426), malli.core._sequence_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "alt", "alt", -3214426), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), 
  function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), children);
  }], null)), new cljs.core.Keyword(null, "catn", "catn", -48807277), malli.core._sequence_entry_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "catn", "catn", -48807277), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "re-validator", "re-validator", -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.catn_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.catn_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.cat_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, cljs.core.partial.call(null, malli.core._re_min_max, cljs.core._PLUS_), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), 0, new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), malli.core._vmap.call(null, cljs.core.last, children));
  }], null)), new cljs.core.Keyword(null, "altn", "altn", 1717854417), malli.core._sequence_entry_schema.call(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "altn", "altn", 1717854417), new cljs.core.Keyword(null, "child-bounds", "child-bounds", 1368514738), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null), new cljs.core.Keyword(null, "re-validator", "re-validator", 
  -180375208), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_validator, children);
  }, new cljs.core.Keyword(null, "re-explainer", "re-explainer", -1266871200), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_explainer, children);
  }, new cljs.core.Keyword(null, "re-parser", "re-parser", -1229625564), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.altn_parser, children);
  }, new cljs.core.Keyword(null, "re-unparser", "re-unparser", 1432943079), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.altn_unparser, children);
  }, new cljs.core.Keyword(null, "re-transformer", "re-transformer", -1516368461), function(_, children) {
    return cljs.core.apply.call(null, malli.impl.regex.alt_transformer, children);
  }, new cljs.core.Keyword(null, "re-min-max", "re-min-max", 1020871707), function(_, children) {
    return cljs.core.reduce.call(null, malli.core._re_alt_min_max, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max", "max", 61366548), 0], null), malli.core._vmap.call(null, cljs.core.last, children));
  }], null))], null);
};
malli.core.base_schemas = function malli$core$base_schemas() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "enum", "enum", 1679018432), new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "orn", "orn", 738436484), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "maybe", "maybe", -314397560), new cljs.core.Keyword(null, "sequential", "sequential", -1082983960), new cljs.core.Keyword(null, "or", "or", 235744169), 
  new cljs.core.Keyword(null, "re", "re", 228676202), new cljs.core.Keyword(null, "not", "not", -595976884), new cljs.core.Keyword(null, "tuple", "tuple", -472667284), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.Keyword(null, "multi", "multi", -190293005), new cljs.core.Keyword(null, 
  "and", "and", -971899817), new cljs.core.Keyword("malli.core", "schema", "malli.core/schema", -1780373863), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "map", "map", 1371690461)], [malli.core._enum_schema.call(null), malli.core._schema_schema.call(null, null), malli.core._fn_schema.call(null), malli.core._orn_schema.call(null), malli.core._ref_schema.call(null), malli.core._maybe_schema.call(null), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "sequential", "sequential", -1082983960), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.sequential_QMARK_], null)), malli.core._or_schema.call(null), malli.core._re_schema.call(null, false), malli.core._not_schema.call(null), malli.core._tuple_schema.call(null), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 
  1174270348), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.vector_QMARK_, new cljs.core.Keyword(null, "empty", "empty", 767870958), cljs.core.PersistentVector.EMPTY], null)), malli.core._function_schema.call(null, null), malli.core.__EQ__GT__schema.call(null), malli.core._map_of_schema.call(null), malli.core._multi_schema.call(null), malli.core._and_schema.call(null), malli.core._schema_schema.call(null, new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "raw", "raw", 1604651272), true], null)), malli.core._collection_schema.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Keyword(null, "pred", "pred", 1927423397), cljs.core.set_QMARK_, new cljs.core.Keyword(null, "empty", "empty", 767870958), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "in", "in", -1531184865), function(_, 
  x) {
    return x;
  }], null)), malli.core._map_schema.call(null)]);
};
malli.core.default_schemas = function malli$core$default_schemas() {
  return cljs.core.merge.call(null, malli.core.predicate_schemas.call(null), malli.core.class_schemas.call(null), malli.core.comparator_schemas.call(null), malli.core.type_schemas.call(null), malli.core.sequence_schemas.call(null), malli.core.base_schemas.call(null));
};
malli.core.default_registry = function() {
  var strict = malli.registry.mode === "strict";
  var registry = malli.registry.fast_registry.call(null, malli.registry.type === "custom" ? cljs.core.PersistentArrayMap.EMPTY : malli.core.default_schemas.call(null));
  if (strict) {
  } else {
    malli.registry.set_default_registry_BANG_.call(null, registry);
  }
  return malli.registry.registry.call(null, strict ? registry : malli.registry.custom_default_registry.call(null));
}();
if (typeof malli !== "undefined" && typeof malli.core !== "undefined" && typeof malli.core._function_schemas_STAR_ !== "undefined") {
} else {
  malli.core._function_schemas_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
malli.core.function_schemas = function malli$core$function_schemas(var_args) {
  var G__9672 = arguments.length;
  switch(G__9672) {
    case 0:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.core.function_schemas.call(null, new cljs.core.Keyword(null, "clj", "clj", -660495428));
};
malli.core.function_schemas.cljs$core$IFn$_invoke$arity$1 = function(key) {
  return cljs.core.deref.call(null, malli.core._function_schemas_STAR_).call(null, key);
};
malli.core.function_schemas.cljs$lang$maxFixedArity = 1;
malli.core.function_schema = function malli$core$function_schema(var_args) {
  var G__9675 = arguments.length;
  switch(G__9675) {
    case 1:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core.function_schema.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$1 = function(_QMARK_schema) {
  return malli.core.function_schema.call(null, _QMARK_schema, null);
};
malli.core.function_schema.cljs$core$IFn$_invoke$arity$2 = function(_QMARK_schema, options) {
  var s = malli.core.schema.call(null, _QMARK_schema, options);
  var t = malli.core.type.call(null, s);
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "function", "function", -2127255473), null, new cljs.core.Keyword(null, "\x3d\x3e", "\x3d\x3e", 1841166128), null], null), null)).call(null, t))) {
    return s;
  } else {
    return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "invalid-\x3d\x3eschema", "malli.core/invalid-\x3d\x3eschema", 46765066), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), t, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s], null));
  }
};
malli.core.function_schema.cljs$lang$maxFixedArity = 2;
malli.core._register_function_schema_BANG_ = function malli$core$_register_function_schema_BANG_(var_args) {
  var G__9678 = arguments.length;
  switch(G__9678) {
    case 4:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$4 = function(ns, name, _QMARK_schema, data) {
  return malli.core._register_function_schema_BANG_.call(null, ns, name, _QMARK_schema, data, new cljs.core.Keyword(null, "clj", "clj", -660495428), malli.core.function_schema);
};
malli.core._register_function_schema_BANG_.cljs$core$IFn$_invoke$arity$6 = function(ns, name, _QMARK_schema, data, key, f) {
  return cljs.core.swap_BANG_.call(null, malli.core._function_schemas_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, ns, name], null), cljs.core.merge.call(null, data, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), f.call(null, _QMARK_schema), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns, new cljs.core.Keyword(null, "name", "name", 1843675177), name], null)));
};
malli.core._register_function_schema_BANG_.cljs$lang$maxFixedArity = 6;
malli.core._instrument = function malli$core$_instrument(var_args) {
  var G__9681 = arguments.length;
  switch(G__9681) {
    case 1:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return malli.core._instrument.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$1 = function(props) {
  return malli.core._instrument.call(null, props, null, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$2 = function(props, f) {
  return malli.core._instrument.call(null, props, f, null);
};
malli.core._instrument.cljs$core$IFn$_invoke$arity$3 = function(p__9682, f, options) {
  var map__9683 = p__9682;
  var map__9683__$1 = (!(map__9683 == null) ? map__9683.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9683.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9683) : map__9683;
  var props = map__9683__$1;
  var scope = cljs.core.get.call(null, map__9683__$1, new cljs.core.Keyword(null, "scope", "scope", -439358418), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "output", "output", -1105869043), null, new cljs.core.Keyword(null, "input", "input", 556931961), null], null), null));
  var report = cljs.core.get.call(null, map__9683__$1, new cljs.core.Keyword(null, "report", "report", 1394055010), malli.core._fail_BANG_);
  var gen = cljs.core.get.call(null, map__9683__$1, new cljs.core.Keyword(null, "gen", "gen", 142575302));
  var schema = malli.core.schema.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(props), options);
  var G__9685 = malli.core.type.call(null, schema);
  var G__9685__$1 = G__9685 instanceof cljs.core.Keyword ? G__9685.fqn : null;
  switch(G__9685__$1) {
    case "\x3d\x3e":
      var map__9686 = malli.core._function_info.call(null, schema);
      var map__9686__$1 = (!(map__9686 == null) ? map__9686.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9686.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9686) : map__9686;
      var min = cljs.core.get.call(null, map__9686__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
      var max = cljs.core.get.call(null, map__9686__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
      var input = cljs.core.get.call(null, map__9686__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
      var output = cljs.core.get.call(null, map__9686__$1, new cljs.core.Keyword(null, "output", "output", -1105869043));
      var vec__9687 = malli.core._vmap.call(null, malli.core.validator, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [input, output], null));
      var validate_input = cljs.core.nth.call(null, vec__9687, 0, null);
      var validate_output = cljs.core.nth.call(null, vec__9687, 1, null);
      var vec__9690 = malli.core._vmap.call(null, cljs.core.partial.call(null, cljs.core.contains_QMARK_, scope), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.Keyword(null, "output", "output", -1105869043)], null));
      var wrap_input = cljs.core.nth.call(null, vec__9690, 0, null);
      var wrap_output = cljs.core.nth.call(null, vec__9690, 1, null);
      var f__$1 = function() {
        var or__4185__auto__ = cljs.core.truth_(gen) ? gen.call(null, schema) : f;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.core", "missing-function", "malli.core/missing-function", 1913462487), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "props", "props", 453281727), props], null));
        }
      }();
      return function() {
        var G__9698__delegate = function(args) {
          var args__$1 = cljs.core.vec.call(null, args);
          var arity = cljs.core.count.call(null, args__$1);
          if (cljs.core.truth_(wrap_input)) {
            if (min <= arity && arity <= function() {
              var or__4185__auto__ = max;
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return malli.impl.util._PLUS_max_size_PLUS_;
              }
            }()) {
            } else {
              report.call(null, new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "arity", "arity", -1808556135), arity, new cljs.core.Keyword(null, "arities", "arities", -1781122917), cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min", "min", 444991522), min, new cljs.core.Keyword(null, "max", "max", 61366548), 
              max], null)]), new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
            }
            if (cljs.core.truth_(validate_input.call(null, args__$1))) {
            } else {
              report.call(null, new cljs.core.Keyword("malli.core", "invalid-input", "malli.core/invalid-input", 2010057279), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
            }
          } else {
          }
          var value = cljs.core.apply.call(null, f__$1, args__$1);
          if (cljs.core.truth_(wrap_output)) {
            if (cljs.core.truth_(validate_output.call(null, value))) {
            } else {
              report.call(null, new cljs.core.Keyword("malli.core", "invalid-output", "malli.core/invalid-output", -147363519), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "output", "output", -1105869043), output, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "args", "args", 1315556576), args__$1, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema], null));
            }
          } else {
          }
          return value;
        };
        var G__9698 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__9699__i = 0, G__9699__a = new Array(arguments.length - 0);
            while (G__9699__i < G__9699__a.length) {
              G__9699__a[G__9699__i] = arguments[G__9699__i + 0];
              ++G__9699__i;
            }
            args = new cljs.core.IndexedSeq(G__9699__a, 0, null);
          }
          return G__9698__delegate.call(this, args);
        };
        G__9698.cljs$lang$maxFixedArity = 0;
        G__9698.cljs$lang$applyTo = function(arglist__9700) {
          var args = cljs.core.seq(arglist__9700);
          return G__9698__delegate(args);
        };
        G__9698.cljs$core$IFn$_invoke$arity$variadic = G__9698__delegate;
        return G__9698;
      }();
      break;
    case "function":
      var arity__GT_info = malli.core._group_by_arity_BANG_.call(null, cljs.core.map.call(null, function(s) {
        return cljs.core.assoc.call(null, malli.core._function_info.call(null, s), new cljs.core.Keyword(null, "f", "f", -1597136552), malli.core._instrument.call(null, cljs.core.assoc.call(null, props, new cljs.core.Keyword(null, "schema", "schema", -1582001791), s), f, options));
      }, malli.core.children.call(null, schema)));
      var arities = cljs.core.set.call(null, cljs.core.keys.call(null, arity__GT_info));
      var varargs_info = arity__GT_info.call(null, new cljs.core.Keyword(null, "varargs", "varargs", 1030150858));
      if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, arities))) {
        return (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(cljs.core.val.call(null, cljs.core.first.call(null, arity__GT_info)));
      } else {
        return function() {
          var G__9701__delegate = function(args) {
            var arity = cljs.core.count.call(null, args);
            var map__9694 = arity__GT_info.call(null, arity);
            var map__9694__$1 = (!(map__9694 == null) ? map__9694.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9694.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9694) : map__9694;
            var info = map__9694__$1;
            var input = cljs.core.get.call(null, map__9694__$1, new cljs.core.Keyword(null, "input", "input", 556931961));
            var report_arity = function() {
              return report.call(null, new cljs.core.Keyword("malli.core", "invalid-arity", "malli.core/invalid-arity", 577014581), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "arity", "arity", -1808556135), arity, new cljs.core.Keyword(null, "arities", "arities", -1781122917), arities, new cljs.core.Keyword(null, "args", "args", 1315556576), args, new cljs.core.Keyword(null, "input", "input", 556931961), input, new cljs.core.Keyword(null, "schema", "schema", -1582001791), 
              schema], null));
            };
            if (cljs.core.truth_(info)) {
              return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(info), args);
            } else {
              if (cljs.core.truth_(varargs_info)) {
                if (arity < (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(varargs_info)) {
                  return report_arity.call(null);
                } else {
                  return cljs.core.apply.call(null, (new cljs.core.Keyword(null, "f", "f", -1597136552)).cljs$core$IFn$_invoke$arity$1(varargs_info), args);
                }
              } else {
                return report_arity.call(null);
              }
            }
          };
          var G__9701 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__9702__i = 0, G__9702__a = new Array(arguments.length - 0);
              while (G__9702__i < G__9702__a.length) {
                G__9702__a[G__9702__i] = arguments[G__9702__i + 0];
                ++G__9702__i;
              }
              args = new cljs.core.IndexedSeq(G__9702__a, 0, null);
            }
            return G__9701__delegate.call(this, args);
          };
          G__9701.cljs$lang$maxFixedArity = 0;
          G__9701.cljs$lang$applyTo = function(arglist__9703) {
            var args = cljs.core.seq(arglist__9703);
            return G__9701__delegate(args);
          };
          G__9701.cljs$core$IFn$_invoke$arity$variadic = G__9701__delegate;
          return G__9701;
        }();
      }
      break;
    default:
      throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__9685__$1)].join(""));
  }
};
malli.core._instrument.cljs$lang$maxFixedArity = 3;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= Number(width)) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", Number(width) - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", Number(width) - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (Number(value) < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (Number(value) >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= Number(width)) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);
  var padCount = Number(width) - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("sophitia.data.schema");
goog.require("cljs.core");
goog.require("malli.core");
goog.require("goog.string");
goog.require("goog.string.format");
sophitia.data.schema.MalliField = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "closed", "closed", -919675359), true], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "min", "min", 444991522), 1], null)], null)], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "description", "description", -1428560544), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "string", "string", -1989541586)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error-message", "error-message", 1756021561), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "nil", "nil", 99600501)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "default-error-mesage", "default-error-mesage", 963160337), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Keyword(null, 
"string", "string", -1989541586), new cljs.core.Keyword(null, "nil", "nil", 99600501)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "enum", "enum", 1679018432), "text", "password", "checkbox", "email", "number", "file", "radio", "button", "color", "image"], null)], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "validation-group", "validation-group", -591747153), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "string", "string", -1989541586)], null)], null)], null);
sophitia.data.schema.valid_malli_field_QMARK_ = function sophitia$data$schema$valid_malli_field_QMARK_(field) {
  var result = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "validity", "validity", 890377214), malli.core.validate.call(null, sophitia.data.schema.MalliField, field), new cljs.core.Keyword(null, "error-message", "error-message", 1756021561), goog.string.format(function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "default-error-mesage", "default-error-mesage", 963160337)).cljs$core$IFn$_invoke$arity$1(field);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return (new cljs.core.Keyword(null, "error-message", "error-message", 1756021561)).cljs$core$IFn$_invoke$arity$1(field);
    }
  }(), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(field))], null);
  return result;
};
sophitia.data.schema.MalliForm = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "and", "and", -971899817), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "closed", "closed", -919675359), true], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "fields", "fields", -1932066230), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "any", "any", 1705907423)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "validation-behavior", "validation-behavior", 219743720), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "enum", "enum", 1679018432), "on-change", "grouped", "on-submit"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "any", "any", 1705907423)], null)], null), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "validation-group-order", "validation-group-order", 139870265), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "any", "any", 1705907423)], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fn", "fn", -1175266204), function(p__9521) {
  var map__9522 = p__9521;
  var map__9522__$1 = (!(map__9522 == null) ? map__9522.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9522.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9522) : map__9522;
  var fields = cljs.core.get.call(null, map__9522__$1, new cljs.core.Keyword(null, "fields", "fields", -1932066230));
  return cljs.core.every_QMARK_.call(null, function(p1__9520_SHARP_) {
    return (new cljs.core.Keyword(null, "validity", "validity", 890377214)).cljs$core$IFn$_invoke$arity$1(sophitia.data.schema.valid_malli_field_QMARK_.call(null, p1__9520_SHARP_));
  }, fields);
}], null)], null);
sophitia.data.schema.provide_malli_field_schema = function sophitia$data$schema$provide_malli_field_schema() {
  return sophitia.data.schema.MalliField;
};
sophitia.data.schema.provide_malli_form_schema = function sophitia$data$schema$provide_malli_form_schema() {
  return sophitia.data.schema.MalliForm;
};
sophitia.data.schema.SpecField = cljs.core.PersistentVector.EMPTY;
sophitia.data.schema.SpecForm = cljs.core.PersistentVector.EMPTY;
goog.provide("sophitia.data.validation");
goog.require("cljs.core");
goog.require("sophitia.data.schema");
goog.require("malli.core");
sophitia.data.validation.SCHEMA_TYPE = "MALLI";
sophitia.data.validation.validate_form_schema = function sophitia$data$validation$validate_form_schema(form_schema) {
  if (cljs.core._EQ_.call(null, sophitia.data.validation.SCHEMA_TYPE, "MALLI")) {
    return malli.core.validate.call(null, sophitia.data.schema.provide_malli_form_schema.call(null), form_schema);
  } else {
    return false;
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__1992 = "g";
    var G__1992__$1 = cljs.core.truth_(re.ignoreCase) ? [G__1992, "i"].join("") : G__1992;
    var G__1992__$2 = cljs.core.truth_(re.multiline) ? [G__1992__$1, "m"].join("") : G__1992__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__1992__$2, "u"].join("");
    } else {
      return G__1992__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__1993__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__1993 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__1994__i = 0, G__1994__a = new Array(arguments.length - 0);
        while (G__1994__i < G__1994__a.length) {
          G__1994__a[G__1994__i] = arguments[G__1994__i + 0];
          ++G__1994__i;
        }
        args = new cljs.core.IndexedSeq(G__1994__a, 0, null);
      }
      return G__1993__delegate.call(this, args);
    };
    G__1993.cljs$lang$maxFixedArity = 0;
    G__1993.cljs$lang$applyTo = function(arglist__1995) {
      var args = cljs.core.seq(arglist__1995);
      return G__1993__delegate(args);
    };
    G__1993.cljs$core$IFn$_invoke$arity$variadic = G__1993__delegate;
    return G__1993;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__1997 = arguments.length;
  switch(G__1997) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__1999 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__2000 = cljs.core.next.call(null, coll__$1);
      sb = G__1999;
      coll__$1 = G__2000;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__2001 = sb;
      var G__2002 = coll__$2;
      sb = G__2001;
      coll__$1 = G__2002;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__2003 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__2003;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__2004 = cljs.core._EQ__EQ_;
    var expr__2005 = limit;
    if (cljs.core.truth_(pred__2004.call(null, 1, expr__2005))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__2004.call(null, 2, expr__2005))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__2008 = arguments.length;
  switch(G__2008) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__2010 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__2011 = limit__$1 - 1;
          var G__2012 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__2010;
          limit__$1 = G__2011;
          parts = G__2012;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__2013 = index - 1;
        index = G__2013;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__2014 = index + 1;
      index = G__2014;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__2016 = arguments.length;
  switch(G__2016) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__2019 = arguments.length;
  switch(G__2019) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2118 = arguments.length;
  var i__4790__auto___2119 = 0;
  while (true) {
    if (i__4790__auto___2119 < len__4789__auto___2118) {
      args__4795__auto__.push(arguments[i__4790__auto___2119]);
      var G__2120 = i__4790__auto___2119 + 1;
      i__4790__auto___2119 = G__2120;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq2117) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2117));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2122 = arguments.length;
  var i__4790__auto___2123 = 0;
  while (true) {
    if (i__4790__auto___2123 < len__4789__auto___2122) {
      args__4795__auto__.push(arguments[i__4790__auto___2123]);
      var G__2124 = i__4790__auto___2123 + 1;
      i__4790__auto___2123 = G__2124;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq2121) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2121));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__2125 = cljs.core._EQ_;
    var expr__2126 = c;
    if (cljs.core.truth_(pred__2125.call(null, "\b", expr__2126))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__2125.call(null, " ", expr__2126))) {
        return "\\space";
      } else {
        if (cljs.core.truth_(pred__2125.call(null, "\t", expr__2126))) {
          return "\\tab";
        } else {
          if (cljs.core.truth_(pred__2125.call(null, "\n", expr__2126))) {
            return "\\newline";
          } else {
            if (cljs.core.truth_(pred__2125.call(null, "\f", expr__2126))) {
              return "\\formfeed";
            } else {
              if (cljs.core.truth_(pred__2125.call(null, "\r", expr__2126))) {
                return "\\return";
              } else {
                if (cljs.core.truth_(pred__2125.call(null, '"', expr__2126))) {
                  return '\\"';
                } else {
                  if (cljs.core.truth_(pred__2125.call(null, "\\", expr__2126))) {
                    return "\\\\";
                  } else {
                    return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
                  }
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2129 = arguments.length;
  var i__4790__auto___2130 = 0;
  while (true) {
    if (i__4790__auto___2130 < len__4789__auto___2129) {
      args__4795__auto__.push(arguments[i__4790__auto___2130]);
      var G__2131 = i__4790__auto___2130 + 1;
      i__4790__auto___2130 = G__2131;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq2128) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2128));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2133 = arguments.length;
  var i__4790__auto___2134 = 0;
  while (true) {
    if (i__4790__auto___2134 < len__4789__auto___2133) {
      args__4795__auto__.push(arguments[i__4790__auto___2134]);
      var G__2135 = i__4790__auto___2134 + 1;
      i__4790__auto___2134 = G__2135;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq2132) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2132));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__2139 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__2139, 0, null);
      var new_context = cljs.core.nth.call(null, vec__2139, 1, null);
      var G__2142 = new_context;
      var G__2143 = remainder;
      var G__2144 = cljs.core.conj.call(null, acc, result);
      context = G__2142;
      lis__$1 = G__2143;
      acc = G__2144;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__2148 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__2148, 0, null);
    var new_context = cljs.core.nth.call(null, vec__2148, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__2151 = new_context;
      var G__2152 = cljs.core.conj.call(null, acc, result);
      context = G__2151;
      acc = G__2152;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__2156 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__2156, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__2156, 1, null);
    var new_context = cljs.core.nth.call(null, vec__2156, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__2159 = new_context;
      var G__2160 = cljs.core.conj.call(null, acc, result);
      context = G__2159;
      acc = G__2160;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$unzip_map_$_iter__2161(s__2162) {
      return new cljs.core.LazySeq(null, function() {
        var s__2162__$1 = s__2162;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq.call(null, s__2162__$1);
          if (temp__5753__auto__) {
            var s__2162__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2162__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2162__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2164 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2163 = 0;
                while (true) {
                  if (i__2163 < size__4581__auto__) {
                    var vec__2165 = cljs.core._nth.call(null, c__4580__auto__, i__2163);
                    var k = cljs.core.nth.call(null, vec__2165, 0, null);
                    var vec__2168 = cljs.core.nth.call(null, vec__2165, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__2168, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__2168, 1, null);
                    cljs.core.chunk_append.call(null, b__2164, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__2193 = i__2163 + 1;
                    i__2163 = G__2193;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2164), cljs$pprint$unzip_map_$_iter__2161.call(null, cljs.core.chunk_rest.call(null, s__2162__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2164), null);
              }
            } else {
              var vec__2171 = cljs.core.first.call(null, s__2162__$2);
              var k = cljs.core.nth.call(null, vec__2171, 0, null);
              var vec__2174 = cljs.core.nth.call(null, vec__2171, 1, null);
              var v1 = cljs.core.nth.call(null, vec__2174, 0, null);
              var v2 = cljs.core.nth.call(null, vec__2174, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__2161.call(null, cljs.core.rest.call(null, s__2162__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$unzip_map_$_iter__2177(s__2178) {
      return new cljs.core.LazySeq(null, function() {
        var s__2178__$1 = s__2178;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq.call(null, s__2178__$1);
          if (temp__5753__auto__) {
            var s__2178__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2178__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2178__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2180 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2179 = 0;
                while (true) {
                  if (i__2179 < size__4581__auto__) {
                    var vec__2181 = cljs.core._nth.call(null, c__4580__auto__, i__2179);
                    var k = cljs.core.nth.call(null, vec__2181, 0, null);
                    var vec__2184 = cljs.core.nth.call(null, vec__2181, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__2184, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__2184, 1, null);
                    cljs.core.chunk_append.call(null, b__2180, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__2194 = i__2179 + 1;
                    i__2179 = G__2194;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2180), cljs$pprint$unzip_map_$_iter__2177.call(null, cljs.core.chunk_rest.call(null, s__2178__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2180), null);
              }
            } else {
              var vec__2187 = cljs.core.first.call(null, s__2178__$2);
              var k = cljs.core.nth.call(null, vec__2187, 0, null);
              var vec__2190 = cljs.core.nth.call(null, vec__2187, 1, null);
              var v1 = cljs.core.nth.call(null, vec__2190, 0, null);
              var v2 = cljs.core.nth.call(null, vec__2190, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__2177.call(null, cljs.core.rest.call(null, s__2178__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$tuple_map_$_iter__2195(s__2196) {
      return new cljs.core.LazySeq(null, function() {
        var s__2196__$1 = s__2196;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq.call(null, s__2196__$1);
          if (temp__5753__auto__) {
            var s__2196__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2196__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2196__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2198 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2197 = 0;
                while (true) {
                  if (i__2197 < size__4581__auto__) {
                    var vec__2199 = cljs.core._nth.call(null, c__4580__auto__, i__2197);
                    var k = cljs.core.nth.call(null, vec__2199, 0, null);
                    var v = cljs.core.nth.call(null, vec__2199, 1, null);
                    cljs.core.chunk_append.call(null, b__2198, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__2205 = i__2197 + 1;
                    i__2197 = G__2205;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2198), cljs$pprint$tuple_map_$_iter__2195.call(null, cljs.core.chunk_rest.call(null, s__2196__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2198), null);
              }
            } else {
              var vec__2202 = cljs.core.first.call(null, s__2196__$2);
              var k = cljs.core.nth.call(null, vec__2202, 0, null);
              var v = cljs.core.nth.call(null, vec__2202, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__2195.call(null, cljs.core.rest.call(null, s__2196__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__2206 = n - 1;
          n = G__2206;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__2207 = n + 1;
        n = G__2207;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.createAsIfByAssoc([val]);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__2208 = pos + 1;
      pos = G__2208;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__4487__auto__ = pp == null ? null : pp;
    var m__4488__auto__ = cljs.pprint._ppflush[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, pp);
    } else {
      var m__4485__auto__ = cljs.pprint._ppflush["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var G__2211 = arguments.length;
  switch(G__2211) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2212 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2212 = function(writer, max_columns, fields, meta2213) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta2213 = meta2213;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2212.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2214, meta2213__$1) {
      var self__ = this;
      var _2214__$1 = this;
      return new cljs.pprint.t_cljs$pprint2212(self__.writer, self__.max_columns, self__.fields, meta2213__$1);
    };
    cljs.pprint.t_cljs$pprint2212.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2214) {
      var self__ = this;
      var _2214__$1 = this;
      return self__.meta2213;
    };
    cljs.pprint.t_cljs$pprint2212.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint2212.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint2212.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2215 = cljs.core._EQ_;
      var expr__2216 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2215.call(null, String, expr__2216))) {
        var s = x;
        var nl = s.lastIndexOf("\n");
        if (nl < 0) {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
        } else {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__2209_SHARP_) {
            return cljs.core._EQ_.call(null, p1__2209_SHARP_, "\n");
          }, s)));
        }
        return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
      } else {
        if (cljs.core.truth_(pred__2215.call(null, Number, expr__2216))) {
          return cljs.pprint.c_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2216)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2212.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta2213", "meta2213", 1922503155, null)], null);
    };
    cljs.pprint.t_cljs$pprint2212.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2212.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2212";
    cljs.pprint.t_cljs$pprint2212.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2212");
    };
    cljs.pprint.__GT_t_cljs$pprint2212 = function cljs$pprint$__GT_t_cljs$pprint2212(writer__$1, max_columns__$1, fields__$1, meta2213) {
      return new cljs.pprint.t_cljs$pprint2212(writer__$1, max_columns__$1, fields__$1, meta2213);
    };
  }
  return new cljs.pprint.t_cljs$pprint2212(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2220, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2224 = k2220;
  var G__2224__$1 = G__2224 instanceof cljs.core.Keyword ? G__2224.fqn : null;
  switch(G__2224__$1) {
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "indent":
      return self__.indent;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "suffix":
      return self__.suffix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2220, else__4442__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2225) {
    var vec__2226 = p__2225;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2226, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2226, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2219) {
  var self__ = this;
  var G__2219__$1 = this;
  return new cljs.core.RecordIter(0, G__2219__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1977012399 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2221, other2222) {
  var self__ = this;
  var this2221__$1 = this;
  return !(other2222 == null) && this2221__$1.constructor === other2222.constructor && cljs.core._EQ_.call(null, this2221__$1.parent, other2222.parent) && cljs.core._EQ_.call(null, this2221__$1.section, other2222.section) && cljs.core._EQ_.call(null, this2221__$1.start_col, other2222.start_col) && cljs.core._EQ_.call(null, this2221__$1.indent, other2222.indent) && cljs.core._EQ_.call(null, this2221__$1.done_nl, other2222.done_nl) && cljs.core._EQ_.call(null, this2221__$1.intra_block_nl, other2222.intra_block_nl) && 
  cljs.core._EQ_.call(null, this2221__$1.prefix, other2222.prefix) && cljs.core._EQ_.call(null, this2221__$1.per_line_prefix, other2222.per_line_prefix) && cljs.core._EQ_.call(null, this2221__$1.suffix, other2222.suffix) && cljs.core._EQ_.call(null, this2221__$1.logical_block_callback, other2222.logical_block_callback) && cljs.core._EQ_.call(null, this2221__$1.__extmap, other2222.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2219) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2229 = cljs.core.keyword_identical_QMARK_;
  var expr__2230 = k__4447__auto__;
  if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__2230))) {
    return new cljs.pprint.logical_block(G__2219, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__2230))) {
      return new cljs.pprint.logical_block(self__.parent, G__2219, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__2230))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__2219, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__2230))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__2219, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__2230))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__2219, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__2230))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__2219, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__2230))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__2219, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__2230))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__2219, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__2230))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__2219, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__2229.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__2230))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__2219, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2219), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), self__.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), self__.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), 
  self__.per_line_prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback, null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2219) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__2219, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__2223) {
  var extmap__4478__auto__ = function() {
    var G__2232 = cljs.core.dissoc.call(null, G__2223, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), 
    new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194));
    if (cljs.core.record_QMARK_.call(null, G__2223)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2232);
    } else {
      return G__2232;
    }
  }();
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__2223), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__2223), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__2234 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__2234;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2236, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2240 = k2236;
  var G__2240__$1 = G__2240 instanceof cljs.core.Keyword ? G__2240.fqn : null;
  switch(G__2240__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2236, else__4442__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2241) {
    var vec__2242 = p__2241;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2242, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2242, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2235) {
  var self__ = this;
  var G__2235__$1 = this;
  return new cljs.core.RecordIter(0, G__2235__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1809113693 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2237, other2238) {
  var self__ = this;
  var this2237__$1 = this;
  return !(other2238 == null) && this2237__$1.constructor === other2238.constructor && cljs.core._EQ_.call(null, this2237__$1.type_tag, other2238.type_tag) && cljs.core._EQ_.call(null, this2237__$1.data, other2238.data) && cljs.core._EQ_.call(null, this2237__$1.trailing_white_space, other2238.trailing_white_space) && cljs.core._EQ_.call(null, this2237__$1.start_pos, other2238.start_pos) && cljs.core._EQ_.call(null, this2237__$1.end_pos, other2238.end_pos) && cljs.core._EQ_.call(null, this2237__$1.__extmap, 
  other2238.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2235) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2245 = cljs.core.keyword_identical_QMARK_;
  var expr__2246 = k__4447__auto__;
  if (cljs.core.truth_(pred__2245.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__2246))) {
    return new cljs.pprint.buffer_blob(G__2235, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2245.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__2246))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__2235, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2245.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__2246))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__2235, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2245.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__2246))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__2235, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__2245.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__2246))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__2235, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2235), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), self__.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2235) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__2235, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__2239) {
  var extmap__4478__auto__ = function() {
    var G__2248 = cljs.core.dissoc.call(null, G__2239, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__2239)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2248);
    } else {
      return G__2248;
    }
  }();
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__2239), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__2239), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__2239), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__2239), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__2239), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__2048__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2048__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2251, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2255 = k2251;
  var G__2255__$1 = G__2255 instanceof cljs.core.Keyword ? G__2255.fqn : null;
  switch(G__2255__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2251, else__4442__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2256) {
    var vec__2257 = p__2256;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2257, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2257, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2250) {
  var self__ = this;
  var G__2250__$1 = this;
  return new cljs.core.RecordIter(0, G__2250__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -1640656800 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2252, other2253) {
  var self__ = this;
  var this2252__$1 = this;
  return !(other2253 == null) && this2252__$1.constructor === other2253.constructor && cljs.core._EQ_.call(null, this2252__$1.type_tag, other2253.type_tag) && cljs.core._EQ_.call(null, this2252__$1.type, other2253.type) && cljs.core._EQ_.call(null, this2252__$1.logical_block, other2253.logical_block) && cljs.core._EQ_.call(null, this2252__$1.start_pos, other2253.start_pos) && cljs.core._EQ_.call(null, this2252__$1.end_pos, other2253.end_pos) && cljs.core._EQ_.call(null, this2252__$1.__extmap, other2253.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2250) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2260 = cljs.core.keyword_identical_QMARK_;
  var expr__2261 = k__4447__auto__;
  if (cljs.core.truth_(pred__2260.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__2261))) {
    return new cljs.pprint.nl_t(G__2250, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2260.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__2261))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__2250, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2260.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__2261))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__2250, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2260.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__2261))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__2250, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__2260.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__2261))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__2250, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2250), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2250) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__2250, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__2254) {
  var extmap__4478__auto__ = function() {
    var G__2263 = cljs.core.dissoc.call(null, G__2254, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__2254)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2263);
    } else {
      return G__2263;
    }
  }();
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__2254), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__2254), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__2254), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__2254), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(G__2254), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__2048__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2048__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2266, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2270 = k2266;
  var G__2270__$1 = G__2270 instanceof cljs.core.Keyword ? G__2270.fqn : null;
  switch(G__2270__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2266, else__4442__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2271) {
    var vec__2272 = p__2271;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2272, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2272, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2265) {
  var self__ = this;
  var G__2265__$1 = this;
  return new cljs.core.RecordIter(0, G__2265__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -414877272 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2267, other2268) {
  var self__ = this;
  var this2267__$1 = this;
  return !(other2268 == null) && this2267__$1.constructor === other2268.constructor && cljs.core._EQ_.call(null, this2267__$1.type_tag, other2268.type_tag) && cljs.core._EQ_.call(null, this2267__$1.logical_block, other2268.logical_block) && cljs.core._EQ_.call(null, this2267__$1.start_pos, other2268.start_pos) && cljs.core._EQ_.call(null, this2267__$1.end_pos, other2268.end_pos) && cljs.core._EQ_.call(null, this2267__$1.__extmap, other2268.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2265) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2275 = cljs.core.keyword_identical_QMARK_;
  var expr__2276 = k__4447__auto__;
  if (cljs.core.truth_(pred__2275.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__2276))) {
    return new cljs.pprint.start_block_t(G__2265, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2275.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__2276))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__2265, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2275.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__2276))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__2265, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2275.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__2276))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__2265, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2265), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2265) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__2265, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__2269) {
  var extmap__4478__auto__ = function() {
    var G__2278 = cljs.core.dissoc.call(null, G__2269, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__2269)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2278);
    } else {
      return G__2278;
    }
  }();
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__2269), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__2269), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__2269), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__2269), null, cljs.core.not_empty.call(null, 
  extmap__4478__auto__), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__2048__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2048__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2281, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2285 = k2281;
  var G__2285__$1 = G__2285 instanceof cljs.core.Keyword ? G__2285.fqn : null;
  switch(G__2285__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2281, else__4442__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2286) {
    var vec__2287 = p__2286;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2287, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2287, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2280) {
  var self__ = this;
  var G__2280__$1 = this;
  return new cljs.core.RecordIter(0, G__2280__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1365867980 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2282, other2283) {
  var self__ = this;
  var this2282__$1 = this;
  return !(other2283 == null) && this2282__$1.constructor === other2283.constructor && cljs.core._EQ_.call(null, this2282__$1.type_tag, other2283.type_tag) && cljs.core._EQ_.call(null, this2282__$1.logical_block, other2283.logical_block) && cljs.core._EQ_.call(null, this2282__$1.start_pos, other2283.start_pos) && cljs.core._EQ_.call(null, this2282__$1.end_pos, other2283.end_pos) && cljs.core._EQ_.call(null, this2282__$1.__extmap, other2283.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2280) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2290 = cljs.core.keyword_identical_QMARK_;
  var expr__2291 = k__4447__auto__;
  if (cljs.core.truth_(pred__2290.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__2291))) {
    return new cljs.pprint.end_block_t(G__2280, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2290.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__2291))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__2280, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2290.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__2291))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__2280, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2290.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__2291))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__2280, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2280), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2280) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__2280, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__2284) {
  var extmap__4478__auto__ = function() {
    var G__2293 = cljs.core.dissoc.call(null, G__2284, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__2284)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2293);
    } else {
      return G__2293;
    }
  }();
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__2284), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__2284), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__2284), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__2284), null, cljs.core.not_empty.call(null, 
  extmap__4478__auto__), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__2048__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2048__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2296, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2300 = k2296;
  var G__2300__$1 = G__2300 instanceof cljs.core.Keyword ? G__2300.fqn : null;
  switch(G__2300__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2296, else__4442__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2301) {
    var vec__2302 = p__2301;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2302, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2302, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2295) {
  var self__ = this;
  var G__2295__$1 = this;
  return new cljs.core.RecordIter(0, G__2295__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -1602780238 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2297, other2298) {
  var self__ = this;
  var this2297__$1 = this;
  return !(other2298 == null) && this2297__$1.constructor === other2298.constructor && cljs.core._EQ_.call(null, this2297__$1.type_tag, other2298.type_tag) && cljs.core._EQ_.call(null, this2297__$1.logical_block, other2298.logical_block) && cljs.core._EQ_.call(null, this2297__$1.relative_to, other2298.relative_to) && cljs.core._EQ_.call(null, this2297__$1.offset, other2298.offset) && cljs.core._EQ_.call(null, this2297__$1.start_pos, other2298.start_pos) && cljs.core._EQ_.call(null, this2297__$1.end_pos, 
  other2298.end_pos) && cljs.core._EQ_.call(null, this2297__$1.__extmap, other2298.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2295) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2305 = cljs.core.keyword_identical_QMARK_;
  var expr__2306 = k__4447__auto__;
  if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__2306))) {
    return new cljs.pprint.indent_t(G__2295, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__2306))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__2295, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__2306))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__2295, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__2306))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__2295, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__2306))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__2295, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__2305.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__2306))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__2295, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2295), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2295) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__2295, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__2299) {
  var extmap__4478__auto__ = function() {
    var G__2308 = cljs.core.dissoc.call(null, G__2299, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__2299)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2308);
    } else {
      return G__2308;
    }
  }();
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__2299), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__2299), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__2299), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__2299), (new cljs.core.Keyword(null, "start-pos", 
  "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__2299), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__2299), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__2048__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2048__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(p1__2311_SHARP_, p2__2310_SHARP_) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__2310_SHARP_);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__5753__auto___2312 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5753__auto___2312)) {
    var cb_2313 = temp__5753__auto___2312;
    cb_2313.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__5753__auto___2314 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__5753__auto___2314)) {
    var prefix_2315 = temp__5753__auto___2314;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_2315);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__5753__auto___2316 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5753__auto___2316)) {
    var cb_2317 = temp__5753__auto___2316;
    cb_2317.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__5753__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__5753__auto__)) {
    var suffix = temp__5753__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__2318 = cljs.core._EQ_;
    var expr__2319 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__2318.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__2319))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__2318.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__2319))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2319)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return false;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__5751__auto___2321 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5751__auto___2321)) {
      var tws_2322 = temp__5751__auto___2321;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_2322);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__2323 = cljs.core.seq.call(null, tokens);
  var chunk__2324 = null;
  var count__2325 = 0;
  var i__2326 = 0;
  while (true) {
    if (i__2326 < count__2325) {
      var token = cljs.core._nth.call(null, chunk__2324, i__2326);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__5751__auto___2327 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__5751__auto___2327)) {
          var tws_2328 = temp__5751__auto___2327;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_2328);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_2329 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4174__auto__)) {
          return tws_2329;
        } else {
          return and__4174__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_2329);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__2330 = seq__2323;
      var G__2331 = chunk__2324;
      var G__2332 = count__2325;
      var G__2333 = i__2326 + 1;
      seq__2323 = G__2330;
      chunk__2324 = G__2331;
      count__2325 = G__2332;
      i__2326 = G__2333;
      continue;
    } else {
      var temp__5753__auto__ = cljs.core.seq.call(null, seq__2323);
      if (temp__5753__auto__) {
        var seq__2323__$1 = temp__5753__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__2323__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__2323__$1);
          var G__2334 = cljs.core.chunk_rest.call(null, seq__2323__$1);
          var G__2335 = c__4609__auto__;
          var G__2336 = cljs.core.count.call(null, c__4609__auto__);
          var G__2337 = 0;
          seq__2323 = G__2334;
          chunk__2324 = G__2335;
          count__2325 = G__2336;
          i__2326 = G__2337;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__2323__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__5751__auto___2338 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__5751__auto___2338)) {
              var tws_2339 = temp__5751__auto___2338;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_2339);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_2340 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4174__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4174__auto__)) {
              return tws_2340;
            } else {
              return and__4174__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_2340);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__2341 = cljs.core.next.call(null, seq__2323__$1);
          var G__2342 = null;
          var G__2343 = 0;
          var G__2344 = 0;
          seq__2323 = G__2341;
          chunk__2324 = G__2342;
          count__2325 = G__2343;
          i__2326 = G__2344;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4185__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return !cljs.pprint.tokens_fit_QMARK_.call(null, this$, section);
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4174__auto__ = miser_width;
  if (cljs.core.truth_(and__4174__auto__)) {
    var and__4174__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4174__auto____$1)) {
      if (cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return false;
      }
    } else {
      return and__4174__auto____$1;
    }
  } else {
    return and__4174__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(t, _, ___$1, ___$2) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4185__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__2345_SHARP_) {
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__2345_SHARP_) && cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__2345_SHARP_), lb));
  }, cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__2346_SHARP_) {
    var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__2346_SHARP_);
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__2346_SHARP_) && (cljs.core._EQ_.call(null, nl_lb, lb) || cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb)));
  }, cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__2347 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__2347;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_2348 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_2348);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__2349_SHARP_) {
    return !cljs.pprint.nl_t_QMARK_.call(null, p1__2349_SHARP_);
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__2350 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__2350, 0, null);
  var b = cljs.core.nth.call(null, vec__2350, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__2353 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__2353, 0, null);
    var remainder = cljs.core.nth.call(null, vec__2353, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, result);
    var result__$1 = long_section ? function() {
      var rem2 = cljs.pprint.write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer)) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__2356 = new_buffer;
        buffer = G__2356;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__5751__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5751__auto__)) {
    var buf = temp__5751__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__5753__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5753__auto__)) {
    var tws = temp__5753__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_2361 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_2362 = oldpos_2361 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_2362);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_2361, newpos_2362));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__2357_2363 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__2358_2364 = null;
    var count__2359_2365 = 0;
    var i__2360_2366 = 0;
    while (true) {
      if (i__2360_2366 < count__2359_2365) {
        var l_2367__$1 = cljs.core._nth.call(null, chunk__2358_2364, i__2360_2366);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_2367__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__2368 = seq__2357_2363;
        var G__2369 = chunk__2358_2364;
        var G__2370 = count__2359_2365;
        var G__2371 = i__2360_2366 + 1;
        seq__2357_2363 = G__2368;
        chunk__2358_2364 = G__2369;
        count__2359_2365 = G__2370;
        i__2360_2366 = G__2371;
        continue;
      } else {
        var temp__5753__auto___2372 = cljs.core.seq.call(null, seq__2357_2363);
        if (temp__5753__auto___2372) {
          var seq__2357_2373__$1 = temp__5753__auto___2372;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2357_2373__$1)) {
            var c__4609__auto___2374 = cljs.core.chunk_first.call(null, seq__2357_2373__$1);
            var G__2375 = cljs.core.chunk_rest.call(null, seq__2357_2373__$1);
            var G__2376 = c__4609__auto___2374;
            var G__2377 = cljs.core.count.call(null, c__4609__auto___2374);
            var G__2378 = 0;
            seq__2357_2363 = G__2375;
            chunk__2358_2364 = G__2376;
            count__2359_2365 = G__2377;
            i__2360_2366 = G__2378;
            continue;
          } else {
            var l_2379__$1 = cljs.core.first.call(null, seq__2357_2373__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_2379__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__2380 = cljs.core.next.call(null, seq__2357_2373__$1);
            var G__2381 = null;
            var G__2382 = 0;
            var G__2383 = 0;
            seq__2357_2363 = G__2380;
            chunk__2358_2364 = G__2381;
            count__2359_2365 = G__2382;
            i__2360_2366 = G__2383;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2384 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2384 = function(writer, max_columns, miser_width, lb, fields, meta2385) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta2385 = meta2385;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2386, meta2385__$1) {
      var self__ = this;
      var _2386__$1 = this;
      return new cljs.pprint.t_cljs$pprint2384(self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta2385__$1);
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2386) {
      var self__ = this;
      var _2386__$1 = this;
      return self__.meta2385;
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2387 = cljs.core._EQ_;
      var expr__2388 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2387.call(null, String, expr__2388))) {
        var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
        var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
        var white_space = cljs.core.subs.call(null, s0, s.length);
        var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
        if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          cljs.pprint.write_white_space.call(null, this$__$1);
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
        } else {
          var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          var newpos = oldpos + cljs.core.count.call(null, s0);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
          return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
        }
      } else {
        if (cljs.core.truth_(pred__2387.call(null, Number, expr__2388))) {
          return cljs.pprint.p_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2388)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$core$IWriter$_flush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      cljs.pprint._ppflush.call(null, this$__$1);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
    };
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.pprint.t_cljs$pprint2384.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
        cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
        return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
      } else {
        return cljs.pprint.write_white_space.call(null, this$__$1);
      }
    };
    cljs.pprint.t_cljs$pprint2384.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta2385", "meta2385", -1898712275, null)], 
      null);
    };
    cljs.pprint.t_cljs$pprint2384.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2384.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2384";
    cljs.pprint.t_cljs$pprint2384.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2384");
    };
    cljs.pprint.__GT_t_cljs$pprint2384 = function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint2384(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta2385) {
      return new cljs.pprint.t_cljs$pprint2384(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta2385);
    };
  }
  return new cljs.pprint.t_cljs$pprint2384(writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__5753__auto___2390 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5753__auto___2390)) {
      var cb_2391 = temp__5753__auto___2390;
      cb_2391.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, lb.start_col, col);
    return cljs.core.reset_BANG_.call(null, lb.indent, col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__5753__auto___2392 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5753__auto___2392)) {
      var cb_2393 = temp__5753__auto___2392;
      cb_2393.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_2394 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_2395 = oldpos_2394 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_2395);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_2394, newpos_2395));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__2396 = cljs.core._EQ_;
      var expr__2397 = relative_to;
      if (cljs.core.truth_(pred__2396.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__2397))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__2396.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__2397))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2397)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__2399_SHARP_) {
    var temp__5753__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__2399_SHARP_));
    if (cljs.core.truth_(temp__5753__auto__)) {
      var v = temp__5753__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__2399_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x)) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return false;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4174__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2433 = arguments.length;
  var i__4790__auto___2434 = 0;
  while (true) {
    if (i__4790__auto___2434 < len__4789__auto___2433) {
      args__4795__auto__.push(arguments[i__4790__auto___2434]);
      var G__2435 = i__4790__auto___2434 + 1;
      i__4790__auto___2434 = G__2435;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR__orig_val__2405 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR__orig_val__2406 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR__orig_val__2407 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR__orig_val__2408 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR__orig_val__2409 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR__orig_val__2410 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR__orig_val__2411 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR__orig_val__2412 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR__orig_val__2413 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR__orig_val__2414 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR__orig_val__2415 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR__orig_val__2416 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  var _STAR_print_base_STAR__temp_val__2417 = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  var _STAR_print_circle_STAR__temp_val__2418 = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  var _STAR_print_length_STAR__temp_val__2419 = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  var _STAR_print_level_STAR__temp_val__2420 = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  var _STAR_print_lines_STAR__temp_val__2421 = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  var _STAR_print_miser_width_STAR__temp_val__2422 = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  var _STAR_print_pprint_dispatch_STAR__temp_val__2423 = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  var _STAR_print_pretty_STAR__temp_val__2424 = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  var _STAR_print_radix_STAR__temp_val__2425 = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  var _STAR_print_readably_STAR__temp_val__2426 = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  var _STAR_print_right_margin_STAR__temp_val__2427 = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  var _STAR_print_suppress_namespaces_STAR__temp_val__2428 = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__temp_val__2417;
  cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__temp_val__2418;
  cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__temp_val__2419;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__2420;
  cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__temp_val__2421;
  cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__temp_val__2422;
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__temp_val__2423;
  cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__2424;
  cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__temp_val__2425;
  cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__2426;
  cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__temp_val__2427;
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__temp_val__2428;
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__2031__auto___2436 = base_writer;
        var new_writer__2032__auto___2437 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__2031__auto___2436));
        var _STAR_out_STAR__orig_val__2429_2438 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__2430_2439 = new_writer__2032__auto___2437 ? cljs.pprint.make_pretty_writer.call(null, base_writer__2031__auto___2436, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__2031__auto___2436;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2430_2439;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2429_2438;
        }
      } else {
        var _STAR_out_STAR__orig_val__2431_2440 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__2432_2441 = base_writer;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2432_2441;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2431_2440;
        }
      }
      if (optval === true) {
        cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
      }
      if (optval == null) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__orig_val__2416;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__orig_val__2415;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__2414;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__orig_val__2413;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__2412;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__orig_val__2411;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__orig_val__2410;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__orig_val__2409;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__2408;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__orig_val__2407;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__orig_val__2406;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__orig_val__2405;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq2403) {
  var G__2404 = cljs.core.first.call(null, seq2403);
  var seq2403__$1 = cljs.core.next.call(null, seq2403);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2404, seq2403__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var G__2443 = arguments.length;
  switch(G__2443) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR__orig_val__2444 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__2445 = new cljs.core.StringBufferWriter(sb);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2445;
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2444;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__2031__auto__ = writer;
  var new_writer__2032__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__2031__auto__));
  var _STAR_out_STAR__orig_val__2446 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__2447 = new_writer__2032__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__2031__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__2031__auto__;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2447;
  try {
    var _STAR_print_pretty_STAR__orig_val__2448_2451 = cljs.pprint._STAR_print_pretty_STAR_;
    var _STAR_print_pretty_STAR__temp_val__2449_2452 = true;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__2449_2452;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__2448_2451;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2446;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4174__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4174__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4174__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2456 = arguments.length;
  var i__4790__auto___2457 = 0;
  while (true) {
    if (i__4790__auto___2457 < len__4789__auto___2456) {
      args__4795__auto__.push(arguments[i__4790__auto___2457]);
      var G__2458 = i__4790__auto___2457 + 1;
      i__4790__auto___2457 = G__2458;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq2453) {
  var G__2454 = cljs.core.first.call(null, seq2453);
  var seq2453__$1 = cljs.core.next.call(null, seq2453);
  var G__2455 = cljs.core.first.call(null, seq2453__$1);
  var seq2453__$2 = cljs.core.next.call(null, seq2453__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2454, G__2455, seq2453__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), "^", "\n"].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2460, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2464 = k2460;
  var G__2464__$1 = G__2464 instanceof cljs.core.Keyword ? G__2464.fqn : null;
  switch(G__2464__$1) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2460, else__4442__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2465) {
    var vec__2466 = p__2465;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2466, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2466, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2459) {
  var self__ = this;
  var G__2459__$1 = this;
  return new cljs.core.RecordIter(0, G__2459__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -402038447 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2461, other2462) {
  var self__ = this;
  var this2461__$1 = this;
  return !(other2462 == null) && this2461__$1.constructor === other2462.constructor && cljs.core._EQ_.call(null, this2461__$1.seq, other2462.seq) && cljs.core._EQ_.call(null, this2461__$1.rest, other2462.rest) && cljs.core._EQ_.call(null, this2461__$1.pos, other2462.pos) && cljs.core._EQ_.call(null, this2461__$1.__extmap, other2462.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2459) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2469 = cljs.core.keyword_identical_QMARK_;
  var expr__2470 = k__4447__auto__;
  if (cljs.core.truth_(pred__2469.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__2470))) {
    return new cljs.pprint.arg_navigator(G__2459, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2469.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__2470))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__2459, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2469.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__2470))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__2459, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2459), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos, null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2459) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__2459, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__2463) {
  var extmap__4478__auto__ = function() {
    var G__2472 = cljs.core.dissoc.call(null, G__2463, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220));
    if (cljs.core.record_QMARK_.call(null, G__2463)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2472);
    } else {
      return G__2472;
    }
  }();
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__2463), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__2463), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__2463), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__2474 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__2474, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2474, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2478, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2482 = k2478;
  var G__2482__$1 = G__2482 instanceof cljs.core.Keyword ? G__2482.fqn : null;
  switch(G__2482__$1) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2478, else__4442__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2483) {
    var vec__2484 = p__2483;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2484, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2484, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2477) {
  var self__ = this;
  var G__2477__$1 = this;
  return new cljs.core.RecordIter(0, G__2477__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -829256337 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2479, other2480) {
  var self__ = this;
  var this2479__$1 = this;
  return !(other2480 == null) && this2479__$1.constructor === other2480.constructor && cljs.core._EQ_.call(null, this2479__$1.func, other2480.func) && cljs.core._EQ_.call(null, this2479__$1.def, other2480.def) && cljs.core._EQ_.call(null, this2479__$1.params, other2480.params) && cljs.core._EQ_.call(null, this2479__$1.offset, other2480.offset) && cljs.core._EQ_.call(null, this2479__$1.__extmap, other2480.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2477) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2487 = cljs.core.keyword_identical_QMARK_;
  var expr__2488 = k__4447__auto__;
  if (cljs.core.truth_(pred__2487.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__2488))) {
    return new cljs.pprint.compiled_directive(G__2477, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2487.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__2488))) {
      return new cljs.pprint.compiled_directive(self__.func, G__2477, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2487.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__2488))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__2477, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2487.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__2488))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__2477, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2477), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), self__.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), self__.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", 
  "offset", 296498311), self__.offset, null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2477) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__2477, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__2481) {
  var extmap__4478__auto__ = function() {
    var G__2490 = cljs.core.dissoc.call(null, G__2481, new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311));
    if (cljs.core.record_QMARK_.call(null, G__2481)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2490);
    } else {
      return G__2490;
    }
  }();
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__2481), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__2481), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__2481), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__2481), null, cljs.core.not_empty.call(null, extmap__4478__auto__), 
  null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__2492, navigator) {
  var vec__2493 = p__2492;
  var param = cljs.core.nth.call(null, vec__2493, 0, null);
  var vec__2496 = cljs.core.nth.call(null, vec__2493, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__2496, 0, null);
  var offset = cljs.core.nth.call(null, vec__2496, 1, null);
  var vec__2499 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__2499, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__2499, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__2502 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__2502, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__2502, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null].join("");
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4185__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
        }
      }() : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__2505 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__2505, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__2505, 1, null);
  var base_output = function() {
    var or__4185__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars), cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output), cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__2508_SHARP_) {
    if (p1__2508_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__2508_SHARP_, base), cljs.core.quot.call(null, p1__2508_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__2509_SHARP_) {
      if (p1__2509_SHARP_ < 10) {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__2509_SHARP_);
      } else {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__2509_SHARP_ - 10));
      }
    }, cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__2511 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__2511, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__2511, 1, null);
  if (cljs.pprint.integral_QMARK_.call(null, arg)) {
    var neg_2514 = arg < 0;
    var pos_arg_2515 = neg_2514 ? -arg : arg;
    var raw_str_2516 = cljs.pprint.opt_base_str.call(null, base, pos_arg_2515);
    var group_str_2517 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(p1__2510_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.str, p1__2510_SHARP_);
      }, cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_2516));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_2516;
    var signed_str_2518 = neg_2514 ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_2517)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_2517)].join("") : group_str_2517;
    var padded_str_2519 = signed_str_2518.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_2518.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_2518)].join("") : 
    signed_str_2518;
    cljs.pprint.print.call(null, padded_str_2519);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), !cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), !cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null].join("");
    } else {
      var G__2520 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__2521 = pos - 1;
      var G__2522 = cljs.core.first.call(null, remainder);
      var G__2523 = cljs.core.next.call(null, remainder);
      acc = G__2520;
      pos = G__2521;
      this$ = G__2522;
      remainder = G__2523;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__2524 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2524, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2524, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_2527 = arg < 0 ? -arg : arg;
    var parts_2528 = cljs.pprint.remainders.call(null, 1000, abs_arg_2527);
    if (cljs.core.count.call(null, parts_2528) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_2529 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_2528);
      var full_str_2530 = cljs.pprint.add_english_scales.call(null, parts_strs_2529, 0);
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, full_str_2530].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__2531 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2531, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2531, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_2534 = arg < 0 ? -arg : arg;
    var parts_2535 = cljs.pprint.remainders.call(null, 1000, abs_arg_2534);
    if (cljs.core.count.call(null, parts_2535) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_2536 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_2535));
      var head_str_2537 = cljs.pprint.add_english_scales.call(null, parts_strs_2536, 1);
      var tail_str_2538 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_2535));
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, !cljs.core.empty_QMARK_.call(null, head_str_2537) && !cljs.core.empty_QMARK_.call(null, tail_str_2538) ? [head_str_2537, ", ", tail_str_2538].join("") : !cljs.core.empty_QMARK_.call(null, head_str_2537) ? [head_str_2537, "th"].join("") : tail_str_2538].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_2539 = cljs.core.rem.call(null, arg, 100);
      var not_teens_2540 = 11 < low_two_digits_2539 || 19 > low_two_digits_2539;
      var low_digit_2541 = cljs.core.rem.call(null, low_two_digits_2539, 10);
      cljs.pprint.print.call(null, low_digit_2541 === 1 && not_teens_2540 ? "st" : low_digit_2541 === 2 && not_teens_2540 ? "nd" : low_digit_2541 === 3 && not_teens_2540 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__2542 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2542, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2542, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4000) {
    var digits_2545 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_2546 = cljs.core.PersistentVector.EMPTY;
    var pos_2547 = cljs.core.count.call(null, digits_2545) - 1;
    var digits_2548__$1 = digits_2545;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_2548__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_2546));
      } else {
        var digit_2549 = cljs.core.first.call(null, digits_2548__$1);
        var G__2550 = cljs.core._EQ_.call(null, 0, digit_2549) ? acc_2546 : cljs.core.conj.call(null, acc_2546, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_2547), digit_2549 - 1));
        var G__2551 = pos_2547 - 1;
        var G__2552 = cljs.core.next.call(null, digits_2548__$1);
        acc_2546 = G__2550;
        pos_2547 = G__2551;
        digits_2548__$1 = G__2552;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__2553 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__2553, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2553, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__2556 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__2556, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2556, 1, null);
  var pred__2559_2562 = cljs.core._EQ_;
  var expr__2560_2563 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__2559_2562.call(null, "o", expr__2560_2563))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__2559_2562.call(null, "u", expr__2560_2563))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__2559_2562.call(null, null, expr__2560_2563))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2560_2563)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__2564 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__2564, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2564, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__2567 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__2567, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__2567, 1, null);
      var vec__2570 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__2570, 0, null);
      var offsets = cljs.core.nth.call(null, vec__2570, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.length - 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, dotloc), cljs.core.subs.call(null, s, dotloc + 1)].join(""), cljs.core.str.cljs$core$IFn$_invoke$arity$1(dotloc - 1)], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, 1), cljs.core.subs.call(null, s, 2, exploc)].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__2573 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__2573, 0, null);
  var e = cljs.core.nth.call(null, vec__2573, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__2576 = i - 1;
        i = G__2576;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = d;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4273__auto__ = 2;
      var y__4274__auto__ = w;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4273__auto__ = e + 1;
      var y__4274__auto__ = w__$1 - 1;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }() : w__$1 + e;
    var vec__2577 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__2577, 0, null);
    var e1 = cljs.core.nth.call(null, vec__2577, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__2577, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__2577, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > result.length;
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__2580 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__2580, 0, null);
  var e1 = cljs.core.nth.call(null, vec__2580, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.subs.call(null, m, 0, loc), ".", cljs.core.subs.call(null, m, loc)].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    return [cljs.core.subs.call(null, m, 0, k), ".", cljs.core.subs.call(null, m, k)].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__2583 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2583, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2583, 1, null);
  var vec__2586 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__2586, 0, null);
  var abs = cljs.core.nth.call(null, vec__2586, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__2589 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__2589, 0, null);
  var exp = cljs.core.nth.call(null, vec__2589, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__2592 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__2592, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__2592, 1, null);
  var expanded = cljs.core.nth.call(null, vec__2592, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4174__auto__ = w;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = d;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && fixed_repr.length > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_2595 = fixed_repr__$1.length;
    var signed_len_2596 = cljs.core.truth_(add_sign) ? len_2595 + 1 : len_2595;
    var prepend_zero_2597__$1 = prepend_zero && !(signed_len_2596 >= w);
    var append_zero_2598__$1 = append_zero && !(signed_len_2596 >= w);
    var full_len_2599 = prepend_zero_2597__$1 || append_zero_2598__$1 ? signed_len_2596 + 1 : signed_len_2596;
    if (cljs.core.truth_(full_len_2599 > w ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params) : false)) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_2599, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero_2597__$1 ? "0" : null, fixed_repr__$1, append_zero_2598__$1 ? "0" : null].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero ? "0" : null, fixed_repr__$1, append_zero ? "0" : null].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__2600 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2600, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2600, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__2606_2616 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__2607_2617 = G__2606_2616;
  var mantissa_2618 = cljs.core.nth.call(null, vec__2607_2617, 0, null);
  var exp_2619 = cljs.core.nth.call(null, vec__2607_2617, 1, null);
  var G__2606_2620__$1 = G__2606_2616;
  while (true) {
    var vec__2610_2621 = G__2606_2620__$1;
    var mantissa_2622__$1 = cljs.core.nth.call(null, vec__2610_2621, 0, null);
    var exp_2623__$1 = cljs.core.nth.call(null, vec__2610_2621, 1, null);
    var w_2624 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_2625 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_2626 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_2627 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_2628 = function() {
      var or__4185__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_2629 = function() {
      var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_2630 = k_2627 <= 0;
    var scaled_exp_2631 = exp_2623__$1 - (k_2627 - 1);
    var scaled_exp_str_2632 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_2631));
    var scaled_exp_str_2633__$1 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_2628), scaled_exp_2631 < 0 ? "-" : "+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(e_2626) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_2626 - scaled_exp_str_2632.length, "0")) : null), scaled_exp_str_2632].join("");
    var exp_width_2634 = scaled_exp_str_2633__$1.length;
    var base_mantissa_width_2635 = cljs.core.count.call(null, mantissa_2622__$1);
    var scaled_mantissa_2636 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_2627, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_2622__$1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d_2625) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_2625 - (base_mantissa_width_2635 - 1) - (k_2627 < 0 ? -k_2627 : 0), "0")) : null)].join("");
    var w_mantissa_2637 = cljs.core.truth_(w_2624) ? w_2624 - exp_width_2634 : null;
    var vec__2613_2638 = cljs.pprint.round_str.call(null, scaled_mantissa_2636, 0, cljs.core._EQ_.call(null, k_2627, 0) ? d_2625 - 1 : k_2627 > 0 ? d_2625 : k_2627 < 0 ? d_2625 - 1 : null, cljs.core.truth_(w_mantissa_2637) ? w_mantissa_2637 - (cljs.core.truth_(add_sign_2629) ? 1 : 0) : null);
    var rounded_mantissa_2639 = cljs.core.nth.call(null, vec__2613_2638, 0, null);
    var __2640 = cljs.core.nth.call(null, vec__2613_2638, 1, null);
    var incr_exp_2641 = cljs.core.nth.call(null, vec__2613_2638, 2, null);
    var full_mantissa_2642 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_2639, k_2627);
    var append_zero_2643 = cljs.core._EQ_.call(null, k_2627, cljs.core.count.call(null, rounded_mantissa_2639)) && d_2625 == null;
    if (cljs.core.not.call(null, incr_exp_2641)) {
      if (cljs.core.truth_(w_2624)) {
        var len_2644 = full_mantissa_2642.length + exp_width_2634;
        var signed_len_2645 = cljs.core.truth_(add_sign_2629) ? len_2644 + 1 : len_2644;
        var prepend_zero_2646__$1 = prepend_zero_2630 && !cljs.core._EQ_.call(null, signed_len_2645, w_2624);
        var full_len_2647 = prepend_zero_2646__$1 ? signed_len_2645 + 1 : signed_len_2645;
        var append_zero_2648__$1 = append_zero_2643 && full_len_2647 < w_2624;
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = function() {
            var or__4185__auto__ = full_len_2647 > w_2624;
            if (or__4185__auto__) {
              return or__4185__auto__;
            } else {
              var and__4174__auto__ = e_2626;
              if (cljs.core.truth_(and__4174__auto__)) {
                return exp_width_2634 - 2 > e_2626;
              } else {
                return and__4174__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4174__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4174__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_2624, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_2624 - full_len_2647 - (append_zero_2648__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(add_sign_2629) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_2646__$1 ? "0" : null, full_mantissa_2642, append_zero_2648__$1 ? "0" : null, scaled_exp_str_2633__$1].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.truth_(add_sign_2629) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_2630 ? "0" : null, full_mantissa_2642, append_zero_2643 ? "0" : null, scaled_exp_str_2633__$1].join(""));
      }
    } else {
      var G__2649 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_2639, exp_2623__$1 + 1], null);
      G__2606_2620__$1 = G__2649;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__2650 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2650, 0, null);
  var _ = cljs.core.nth.call(null, vec__2650, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__2653 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__2653, 0, null);
  var exp = cljs.core.nth.call(null, vec__2653, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0.0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4273__auto__ = cljs.core.count.call(null, mantissa);
    var y__4274__auto__ = function() {
      var x__4276__auto__ = n;
      var y__4277__auto__ = 7;
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }();
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__2656 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2656, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2656, 1, null);
  var vec__2659 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__2659, 0, null);
  var exp = cljs.core.nth.call(null, vec__2659, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__2662 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__2662, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__2662, 1, null);
  var expanded = cljs.core.nth.call(null, vec__2662, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), fixed_repr].join("");
  var full_len = full_repr.length + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return add_sign;
    } else {
      return and__4174__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? add_sign : false) ? arg < 0 ? "-" : "+" : null, full_repr].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__2665 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__2665, 0, null);
  var navigator = cljs.core.nth.call(null, vec__2665, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__2668 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__2668, 0, null);
  var navigator = cljs.core.nth.call(null, vec__2668, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__2671 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__2671, 0, null);
  var navigator = cljs.core.nth.call(null, vec__2671, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__2674 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__2674, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2674, 1, null);
  var vec__2677 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__2677, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__2677, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__2680 = count + 1;
        var G__2681 = iter_result;
        var G__2682 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__2680;
        args__$1 = G__2681;
        last_pos = G__2682;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__2683 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__2683, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2683, 1, null);
  var vec__2686 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__2686, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__2686, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__2689 = count + 1;
        var G__2690 = cljs.core.next.call(null, arg_list__$1);
        count = G__2689;
        arg_list__$1 = G__2690;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__2691 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__2691, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2691, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__2694 = count + 1;
        var G__2695 = iter_result;
        var G__2696 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__2694;
        navigator__$2 = G__2695;
        last_pos = G__2696;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__2697 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__2697, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2697, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__2703 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__2703, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__2703, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__2706 = count + 1;
        var G__2707 = navigator__$3;
        count = G__2706;
        navigator__$2 = G__2707;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__2713 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR__orig_val__2716 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__2717 = new cljs.core.StringBufferWriter(sb);
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2717;
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2716;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__2713, 0, null);
      var result_str = cljs.core.nth.call(null, vec__2713, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__2718 = cljs.core.next.call(null, clauses__$1);
        var G__2719 = cljs.core.conj.call(null, acc, result_str);
        var G__2720 = iter_result;
        clauses__$1 = G__2718;
        acc = G__2719;
        navigator__$1 = G__2720;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__2721 = function() {
    var temp__5753__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var else$ = temp__5753__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__2724 = cljs.core.nth.call(null, vec__2721, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__2724, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__2721, 1, null);
  var navigator__$1 = function() {
    var or__4185__auto__ = new_navigator;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__2727 = function() {
    var temp__5753__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var p = temp__5753__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__2727, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__2727, 1, null);
  var navigator__$2 = function() {
    var or__4185__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4185__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4185__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__2730 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__2730, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__2730, 1, null);
  var slots = function() {
    var x__4273__auto__ = 1;
    var y__4274__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4273__auto__ = minpad;
    var y__4274__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = eol_str;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4174__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_2733__$1 = slots;
  var extra_pad_2734__$1 = extra_pad;
  var strs_2735__$1 = strs;
  var pad_only_2736 = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_2735__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_2735__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not.call(null, pad_only_2736) ? cljs.core.first.call(null, strs_2735__$1) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var or__4185__auto__ = pad_only_2736;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = cljs.core.next.call(null, strs_2735__$1);
          if (or__4185__auto____$1) {
            return or__4185__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(extra_pad_2734__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__2737 = slots_2733__$1 - 1;
      var G__2738 = extra_pad_2734__$1 - 1;
      var G__2739 = cljs.core.truth_(pad_only_2736) ? strs_2735__$1 : cljs.core.next.call(null, strs_2735__$1);
      var G__2740 = false;
      slots_2733__$1 = G__2737;
      extra_pad_2734__$1 = G__2738;
      strs_2735__$1 = G__2739;
      pad_only_2736 = G__2740;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2741 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2741 = function(writer, meta2742) {
      this.writer = writer;
      this.meta2742 = meta2742;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2741.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2743, meta2742__$1) {
      var self__ = this;
      var _2743__$1 = this;
      return new cljs.pprint.t_cljs$pprint2741(self__.writer, meta2742__$1);
    };
    cljs.pprint.t_cljs$pprint2741.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2743) {
      var self__ = this;
      var _2743__$1 = this;
      return self__.meta2742;
    };
    cljs.pprint.t_cljs$pprint2741.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint2741.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2744 = cljs.core._EQ_;
      var expr__2745 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2744.call(null, String, expr__2745))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__2744.call(null, Number, expr__2745))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2745)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2741.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta2742", "meta2742", -807056051, null)], null);
    };
    cljs.pprint.t_cljs$pprint2741.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2741.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2741";
    cljs.pprint.t_cljs$pprint2741.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2741");
    };
    cljs.pprint.__GT_t_cljs$pprint2741 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint2741(writer__$1, meta2742) {
      return new cljs.pprint.t_cljs$pprint2741(writer__$1, meta2742);
    };
  }
  return new cljs.pprint.t_cljs$pprint2741(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2747 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2747 = function(writer, meta2748) {
      this.writer = writer;
      this.meta2748 = meta2748;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2747.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2749, meta2748__$1) {
      var self__ = this;
      var _2749__$1 = this;
      return new cljs.pprint.t_cljs$pprint2747(self__.writer, meta2748__$1);
    };
    cljs.pprint.t_cljs$pprint2747.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2749) {
      var self__ = this;
      var _2749__$1 = this;
      return self__.meta2748;
    };
    cljs.pprint.t_cljs$pprint2747.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint2747.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2750 = cljs.core._EQ_;
      var expr__2751 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2750.call(null, String, expr__2751))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__2750.call(null, Number, expr__2751))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2751)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2747.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta2748", "meta2748", -43138988, null)], null);
    };
    cljs.pprint.t_cljs$pprint2747.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2747.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2747";
    cljs.pprint.t_cljs$pprint2747.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2747");
    };
    cljs.pprint.__GT_t_cljs$pprint2747 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint2747(writer__$1, meta2748) {
      return new cljs.pprint.t_cljs$pprint2747(writer__$1, meta2748);
    };
  }
  return new cljs.pprint.t_cljs$pprint2747(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4174__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = f;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }()) ? [clojure.string.upper_case.call(null, f), cljs.core.subs.call(null, s, 1)].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(s__$2) {
    if (cljs.core.empty_QMARK_.call(null, s__$2)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    } else {
      var m = RegExp("\\W\\w", "g").exec(s__$2);
      var offset = function() {
        var and__4174__auto__ = m;
        if (cljs.core.truth_(and__4174__auto__)) {
          return m.index + 1;
        } else {
          return and__4174__auto__;
        }
      }();
      if (cljs.core.truth_(offset)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s__$2, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
      }
    }
  }, s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2753 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2753 = function(writer, last_was_whitespace_QMARK_, meta2754) {
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta2754 = meta2754;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2753.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2755, meta2754__$1) {
      var self__ = this;
      var _2755__$1 = this;
      return new cljs.pprint.t_cljs$pprint2753(self__.writer, self__.last_was_whitespace_QMARK_, meta2754__$1);
    };
    cljs.pprint.t_cljs$pprint2753.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2755) {
      var self__ = this;
      var _2755__$1 = this;
      return self__.meta2754;
    };
    cljs.pprint.t_cljs$pprint2753.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint2753.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2756 = cljs.core._EQ_;
      var expr__2757 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2756.call(null, String, expr__2757))) {
        var s = x;
        cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
        if (s.length > 0) {
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(pred__2756.call(null, Number, expr__2757))) {
          var c = cljs.core.char$.call(null, x);
          var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
          cljs.core._write.call(null, self__.writer, mod_c);
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2757)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2753.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta2754", "meta2754", 988278310, null)], null);
    };
    cljs.pprint.t_cljs$pprint2753.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2753.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2753";
    cljs.pprint.t_cljs$pprint2753.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2753");
    };
    cljs.pprint.__GT_t_cljs$pprint2753 = function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint2753(writer__$1, last_was_whitespace_QMARK___$1, meta2754) {
      return new cljs.pprint.t_cljs$pprint2753(writer__$1, last_was_whitespace_QMARK___$1, meta2754);
    };
  }
  return new cljs.pprint.t_cljs$pprint2753(writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint2759 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint2759 = function(writer, capped, meta2760) {
      this.writer = writer;
      this.capped = capped;
      this.meta2760 = meta2760;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint2759.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2761, meta2760__$1) {
      var self__ = this;
      var _2761__$1 = this;
      return new cljs.pprint.t_cljs$pprint2759(self__.writer, self__.capped, meta2760__$1);
    };
    cljs.pprint.t_cljs$pprint2759.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2761) {
      var self__ = this;
      var _2761__$1 = this;
      return self__.meta2760;
    };
    cljs.pprint.t_cljs$pprint2759.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint2759.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__2762 = cljs.core._EQ_;
      var expr__2763 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__2762.call(null, String, expr__2763))) {
        var s = clojure.string.lower_case.call(null, x);
        if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
          var m = RegExp("\\S", "g").exec(s);
          var offset = function() {
            var and__4174__auto__ = m;
            if (cljs.core.truth_(and__4174__auto__)) {
              return m.index;
            } else {
              return and__4174__auto__;
            }
          }();
          if (cljs.core.truth_(offset)) {
            cljs.core._write.call(null, self__.writer, [cljs.core.subs.call(null, s, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset)), clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1))].join(""));
            return cljs.core.reset_BANG_.call(null, self__.capped, true);
          } else {
            return cljs.core._write.call(null, self__.writer, s);
          }
        } else {
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
        }
      } else {
        if (cljs.core.truth_(pred__2762.call(null, Number, expr__2763))) {
          var c = cljs.core.char$.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped)) && goog.string.isUnicodeChar(c)) {
            cljs.core.reset_BANG_.call(null, self__.capped, true);
            return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
          }
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__2763)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint2759.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta2760", "meta2760", 1547797947, null)], null);
    };
    cljs.pprint.t_cljs$pprint2759.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint2759.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint2759";
    cljs.pprint.t_cljs$pprint2759.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint2759");
    };
    cljs.pprint.__GT_t_cljs$pprint2759 = function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint2759(writer__$1, capped__$1, meta2760) {
      return new cljs.pprint.t_cljs$pprint2759(writer__$1, capped__$1, meta2760);
    };
  }
  return new cljs.pprint.t_cljs$pprint2759(writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR__orig_val__2765 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__2766 = make_writer.call(null, cljs.core._STAR_out_STAR_);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2766;
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2765;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_2768 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_2769 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_2770 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_2771 = current_2770 < colnum_2768 ? colnum_2768 - current_2770 : cljs.core._EQ_.call(null, colinc_2769, 0) ? 0 : colinc_2769 - cljs.core.rem.call(null, current_2770 - colnum_2768, colinc_2769);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_2771, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_2772 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_2773 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_2774 = colrel_2772 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_2775 = colinc_2773 > 0 ? cljs.core.rem.call(null, start_col_2774, colinc_2773) : 0;
  var space_count_2776 = colrel_2772 + (cljs.core._EQ_.call(null, 0, offset_2775) ? 0 : colinc_2773 - offset_2775);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_2776, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__2777 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__2777, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__2777, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2780_2784 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2781_2785 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2782_2786 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2783_2787 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2782_2786;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2783_2787;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2781_2785;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2780_2784;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2788_SHARP_, p2__2789_SHARP_, p3__2790_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__2788_SHARP_, p2__2789_SHARP_, p3__2790_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2791_SHARP_, p2__2792_SHARP_, p3__2793_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__2791_SHARP_, p2__2792_SHARP_, p3__2793_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2794_SHARP_, p2__2795_SHARP_, p3__2796_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__2794_SHARP_, p2__2795_SHARP_, p3__2796_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2797_SHARP_, p2__2798_SHARP_, p3__2799_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__2797_SHARP_, p2__2798_SHARP_, p3__2799_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2800_SHARP_, p2__2801_SHARP_, p3__2802_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__2800_SHARP_, p2__2801_SHARP_, p3__2802_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__2803_SHARP_, p2__2804_SHARP_, p3__2805_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__2803_SHARP_, p2__2804_SHARP_, p3__2805_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__2806_SHARP_, p2__2807_SHARP_, p3__2808_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__2806_SHARP_), p1__2806_SHARP_, p2__2807_SHARP_, p3__2808_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4174__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4174__auto__;
      }
    }())) {
      return function(p1__2809_SHARP_, p2__2810_SHARP_, p3__2811_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__2809_SHARP_, p2__2810_SHARP_, p3__2811_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__2812_SHARP_, p2__2813_SHARP_, p3__2814_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__2812_SHARP_, p2__2813_SHARP_, p3__2814_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__2815_SHARP_, p2__2816_SHARP_, p3__2817_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__2815_SHARP_, p2__2816_SHARP_, p3__2817_SHARP_);
          };
        } else {
          return function(p1__2818_SHARP_, p2__2819_SHARP_, p3__2820_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__2818_SHARP_, p2__2819_SHARP_, p3__2820_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__2830 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__2830, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__2830, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4666__auto___2848 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_2849 = 0;
    while (true) {
      if (i_2849 < n__4666__auto___2848) {
        cljs.pprint.prn.call(null);
        var G__2850 = i_2849 + 1;
        i_2849 = G__2850;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_2851 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_2851 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__4666__auto___2852 = cnt_2851 - 1;
    var i_2853 = 0;
    while (true) {
      if (i_2853 < n__4666__auto___2852) {
        cljs.pprint.prn.call(null);
        var G__2854 = i_2853 + 1;
        i_2853 = G__2854;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4666__auto___2855 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_2856 = 0;
    while (true) {
      if (i_2856 < n__4666__auto___2855) {
        cljs.pprint.print.call(null, "\f");
        var G__2857 = i_2856 + 1;
        i_2856 = G__2857;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__2821_SHARP_, p2__2822_SHARP_, p3__2823_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__2821_SHARP_, p2__2822_SHARP_, p3__2823_SHARP_);
    };
  } else {
    return function(p1__2824_SHARP_, p2__2825_SHARP_, p3__2826_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__2824_SHARP_, p2__2825_SHARP_, p3__2826_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__2833 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__2833, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__2833, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__2836 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__2836, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__2836, 1, null);
      var vec__2839 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__2839, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__2839, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4174__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(p1__2827_SHARP_, p2__2828_SHARP_, p3__2829_SHARP_) {
    return cljs.pprint.modify_case.call(null, mod_case_writer, p1__2827_SHARP_, p2__2828_SHARP_, p3__2829_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4174__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = arg1;
      if (cljs.core.truth_(and__4174__auto__)) {
        var and__4174__auto____$1 = arg2;
        if (cljs.core.truth_(and__4174__auto____$1)) {
          return arg3;
        } else {
          return and__4174__auto____$1;
        }
      } else {
        return and__4174__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = arg1;
        if (cljs.core.truth_(and__4174__auto__)) {
          return arg2;
        } else {
          return and__4174__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(params__$1, navigator, offsets) {
      var vec__2842 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__2842, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__2842, 1, null);
      if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__2845 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__2845, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__2845, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__2858) {
  var vec__2859 = p__2858;
  var s = cljs.core.nth.call(null, vec__2859, 0, null);
  var offset = cljs.core.nth.call(null, vec__2859, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__2859, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__2862) {
  var vec__2863 = p__2862;
  var p = cljs.core.nth.call(null, vec__2863, 0, null);
  var offset = cljs.core.nth.call(null, vec__2863, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__2866) {
    var vec__2867 = p__2866;
    var s__$1 = cljs.core.nth.call(null, vec__2867, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__2867, 1, null);
    var flags = cljs.core.nth.call(null, vec__2867, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, ['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, s__$1)), '" appears more than once in a directive'].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed)) ? function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4174__auto__;
    }
  }() : false)) {
    return cljs.pprint.format_error.call(null, ['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), function() {
      var x__4276__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4277__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__2870_SHARP_, p2__2871_SHARP_) {
    var val = cljs.core.first.call(null, p1__2870_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__2871_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, ["Parameter ", cljs.core.name.call(null, cljs.core.first.call(null, p2__2871_SHARP_)), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__2870_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__4582__auto__ = function cljs$pprint$map_params_$_iter__2875(s__2876) {
      return new cljs.core.LazySeq(null, function() {
        var s__2876__$1 = s__2876;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq.call(null, s__2876__$1);
          if (temp__5753__auto__) {
            var s__2876__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2876__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2876__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2878 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2877 = 0;
                while (true) {
                  if (i__2877 < size__4581__auto__) {
                    var vec__2879 = cljs.core._nth.call(null, c__4580__auto__, i__2877);
                    var name = cljs.core.nth.call(null, vec__2879, 0, null);
                    var vec__2882 = cljs.core.nth.call(null, vec__2879, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__2882, 0, null);
                    cljs.core.chunk_append.call(null, b__2878, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__2891 = i__2877 + 1;
                    i__2877 = G__2891;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2878), cljs$pprint$map_params_$_iter__2875.call(null, cljs.core.chunk_rest.call(null, s__2876__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2878), null);
              }
            } else {
              var vec__2885 = cljs.core.first.call(null, s__2876__$2);
              var name = cljs.core.nth.call(null, vec__2885, 0, null);
              var vec__2888 = cljs.core.nth.call(null, vec__2885, 1, null);
              var default$ = cljs.core.nth.call(null, vec__2888, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__2875.call(null, cljs.core.rest.call(null, s__2876__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__2872_SHARP_, p2__2873_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__2872_SHARP_, p2__2873_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__2874_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__2874_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__2892 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__2892, 0, null);
  var vec__2895 = cljs.core.nth.call(null, vec__2892, 1, null);
  var rest = cljs.core.nth.call(null, vec__2895, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__2895, 1, null);
  var vec__2898 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__2898, 0, null);
  var vec__2901 = cljs.core.nth.call(null, vec__2898, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__2901, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__2901, 1, null);
  var flags = cljs.core.nth.call(null, vec__2901, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, ['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive), '" is undefined'].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4174__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4174__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4174__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__2904 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__2904, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__2904, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__2907) {
    var vec__2908 = p__2907;
    var clause_map = cljs.core.nth.call(null, vec__2908, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__2908, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__2908, 2, null);
    var vec__2911 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__2911, 0, null);
    var vec__2914 = cljs.core.nth.call(null, vec__2911, 1, null);
    var type = cljs.core.nth.call(null, vec__2914, 0, null);
    var right_params = cljs.core.nth.call(null, vec__2914, 1, null);
    var else_params = cljs.core.nth.call(null, vec__2914, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__2914, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params])), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null);
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR__orig_val__2917 = cljs.pprint._STAR_format_str_STAR_;
  var _STAR_format_str_STAR__temp_val__2918 = format_str;
  cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__temp_val__2918;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p__2919) {
      var vec__2920 = p__2919;
      var s = cljs.core.nth.call(null, vec__2920, 0, null);
      var offset = cljs.core.nth.call(null, vec__2920, 1, null);
      if (cljs.core.empty_QMARK_.call(null, s)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
      } else {
        var tilde = s.indexOf("~");
        if (tilde < 0) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
        } else {
          if (tilde === 0) {
            return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
          }
        }
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__orig_val__2917;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4185__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4185__auto____$1)) {
            return or__4185__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__2923 = cljs.core.next.call(null, format__$1);
        format__$1 = G__2923;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var G__2925 = arguments.length;
  switch(G__2925) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.pprint.needs_pretty.call(null, format) && cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream)) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR__orig_val__2926 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__2927 = wrapped_stream;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2927;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
    } else {
      if (stream === true) {
        return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2926;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__2928 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__2928, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__2928, 1, null);
      var vec__2931 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__2931, 0, null);
      var offsets = cljs.core.nth.call(null, vec__2931, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = macro_char;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4174__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2935_2940 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2936_2941 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2937_2942 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2938_2943 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2937_2942;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2938_2943;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count2939_2944 = 0;
      var alis_2945__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2939_2944 < cljs.core._STAR_print_length_STAR_) {
          if (alis_2945__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_2945__$1));
            if (cljs.core.next.call(null, alis_2945__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2946 = length_count2939_2944 + 1;
              var G__2947 = cljs.core.next.call(null, alis_2945__$1);
              length_count2939_2944 = G__2946;
              alis_2945__$1 = G__2947;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2936_2941;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2935_2940;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2948_2953 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2949_2954 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2950_2955 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2951_2956 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2950_2955;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2951_2956;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count2952_2957 = 0;
      var aseq_2958 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2952_2957 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_2958) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_2958));
            if (cljs.core.next.call(null, aseq_2958)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2959 = length_count2952_2957 + 1;
              var G__2960 = cljs.core.next.call(null, aseq_2958);
              length_count2952_2957 = G__2959;
              aseq_2958 = G__2960;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2949_2954;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2948_2953;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__2096__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
  return function() {
    var G__2961__delegate = function(args__2098__auto__) {
      var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
      return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
    };
    var G__2961 = function(var_args) {
      var args__2098__auto__ = null;
      if (arguments.length > 0) {
        var G__2962__i = 0, G__2962__a = new Array(arguments.length - 0);
        while (G__2962__i < G__2962__a.length) {
          G__2962__a[G__2962__i] = arguments[G__2962__i + 0];
          ++G__2962__i;
        }
        args__2098__auto__ = new cljs.core.IndexedSeq(G__2962__a, 0, null);
      }
      return G__2961__delegate.call(this, args__2098__auto__);
    };
    G__2961.cljs$lang$maxFixedArity = 0;
    G__2961.cljs$lang$applyTo = function(arglist__2963) {
      var args__2098__auto__ = cljs.core.seq(arglist__2963);
      return G__2961__delegate(args__2098__auto__);
    };
    G__2961.cljs$core$IFn$_invoke$arity$variadic = G__2961__delegate;
    return G__2961;
  }();
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  var vec__2964 = !cljs.core.record_QMARK_.call(null, amap) ? (new cljs.core.Var(function() {
    return cljs.core.lift_ns;
  }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10278, 10278, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]))).call(null, amap) : null;
  var ns = cljs.core.nth.call(null, vec__2964, 0, null);
  var lift_map = cljs.core.nth.call(null, vec__2964, 1, null);
  var amap__$1 = function() {
    var or__4185__auto__ = lift_map;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return amap;
    }
  }();
  var prefix = cljs.core.truth_(ns) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2967_2976 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2968_2977 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2969_2978 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2970_2979 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2969_2978;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2970_2979;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "}");
      var length_count2971_2980 = 0;
      var aseq_2981 = cljs.core.seq.call(null, amap__$1);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2971_2980 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_2981) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__2972_2982 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__2973_2983 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__2974_2984 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__2975_2985 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2974_2984;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2975_2985;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_2981));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_2981)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2973_2983;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2972_2982;
              }
            }
            if (cljs.core.next.call(null, aseq_2981)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2986 = length_count2971_2980 + 1;
              var G__2987 = cljs.core.next.call(null, aseq_2981);
              length_count2971_2980 = G__2986;
              aseq_2981 = G__2987;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2968_2977;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2967_2976;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__2096__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
  return function() {
    var G__2988__delegate = function(args__2098__auto__) {
      var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
      return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
    };
    var G__2988 = function(var_args) {
      var args__2098__auto__ = null;
      if (arguments.length > 0) {
        var G__2989__i = 0, G__2989__a = new Array(arguments.length - 0);
        while (G__2989__i < G__2989__a.length) {
          G__2989__a[G__2989__i] = arguments[G__2989__i + 0];
          ++G__2989__i;
        }
        args__2098__auto__ = new cljs.core.IndexedSeq(G__2989__a, 0, null);
      }
      return G__2988__delegate.call(this, args__2098__auto__);
    };
    G__2988.cljs$lang$maxFixedArity = 0;
    G__2988.cljs$lang$applyTo = function(arglist__2990) {
      var args__2098__auto__ = cljs.core.seq(arglist__2990);
      return G__2988__delegate(args__2098__auto__);
    };
    G__2988.cljs$core$IFn$_invoke$arity$variadic = G__2988__delegate;
    return G__2988;
  }();
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4185__auto__ = function() {
    var temp__5753__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__5753__auto__)) {
      var match = temp__5753__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2991_2998 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2992_2999 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2993_3000 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2994_3001 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2993_3000;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2994_3001;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(prefix.length - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, ((!(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o)) ? !cljs.core._realized_QMARK_.call(null, o) : false) ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, 
      o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2992_2999;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2991_2998;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__2096__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
  return function() {
    var G__3002__delegate = function(args__2098__auto__) {
      var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
      return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
    };
    var G__3002 = function(var_args) {
      var args__2098__auto__ = null;
      if (arguments.length > 0) {
        var G__3003__i = 0, G__3003__a = new Array(arguments.length - 0);
        while (G__3003__i < G__3003__a.length) {
          G__3003__a[G__3003__i] = arguments[G__3003__i + 0];
          ++G__3003__i;
        }
        args__2098__auto__ = new cljs.core.IndexedSeq(G__3003__a, 0, null);
      }
      return G__3002__delegate.call(this, args__2098__auto__);
    };
    G__3002.cljs$lang$maxFixedArity = 0;
    G__3002.cljs$lang$applyTo = function(arglist__3004) {
      var args__2098__auto__ = cljs.core.seq(arglist__3004);
      return G__3002__delegate(args__2098__auto__);
    };
    G__3002.cljs$core$IFn$_invoke$arity$variadic = G__3002__delegate;
    return G__3002;
  }();
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__3006 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__3006, 0, null);
    var end = cljs.core.nth.call(null, vec__3006, 1, null);
    var vec__3009 = reference;
    var seq__3010 = cljs.core.seq.call(null, vec__3009);
    var first__3011 = cljs.core.first.call(null, seq__3010);
    var seq__3010__$1 = cljs.core.next.call(null, seq__3010);
    var keyw = first__3011;
    var args = seq__3010__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__3012_3026 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__3013_3027 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__3014_3028 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__3015_3029 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3014_3028;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3015_3029;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__2096__auto__ = "~w~:i";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3030__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3030 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3031__i = 0, G__3031__a = new Array(arguments.length - 0);
                while (G__3031__i < G__3031__a.length) {
                  G__3031__a[G__3031__i] = arguments[G__3031__i + 0];
                  ++G__3031__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3031__a, 0, null);
              }
              return G__3030__delegate.call(this, args__2098__auto__);
            };
            G__3030.cljs$lang$maxFixedArity = 0;
            G__3030.cljs$lang$applyTo = function(arglist__3032) {
              var args__2098__auto__ = cljs.core.seq(arglist__3032);
              return G__3030__delegate(args__2098__auto__);
            };
            G__3030.cljs$core$IFn$_invoke$arity$variadic = G__3030__delegate;
            return G__3030;
          }();
        })().call(null, keyw);
        var args_3033__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_3033__$1)) {
            (function() {
              var format_in__2096__auto__ = " ";
              var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
              return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                return function() {
                  var G__3034__delegate = function(args__2098__auto__) {
                    var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                    return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                  };
                  var G__3034 = function(var_args) {
                    var args__2098__auto__ = null;
                    if (arguments.length > 0) {
                      var G__3035__i = 0, G__3035__a = new Array(arguments.length - 0);
                      while (G__3035__i < G__3035__a.length) {
                        G__3035__a[G__3035__i] = arguments[G__3035__i + 0];
                        ++G__3035__i;
                      }
                      args__2098__auto__ = new cljs.core.IndexedSeq(G__3035__a, 0, null);
                    }
                    return G__3034__delegate.call(this, args__2098__auto__);
                  };
                  G__3034.cljs$lang$maxFixedArity = 0;
                  G__3034.cljs$lang$applyTo = function(arglist__3036) {
                    var args__2098__auto__ = cljs.core.seq(arglist__3036);
                    return G__3034__delegate(args__2098__auto__);
                  };
                  G__3034.cljs$core$IFn$_invoke$arity$variadic = G__3034__delegate;
                  return G__3034;
                }();
              }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
            })().call(null);
            var arg_3037 = cljs.core.first.call(null, args_3033__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_3037)) {
              var vec__3016_3038 = cljs.pprint.brackets.call(null, arg_3037);
              var start_3039__$1 = cljs.core.nth.call(null, vec__3016_3038, 0, null);
              var end_3040__$1 = cljs.core.nth.call(null, vec__3016_3038, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__3019_3041 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__3020_3042 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__3021_3043 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__3022_3044 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3021_3043;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3022_3044;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_3039__$1, null, end_3040__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_3037), 3) && cljs.core.second.call(null, arg_3037) instanceof cljs.core.Keyword) {
                    var vec__3023_3045 = arg_3037;
                    var ns_3046 = cljs.core.nth.call(null, vec__3023_3045, 0, null);
                    var kw_3047 = cljs.core.nth.call(null, vec__3023_3045, 1, null);
                    var lis_3048 = cljs.core.nth.call(null, vec__3023_3045, 2, null);
                    (function() {
                      var format_in__2096__auto__ = "~w ~w ";
                      var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
                      return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3023_3045, ns_3046, kw_3047, lis_3048, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, 
                      _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                        return function() {
                          var G__3049__delegate = function(args__2098__auto__) {
                            var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                            return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                          };
                          var G__3049 = function(var_args) {
                            var args__2098__auto__ = null;
                            if (arguments.length > 0) {
                              var G__3050__i = 0, G__3050__a = new Array(arguments.length - 0);
                              while (G__3050__i < G__3050__a.length) {
                                G__3050__a[G__3050__i] = arguments[G__3050__i + 0];
                                ++G__3050__i;
                              }
                              args__2098__auto__ = new cljs.core.IndexedSeq(G__3050__a, 0, null);
                            }
                            return G__3049__delegate.call(this, args__2098__auto__);
                          };
                          G__3049.cljs$lang$maxFixedArity = 0;
                          G__3049.cljs$lang$applyTo = function(arglist__3051) {
                            var args__2098__auto__ = cljs.core.seq(arglist__3051);
                            return G__3049__delegate(args__2098__auto__);
                          };
                          G__3049.cljs$core$IFn$_invoke$arity$variadic = G__3049__delegate;
                          return G__3049;
                        }();
                      }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3023_3045, ns_3046, kw_3047, lis_3048, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, 
                      _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
                    })().call(null, ns_3046, kw_3047);
                    if (cljs.core.sequential_QMARK_.call(null, lis_3048)) {
                      (function() {
                        var format_in__2096__auto__ = cljs.core.vector_QMARK_.call(null, lis_3048) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
                        return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3023_3045, ns_3046, kw_3047, lis_3048, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, 
                        _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                          return function() {
                            var G__3052__delegate = function(args__2098__auto__) {
                              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                            };
                            var G__3052 = function(var_args) {
                              var args__2098__auto__ = null;
                              if (arguments.length > 0) {
                                var G__3053__i = 0, G__3053__a = new Array(arguments.length - 0);
                                while (G__3053__i < G__3053__a.length) {
                                  G__3053__a[G__3053__i] = arguments[G__3053__i + 0];
                                  ++G__3053__i;
                                }
                                args__2098__auto__ = new cljs.core.IndexedSeq(G__3053__a, 0, null);
                              }
                              return G__3052__delegate.call(this, args__2098__auto__);
                            };
                            G__3052.cljs$lang$maxFixedArity = 0;
                            G__3052.cljs$lang$applyTo = function(arglist__3054) {
                              var args__2098__auto__ = cljs.core.seq(arglist__3054);
                              return G__3052__delegate(args__2098__auto__);
                            };
                            G__3052.cljs$core$IFn$_invoke$arity$variadic = G__3052__delegate;
                            return G__3052;
                          }();
                        }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3023_3045, ns_3046, kw_3047, lis_3048, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, 
                        _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
                      })().call(null, lis_3048);
                    } else {
                      cljs.pprint.write_out.call(null, lis_3048);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__2096__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
                      return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, 
                      vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                        return function() {
                          var G__3055__delegate = function(args__2098__auto__) {
                            var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                            return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                          };
                          var G__3055 = function(var_args) {
                            var args__2098__auto__ = null;
                            if (arguments.length > 0) {
                              var G__3056__i = 0, G__3056__a = new Array(arguments.length - 0);
                              while (G__3056__i < G__3056__a.length) {
                                G__3056__a[G__3056__i] = arguments[G__3056__i + 0];
                                ++G__3056__i;
                              }
                              args__2098__auto__ = new cljs.core.IndexedSeq(G__3056__a, 0, null);
                            }
                            return G__3055__delegate.call(this, args__2098__auto__);
                          };
                          G__3055.cljs$lang$maxFixedArity = 0;
                          G__3055.cljs$lang$applyTo = function(arglist__3057) {
                            var args__2098__auto__ = cljs.core.seq(arglist__3057);
                            return G__3055__delegate(args__2098__auto__);
                          };
                          G__3055.cljs$core$IFn$_invoke$arity$variadic = G__3055__delegate;
                          return G__3055;
                        }();
                      }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, _STAR_current_level_STAR__orig_val__3019_3041, _STAR_current_length_STAR__orig_val__3020_3042, _STAR_current_level_STAR__temp_val__3021_3043, _STAR_current_length_STAR__temp_val__3022_3044, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, 
                      vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
                    }(), arg_3037);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3020_3042;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3019_3041;
                }
              }
              if (cljs.core.next.call(null, args_3033__$1)) {
                (function() {
                  var format_in__2096__auto__ = "~_";
                  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
                  return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                    return function() {
                      var G__3058__delegate = function(args__2098__auto__) {
                        var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                        return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                      };
                      var G__3058 = function(var_args) {
                        var args__2098__auto__ = null;
                        if (arguments.length > 0) {
                          var G__3059__i = 0, G__3059__a = new Array(arguments.length - 0);
                          while (G__3059__i < G__3059__a.length) {
                            G__3059__a[G__3059__i] = arguments[G__3059__i + 0];
                            ++G__3059__i;
                          }
                          args__2098__auto__ = new cljs.core.IndexedSeq(G__3059__a, 0, null);
                        }
                        return G__3058__delegate.call(this, args__2098__auto__);
                      };
                      G__3058.cljs$lang$maxFixedArity = 0;
                      G__3058.cljs$lang$applyTo = function(arglist__3060) {
                        var args__2098__auto__ = cljs.core.seq(arglist__3060);
                        return G__3058__delegate(args__2098__auto__);
                      };
                      G__3058.cljs$core$IFn$_invoke$arity$variadic = G__3058__delegate;
                      return G__3058;
                    }();
                  }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, vec__3016_3038, start_3039__$1, end_3040__$1, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_3037);
              if (cljs.core.next.call(null, args_3033__$1)) {
                (function() {
                  var format_in__2096__auto__ = "~:_";
                  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
                  return function(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args) {
                    return function() {
                      var G__3061__delegate = function(args__2098__auto__) {
                        var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                        return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
                      };
                      var G__3061 = function(var_args) {
                        var args__2098__auto__ = null;
                        if (arguments.length > 0) {
                          var G__3062__i = 0, G__3062__a = new Array(arguments.length - 0);
                          while (G__3062__i < G__3062__a.length) {
                            G__3062__a[G__3062__i] = arguments[G__3062__i + 0];
                            ++G__3062__i;
                          }
                          args__2098__auto__ = new cljs.core.IndexedSeq(G__3062__a, 0, null);
                        }
                        return G__3061__delegate.call(this, args__2098__auto__);
                      };
                      G__3061.cljs$lang$maxFixedArity = 0;
                      G__3061.cljs$lang$applyTo = function(arglist__3063) {
                        var args__2098__auto__ = cljs.core.seq(arglist__3063);
                        return G__3061__delegate(args__2098__auto__);
                      };
                      G__3061.cljs$core$IFn$_invoke$arity$variadic = G__3061__delegate;
                      return G__3061;
                    }();
                  }(args_3033__$1, format_in__2096__auto__, cf__2097__auto__, arg_3037, _STAR_current_level_STAR__orig_val__3012_3026, _STAR_current_length_STAR__orig_val__3013_3027, _STAR_current_level_STAR__temp_val__3014_3028, _STAR_current_length_STAR__temp_val__3015_3029, vec__3006, start, end, vec__3009, seq__3010, first__3011, seq__3010__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__3064 = cljs.core.next.call(null, args_3033__$1);
            args_3033__$1 = G__3064;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3013_3027;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3012_3026;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__3065 = alis;
    var seq__3066 = cljs.core.seq.call(null, vec__3065);
    var first__3067 = cljs.core.first.call(null, seq__3066);
    var seq__3066__$1 = cljs.core.next.call(null, seq__3066);
    var ns_sym = first__3067;
    var first__3067__$1 = cljs.core.first.call(null, seq__3066__$1);
    var seq__3066__$2 = cljs.core.next.call(null, seq__3066__$1);
    var ns_name = first__3067__$1;
    var stuff = seq__3066__$2;
    var vec__3068 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__3068, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__3068, 1, null);
    var vec__3071 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__3071, 0, null);
    var references = cljs.core.nth.call(null, vec__3071, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__3074_3078 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__3075_3079 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__3076_3080 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__3077_3081 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3076_3080;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3077_3081;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__2096__auto__ = "~w ~1I~@_~w";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3082__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3082 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3083__i = 0, G__3083__a = new Array(arguments.length - 0);
                while (G__3083__i < G__3083__a.length) {
                  G__3083__a[G__3083__i] = arguments[G__3083__i + 0];
                  ++G__3083__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3083__a, 0, null);
              }
              return G__3082__delegate.call(this, args__2098__auto__);
            };
            G__3082.cljs$lang$maxFixedArity = 0;
            G__3082.cljs$lang$applyTo = function(arglist__3084) {
              var args__2098__auto__ = cljs.core.seq(arglist__3084);
              return G__3082__delegate(args__2098__auto__);
            };
            G__3082.cljs$core$IFn$_invoke$arity$variadic = G__3082__delegate;
            return G__3082;
          }();
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4185__auto__ = doc_str;
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            var or__4185__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4185__auto____$1)) {
              return or__4185__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__2096__auto__ = "~@:_";
            var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
            return function() {
              var G__3085__delegate = function(args__2098__auto__) {
                var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
              };
              var G__3085 = function(var_args) {
                var args__2098__auto__ = null;
                if (arguments.length > 0) {
                  var G__3086__i = 0, G__3086__a = new Array(arguments.length - 0);
                  while (G__3086__i < G__3086__a.length) {
                    G__3086__a[G__3086__i] = arguments[G__3086__i + 0];
                    ++G__3086__i;
                  }
                  args__2098__auto__ = new cljs.core.IndexedSeq(G__3086__a, 0, null);
                }
                return G__3085__delegate.call(this, args__2098__auto__);
              };
              G__3085.cljs$lang$maxFixedArity = 0;
              G__3085.cljs$lang$applyTo = function(arglist__3087) {
                var args__2098__auto__ = cljs.core.seq(arglist__3087);
                return G__3085__delegate(args__2098__auto__);
              };
              G__3085.cljs$core$IFn$_invoke$arity$variadic = G__3085__delegate;
              return G__3085;
            }();
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4185__auto__ = attr_map;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__2096__auto__ = "~w~:[~;~:@_~]";
            var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
            return function() {
              var G__3088__delegate = function(args__2098__auto__) {
                var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
              };
              var G__3088 = function(var_args) {
                var args__2098__auto__ = null;
                if (arguments.length > 0) {
                  var G__3089__i = 0, G__3089__a = new Array(arguments.length - 0);
                  while (G__3089__i < G__3089__a.length) {
                    G__3089__a[G__3089__i] = arguments[G__3089__i + 0];
                    ++G__3089__i;
                  }
                  args__2098__auto__ = new cljs.core.IndexedSeq(G__3089__a, 0, null);
                }
                return G__3088__delegate.call(this, args__2098__auto__);
              };
              G__3088.cljs$lang$maxFixedArity = 0;
              G__3088.cljs$lang$applyTo = function(arglist__3090) {
                var args__2098__auto__ = cljs.core.seq(arglist__3090);
                return G__3088__delegate(args__2098__auto__);
              };
              G__3088.cljs$core$IFn$_invoke$arity$variadic = G__3088__delegate;
              return G__3088;
            }();
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_3091__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_3091__$1));
          var temp__5753__auto___3092 = cljs.core.next.call(null, references_3091__$1);
          if (temp__5753__auto___3092) {
            var references_3093__$2 = temp__5753__auto___3092;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__3094 = references_3093__$2;
            references_3091__$1 = G__3094;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3075_3079;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3074_3078;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__2096__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
  return function() {
    var G__3095__delegate = function(args__2098__auto__) {
      var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
      return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
    };
    var G__3095 = function(var_args) {
      var args__2098__auto__ = null;
      if (arguments.length > 0) {
        var G__3096__i = 0, G__3096__a = new Array(arguments.length - 0);
        while (G__3096__i < G__3096__a.length) {
          G__3096__a[G__3096__i] = arguments[G__3096__i + 0];
          ++G__3096__i;
        }
        args__2098__auto__ = new cljs.core.IndexedSeq(G__3096__a, 0, null);
      }
      return G__3095__delegate.call(this, args__2098__auto__);
    };
    G__3095.cljs$lang$maxFixedArity = 0;
    G__3095.cljs$lang$applyTo = function(arglist__3097) {
      var args__2098__auto__ = cljs.core.seq(arglist__3097);
      return G__3095__delegate(args__2098__auto__);
    };
    G__3095.cljs$core$IFn$_invoke$arity$variadic = G__3095__delegate;
    return G__3095;
  }();
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__2096__auto__ = " ~_";
        var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
        return function() {
          var G__3098__delegate = function(args__2098__auto__) {
            var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
            return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
          };
          var G__3098 = function(var_args) {
            var args__2098__auto__ = null;
            if (arguments.length > 0) {
              var G__3099__i = 0, G__3099__a = new Array(arguments.length - 0);
              while (G__3099__i < G__3099__a.length) {
                G__3099__a[G__3099__i] = arguments[G__3099__i + 0];
                ++G__3099__i;
              }
              args__2098__auto__ = new cljs.core.IndexedSeq(G__3099__a, 0, null);
            }
            return G__3098__delegate.call(this, args__2098__auto__);
          };
          G__3098.cljs$lang$maxFixedArity = 0;
          G__3098.cljs$lang$applyTo = function(arglist__3100) {
            var args__2098__auto__ = cljs.core.seq(arglist__3100);
            return G__3098__delegate(args__2098__auto__);
          };
          G__3098.cljs$core$IFn$_invoke$arity$variadic = G__3098__delegate;
          return G__3098;
        }();
      })().call(null);
    } else {
      (function() {
        var format_in__2096__auto__ = " ~@_";
        var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
        return function() {
          var G__3101__delegate = function(args__2098__auto__) {
            var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
            return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
          };
          var G__3101 = function(var_args) {
            var args__2098__auto__ = null;
            if (arguments.length > 0) {
              var G__3102__i = 0, G__3102__a = new Array(arguments.length - 0);
              while (G__3102__i < G__3102__a.length) {
                G__3102__a[G__3102__i] = arguments[G__3102__i + 0];
                ++G__3102__i;
              }
              args__2098__auto__ = new cljs.core.IndexedSeq(G__3102__a, 0, null);
            }
            return G__3101__delegate.call(this, args__2098__auto__);
          };
          G__3101.cljs$lang$maxFixedArity = 0;
          G__3101.cljs$lang$applyTo = function(arglist__3103) {
            var args__2098__auto__ = cljs.core.seq(arglist__3103);
            return G__3101__delegate(args__2098__auto__);
          };
          G__3101.cljs$core$IFn$_invoke$arity$variadic = G__3101__delegate;
          return G__3101;
        }();
      })().call(null);
    }
    return function() {
      var format_in__2096__auto__ = "~{~w~^ ~_~}";
      var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
      return function() {
        var G__3104__delegate = function(args__2098__auto__) {
          var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
          return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
        };
        var G__3104 = function(var_args) {
          var args__2098__auto__ = null;
          if (arguments.length > 0) {
            var G__3105__i = 0, G__3105__a = new Array(arguments.length - 0);
            while (G__3105__i < G__3105__a.length) {
              G__3105__a[G__3105__i] = arguments[G__3105__i + 0];
              ++G__3105__i;
            }
            args__2098__auto__ = new cljs.core.IndexedSeq(G__3105__a, 0, null);
          }
          return G__3104__delegate.call(this, args__2098__auto__);
        };
        G__3104.cljs$lang$maxFixedArity = 0;
        G__3104.cljs$lang$applyTo = function(arglist__3106) {
          var args__2098__auto__ = cljs.core.seq(arglist__3106);
          return G__3104__delegate(args__2098__auto__);
        };
        G__3104.cljs$core$IFn$_invoke$arity$variadic = G__3104__delegate;
        return G__3104;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__2096__auto__ = " ~_~{~w~^ ~_~}";
      var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
      return function() {
        var G__3107__delegate = function(args__2098__auto__) {
          var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
          return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
        };
        var G__3107 = function(var_args) {
          var args__2098__auto__ = null;
          if (arguments.length > 0) {
            var G__3108__i = 0, G__3108__a = new Array(arguments.length - 0);
            while (G__3108__i < G__3108__a.length) {
              G__3108__a[G__3108__i] = arguments[G__3108__i + 0];
              ++G__3108__i;
            }
            args__2098__auto__ = new cljs.core.IndexedSeq(G__3108__a, 0, null);
          }
          return G__3107__delegate.call(this, args__2098__auto__);
        };
        G__3107.cljs$lang$maxFixedArity = 0;
        G__3107.cljs$lang$applyTo = function(arglist__3109) {
          var args__2098__auto__ = cljs.core.seq(arglist__3109);
          return G__3107__delegate(args__2098__auto__);
        };
        G__3107.cljs$core$IFn$_invoke$arity$variadic = G__3107__delegate;
        return G__3107;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__3110 = alis;
    var seq__3111 = cljs.core.seq.call(null, vec__3110);
    var first__3112 = cljs.core.first.call(null, seq__3111);
    var seq__3111__$1 = cljs.core.next.call(null, seq__3111);
    var defn_sym = first__3112;
    var first__3112__$1 = cljs.core.first.call(null, seq__3111__$1);
    var seq__3111__$2 = cljs.core.next.call(null, seq__3111__$1);
    var defn_name = first__3112__$1;
    var stuff = seq__3111__$2;
    var vec__3113 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__3113, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__3113, 1, null);
    var vec__3116 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__3116, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__3116, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__3119_3123 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__3120_3124 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__3121_3125 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__3122_3126 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3121_3125;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3122_3126;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__2096__auto__ = "~w ~1I~@_~w";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3127__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3127 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3128__i = 0, G__3128__a = new Array(arguments.length - 0);
                while (G__3128__i < G__3128__a.length) {
                  G__3128__a[G__3128__i] = arguments[G__3128__i + 0];
                  ++G__3128__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3128__a, 0, null);
              }
              return G__3127__delegate.call(this, args__2098__auto__);
            };
            G__3127.cljs$lang$maxFixedArity = 0;
            G__3127.cljs$lang$applyTo = function(arglist__3129) {
              var args__2098__auto__ = cljs.core.seq(arglist__3129);
              return G__3127__delegate(args__2098__auto__);
            };
            G__3127.cljs$core$IFn$_invoke$arity$variadic = G__3127__delegate;
            return G__3127;
          }();
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__2096__auto__ = " ~_~w";
            var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
            return function() {
              var G__3130__delegate = function(args__2098__auto__) {
                var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
              };
              var G__3130 = function(var_args) {
                var args__2098__auto__ = null;
                if (arguments.length > 0) {
                  var G__3131__i = 0, G__3131__a = new Array(arguments.length - 0);
                  while (G__3131__i < G__3131__a.length) {
                    G__3131__a[G__3131__i] = arguments[G__3131__i + 0];
                    ++G__3131__i;
                  }
                  args__2098__auto__ = new cljs.core.IndexedSeq(G__3131__a, 0, null);
                }
                return G__3130__delegate.call(this, args__2098__auto__);
              };
              G__3130.cljs$lang$maxFixedArity = 0;
              G__3130.cljs$lang$applyTo = function(arglist__3132) {
                var args__2098__auto__ = cljs.core.seq(arglist__3132);
                return G__3130__delegate(args__2098__auto__);
              };
              G__3130.cljs$core$IFn$_invoke$arity$variadic = G__3130__delegate;
              return G__3130;
            }();
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__2096__auto__ = " ~_~w";
            var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
            return function() {
              var G__3133__delegate = function(args__2098__auto__) {
                var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
                return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
              };
              var G__3133 = function(var_args) {
                var args__2098__auto__ = null;
                if (arguments.length > 0) {
                  var G__3134__i = 0, G__3134__a = new Array(arguments.length - 0);
                  while (G__3134__i < G__3134__a.length) {
                    G__3134__a[G__3134__i] = arguments[G__3134__i + 0];
                    ++G__3134__i;
                  }
                  args__2098__auto__ = new cljs.core.IndexedSeq(G__3134__a, 0, null);
                }
                return G__3133__delegate.call(this, args__2098__auto__);
              };
              G__3133.cljs$lang$maxFixedArity = 0;
              G__3133.cljs$lang$applyTo = function(arglist__3135) {
                var args__2098__auto__ = cljs.core.seq(arglist__3135);
                return G__3133__delegate(args__2098__auto__);
              };
              G__3133.cljs$core$IFn$_invoke$arity$variadic = G__3133__delegate;
              return G__3133;
            }();
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4185__auto__ = doc_str;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4185__auto__ = doc_str;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3120_3124;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3119_3123;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__3136_3145 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__3137_3146 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__3138_3147 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__3139_3148 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3138_3147;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3139_3148;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count3140_3149 = 0;
      var binding_3150 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count3140_3149 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_3150)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__3141_3151 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__3142_3152 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__3143_3153 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__3144_3154 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3143_3153;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3144_3154;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_3150));
                if (cljs.core.next.call(null, binding_3150)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_3150));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3142_3152;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3141_3151;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_3150))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__3155 = length_count3140_3149 + 1;
              var G__3156 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_3150));
              length_count3140_3149 = G__3155;
              binding_3150 = G__3156;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3137_3146;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3136_3145;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__3157_3161 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__3158_3162 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__3159_3163 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__3160_3164 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3159_3163;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3160_3164;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__2096__auto__ = "~w ~1I~@_";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3165__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3165 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3166__i = 0, G__3166__a = new Array(arguments.length - 0);
                while (G__3166__i < G__3166__a.length) {
                  G__3166__a[G__3166__i] = arguments[G__3166__i + 0];
                  ++G__3166__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3166__a, 0, null);
              }
              return G__3165__delegate.call(this, args__2098__auto__);
            };
            G__3165.cljs$lang$maxFixedArity = 0;
            G__3165.cljs$lang$applyTo = function(arglist__3167) {
              var args__2098__auto__ = cljs.core.seq(arglist__3167);
              return G__3165__delegate(args__2098__auto__);
            };
            G__3165.cljs$core$IFn$_invoke$arity$variadic = G__3165__delegate;
            return G__3165;
          }();
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__2096__auto__ = " ~_~{~w~^ ~_~}";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3168__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3168 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3169__i = 0, G__3169__a = new Array(arguments.length - 0);
                while (G__3169__i < G__3169__a.length) {
                  G__3169__a[G__3169__i] = arguments[G__3169__i + 0];
                  ++G__3169__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3169__a, 0, null);
              }
              return G__3168__delegate.call(this, args__2098__auto__);
            };
            G__3168.cljs$lang$maxFixedArity = 0;
            G__3168.cljs$lang$applyTo = function(arglist__3170) {
              var args__2098__auto__ = cljs.core.seq(arglist__3170);
              return G__3168__delegate(args__2098__auto__);
            };
            G__3168.cljs$core$IFn$_invoke$arity$variadic = G__3168__delegate;
            return G__3168;
          }();
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3158_3162;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3157_3161;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__2096__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
  return function() {
    var G__3171__delegate = function(args__2098__auto__) {
      var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
      return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
    };
    var G__3171 = function(var_args) {
      var args__2098__auto__ = null;
      if (arguments.length > 0) {
        var G__3172__i = 0, G__3172__a = new Array(arguments.length - 0);
        while (G__3172__i < G__3172__a.length) {
          G__3172__a[G__3172__i] = arguments[G__3172__i + 0];
          ++G__3172__i;
        }
        args__2098__auto__ = new cljs.core.IndexedSeq(G__3172__a, 0, null);
      }
      return G__3171__delegate.call(this, args__2098__auto__);
    };
    G__3171.cljs$lang$maxFixedArity = 0;
    G__3171.cljs$lang$applyTo = function(arglist__3173) {
      var args__2098__auto__ = cljs.core.seq(arglist__3173);
      return G__3171__delegate(args__2098__auto__);
    };
    G__3171.cljs$core$IFn$_invoke$arity$variadic = G__3171__delegate;
    return G__3171;
  }();
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__3174_3183 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__3175_3184 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__3176_3185 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__3177_3186 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3176_3185;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3177_3186;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count3178_3187 = 0;
        var alis_3188__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count3178_3187 < cljs.core._STAR_print_length_STAR_) {
            if (alis_3188__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__3179_3189 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__3180_3190 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__3181_3191 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__3182_3192 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3181_3191;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3182_3192;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_3188__$1));
                  if (cljs.core.next.call(null, alis_3188__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_3188__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3180_3190;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3179_3189;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_3188__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__3193 = length_count3178_3187 + 1;
                var G__3194 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_3188__$1));
                length_count3178_3187 = G__3193;
                alis_3188__$1 = G__3194;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3175_3184;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3174_3183;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__3195_3204 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__3196_3205 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__3197_3206 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__3198_3207 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3197_3206;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3198_3207;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__2096__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
          return function() {
            var G__3208__delegate = function(args__2098__auto__) {
              var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
              return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
            };
            var G__3208 = function(var_args) {
              var args__2098__auto__ = null;
              if (arguments.length > 0) {
                var G__3209__i = 0, G__3209__a = new Array(arguments.length - 0);
                while (G__3209__i < G__3209__a.length) {
                  G__3209__a[G__3209__i] = arguments[G__3209__i + 0];
                  ++G__3209__i;
                }
                args__2098__auto__ = new cljs.core.IndexedSeq(G__3209__a, 0, null);
              }
              return G__3208__delegate.call(this, args__2098__auto__);
            };
            G__3208.cljs$lang$maxFixedArity = 0;
            G__3208.cljs$lang$applyTo = function(arglist__3210) {
              var args__2098__auto__ = cljs.core.seq(arglist__3210);
              return G__3208__delegate(args__2098__auto__);
            };
            G__3208.cljs$core$IFn$_invoke$arity$variadic = G__3208__delegate;
            return G__3208;
          }();
        }(), alis);
        var length_count3199_3211 = 0;
        var alis_3212__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count3199_3211 < cljs.core._STAR_print_length_STAR_) {
            if (alis_3212__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__3200_3213 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__3201_3214 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__3202_3215 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__3203_3216 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3202_3215;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3203_3216;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_3212__$1));
                  if (cljs.core.next.call(null, alis_3212__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_3212__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3201_3214;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3200_3213;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_3212__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__3217 = length_count3199_3211 + 1;
                var G__3218 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_3212__$1));
                length_count3199_3211 = G__3217;
                alis_3212__$1 = G__3218;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3196_3205;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3195_3204;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR__orig_val__3221 = cljs.pprint._STAR_symbol_map_STAR_;
    var _STAR_symbol_map_STAR__temp_val__3222 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, args), "%"]) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__3219_SHARP_, p2__3220_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3219_SHARP_, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__3220_SHARP_)].join("")], null);
    }, args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__temp_val__3222;
    try {
      return function() {
        var format_in__2096__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__2097__auto__ = typeof format_in__2096__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__2096__auto__) : format_in__2096__auto__;
        return function() {
          var G__3223__delegate = function(args__2098__auto__) {
            var navigator__2099__auto__ = cljs.pprint.init_navigator.call(null, args__2098__auto__);
            return cljs.pprint.execute_format.call(null, cf__2097__auto__, navigator__2099__auto__);
          };
          var G__3223 = function(var_args) {
            var args__2098__auto__ = null;
            if (arguments.length > 0) {
              var G__3224__i = 0, G__3224__a = new Array(arguments.length - 0);
              while (G__3224__i < G__3224__a.length) {
                G__3224__a[G__3224__i] = arguments[G__3224__i + 0];
                ++G__3224__i;
              }
              args__2098__auto__ = new cljs.core.IndexedSeq(G__3224__a, 0, null);
            }
            return G__3223__delegate.call(this, args__2098__auto__);
          };
          G__3223.cljs$lang$maxFixedArity = 0;
          G__3223.cljs$lang$applyTo = function(arglist__3225) {
            var args__2098__auto__ = cljs.core.seq(arglist__3225);
            return G__3223__delegate(args__2098__auto__);
          };
          G__3223.cljs$core$IFn$_invoke$arity$variadic = G__3223__delegate;
          return G__3223;
        }();
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__orig_val__3221;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__3226_3231 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__3227_3232 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__3228_3233 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__3229_3234 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__3228_3233;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__3229_3234;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count3230_3235 = 0;
      var alis_3236__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count3230_3235 < cljs.core._STAR_print_length_STAR_) {
          if (alis_3236__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_3236__$1));
            if (cljs.core.next.call(null, alis_3236__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__3237 = length_count3230_3235 + 1;
              var G__3238 = cljs.core.next.call(null, alis_3236__$1);
              length_count3230_3235 = G__3237;
              alis_3236__$1 = G__3238;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__3227_3232;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__3226_3231;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__4582__auto__ = function cljs$pprint$two_forms_$_iter__3239(s__3240) {
      return new cljs.core.LazySeq(null, function() {
        var s__3240__$1 = s__3240;
        while (true) {
          var temp__5753__auto__ = cljs.core.seq.call(null, s__3240__$1);
          if (temp__5753__auto__) {
            var s__3240__$2 = temp__5753__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__3240__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__3240__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__3242 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__3241 = 0;
                while (true) {
                  if (i__3241 < size__4581__auto__) {
                    var x = cljs.core._nth.call(null, c__4580__auto__, i__3241);
                    cljs.core.chunk_append.call(null, b__3242, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__3243 = i__3241 + 1;
                    i__3241 = G__3243;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__3242), cljs$pprint$two_forms_$_iter__3239.call(null, cljs.core.chunk_rest.call(null, s__3240__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__3242), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__3240__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__3239.call(null, cljs.core.rest.call(null, s__3240__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__3244_SHARP_) {
    var vec__3245 = p1__3244_SHARP_;
    var s = cljs.core.nth.call(null, vec__3245, 0, null);
    var f = cljs.core.nth.call(null, vec__3245, 1, null);
    if (cljs.core.not.call(null, function() {
      var or__4185__auto__ = cljs.core.namespace.call(null, s);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.special_symbol_QMARK_.call(null, s);
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
    } else {
      return p1__3244_SHARP_;
    }
  }, amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__5751__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__5751__auto__)) {
      var special_form = temp__5751__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__5751__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__5751__auto__)) {
    var arg_num = temp__5751__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4273__auto__ = 0;
    var y__4274__auto__ = width - cljs.core.count.call(null, s);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var G__3252 = arguments.length;
  switch(G__3252) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  if (cljs.core.seq.call(null, rows)) {
    var widths = cljs.core.map.call(null, function(k) {
      return cljs.core.apply.call(null, cljs.core.max, cljs.core.str.cljs$core$IFn$_invoke$arity$1(k).length, cljs.core.map.call(null, function(p1__3248_SHARP_) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, p1__3248_SHARP_, k)).length;
      }, rows));
    }, ks);
    var spacers = cljs.core.map.call(null, function(p1__3249_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__3249_SHARP_, "-"));
    }, widths);
    var fmt_row = function(leader, divider, trailer, row) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
        var iter__4582__auto__ = function cljs$pprint$iter__3263(s__3264) {
          return new cljs.core.LazySeq(null, function() {
            var s__3264__$1 = s__3264;
            while (true) {
              var temp__5753__auto__ = cljs.core.seq.call(null, s__3264__$1);
              if (temp__5753__auto__) {
                var s__3264__$2 = temp__5753__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__3264__$2)) {
                  var c__4580__auto__ = cljs.core.chunk_first.call(null, s__3264__$2);
                  var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
                  var b__3266 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
                  if (function() {
                    var i__3265 = 0;
                    while (true) {
                      if (i__3265 < size__4581__auto__) {
                        var vec__3267 = cljs.core._nth.call(null, c__4580__auto__, i__3265);
                        var col = cljs.core.nth.call(null, vec__3267, 0, null);
                        var width = cljs.core.nth.call(null, vec__3267, 1, null);
                        cljs.core.chunk_append.call(null, b__3266, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));
                        var G__3278 = i__3265 + 1;
                        i__3265 = G__3278;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__3266), cljs$pprint$iter__3263.call(null, cljs.core.chunk_rest.call(null, s__3264__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__3266), null);
                  }
                } else {
                  var vec__3270 = cljs.core.first.call(null, s__3264__$2);
                  var col = cljs.core.nth.call(null, vec__3270, 0, null);
                  var width = cljs.core.nth.call(null, vec__3270, 1, null);
                  return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)), cljs$pprint$iter__3263.call(null, cljs.core.rest.call(null, s__3264__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4582__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(p1__3250_SHARP_) {
          return cljs.core.get.call(null, row, p1__3250_SHARP_);
        }, ks), widths));
      }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join("");
    };
    cljs.core.println.call(null);
    cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
    cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
    var seq__3273 = cljs.core.seq.call(null, rows);
    var chunk__3274 = null;
    var count__3275 = 0;
    var i__3276 = 0;
    while (true) {
      if (i__3276 < count__3275) {
        var row = cljs.core._nth.call(null, chunk__3274, i__3276);
        cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
        var G__3279 = seq__3273;
        var G__3280 = chunk__3274;
        var G__3281 = count__3275;
        var G__3282 = i__3276 + 1;
        seq__3273 = G__3279;
        chunk__3274 = G__3280;
        count__3275 = G__3281;
        i__3276 = G__3282;
        continue;
      } else {
        var temp__5753__auto__ = cljs.core.seq.call(null, seq__3273);
        if (temp__5753__auto__) {
          var seq__3273__$1 = temp__5753__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__3273__$1)) {
            var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__3273__$1);
            var G__3283 = cljs.core.chunk_rest.call(null, seq__3273__$1);
            var G__3284 = c__4609__auto__;
            var G__3285 = cljs.core.count.call(null, c__4609__auto__);
            var G__3286 = 0;
            seq__3273 = G__3283;
            chunk__3274 = G__3284;
            count__3275 = G__3285;
            i__3276 = G__3286;
            continue;
          } else {
            var row = cljs.core.first.call(null, seq__3273__$1);
            cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
            var G__3287 = cljs.core.next.call(null, seq__3273__$1);
            var G__3288 = null;
            var G__3289 = 0;
            var G__3290 = 0;
            seq__3273 = G__3287;
            chunk__3274 = G__3288;
            count__3275 = G__3289;
            i__3276 = G__3290;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var G__3483 = arguments.length;
  switch(G__3483) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__3484 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__3484, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__3484;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4185__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___3489 = arguments.length;
  var i__4790__auto___3490 = 0;
  while (true) {
    if (i__4790__auto___3490 < len__4789__auto___3489) {
      args__4795__auto__.push(arguments[i__4790__auto___3490]);
      var G__3491 = i__4790__auto___3490 + 1;
      i__4790__auto___3490 = G__3491;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq3486) {
  var G__3487 = cljs.core.first.call(null, seq3486);
  var seq3486__$1 = cljs.core.next.call(null, seq3486);
  var G__3488 = cljs.core.first.call(null, seq3486__$1);
  var seq3486__$2 = cljs.core.next.call(null, seq3486__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3487, G__3488, seq3486__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__3493 = m;
  var map__3493__$1 = (!(map__3493 == null) ? map__3493.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3493.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__3493) : map__3493;
  var file = cljs.core.get.call(null, map__3493__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__3493__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__3493__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reverse.call(null, cljs.core.map.call(null, function(p1__3492_SHARP_) {
    return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__3492_SHARP_));
  }, (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), " (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ")"].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.test !== "undefined" && typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(m) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5753__auto___3495 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5753__auto___3495)) {
    var message_3496 = temp__5753__auto___3495;
    cljs.core.println.call(null, message_3496);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5753__auto___3497 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5753__auto___3497)) {
    var message_3498 = temp__5753__auto___3497;
    cljs.core.println.call(null, message_3498);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  if (cnt > 1) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [NaN, NaN], null);
  }
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  var output_dir = "target/cljsbuild-compiler-2";
  var output_dir__$1 = function() {
    var G__3499 = output_dir;
    if (!clojure.string.ends_with_QMARK_.call(null, output_dir, "/")) {
      return [G__3499, "/"].join("");
    } else {
      return G__3499;
    }
  }();
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split(output_dir__$1)).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__5751__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__5751__auto__)) {
    var source_map = temp__5751__auto__;
    var temp__5751__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__5751__auto____$1)) {
      var columns = temp__5751__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__5751__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__5751__auto____$2)) {
          var mapping = temp__5751__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__5751__auto__ = typeof exception.stack === "string" ? function() {
    var G__3501 = exception.stack;
    var G__3501__$1 = G__3501 == null ? null : clojure.string.split_lines.call(null, G__3501);
    var G__3501__$2 = G__3501__$1 == null ? null : cljs.core.get.call(null, G__3501__$1, depth);
    if (G__3501__$2 == null) {
      return null;
    } else {
      return clojure.string.trim.call(null, G__3501__$2);
    }
  }() : false;
  if (cljs.core.truth_(temp__5751__auto__)) {
    var stack_element = temp__5751__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__3502 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__3502, 0, null);
    var column = cljs.core.nth.call(null, vec__3502, 1, null);
    var vec__3505 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__3505, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__3505, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__3505, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__3508 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    var G__3508__$1 = G__3508 instanceof cljs.core.Keyword ? G__3508.fqn : null;
    switch(G__3508__$1) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__5753__auto__ = cljs.core.seq.call(null, fns);
    if (temp__5753__auto__) {
      var xs__6308__auto__ = temp__5753__auto__;
      var f = cljs.core.first.call(null, xs__6308__auto__);
      var obj = f.call(null);
      if (cljs.test.async_QMARK_.call(null, obj)) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__6308__auto__, temp__5753__auto__) {
            return function() {
              return cljs.test.run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__6308__auto__, temp__5753__auto__), null);
          return function(fns, d, obj, f, xs__6308__auto__, temp__5753__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__6308__auto__, temp__5753__auto__);
        }());
      } else {
        var G__3512 = function() {
          var G__3511 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__3511);
          } else {
            return G__3511;
          }
        }();
        fns = G__3512;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__3513 = fns;
  if (G__3513 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__3513, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e3514) {
      var e = e3514;
      var G__3515 = e;
      var G__3515__$1 = G__3515 instanceof cljs.core.Keyword ? G__3515.fqn : null;
      switch(G__3515__$1) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";
          break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__5751__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__5751__auto__)) {
    var t = temp__5751__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__3517 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__3517, 0, null);
  var types = vec__3517;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error(["Assert failed: ", "Fixtures may not be of mixed types", "\n", "(not-any? nil? types)"].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error(["Assert failed: ", "fixtures specified in :once and :each must be of the same type", "\n", "(\x3e 2 (count types))"].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.test.async_QMARK_.call(null, obj)) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__3520) {
    var vec__3521 = p__3520;
    var ns = cljs.core.nth.call(null, vec__3521, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__3521, 1, null);
    return function() {
      return cljs.test.block.call(null, function() {
        var env = cljs.test.get_current_env.call(null);
        var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
        var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
        var G__3524 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures);
        var G__3524__$1 = G__3524 instanceof cljs.core.Keyword ? G__3524.fqn : null;
        switch(G__3524__$1) {
          case "async":
            return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
            break;
          case "sync":
            var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function() {
                var seq__3525 = cljs.core.seq.call(null, vars__$1);
                var chunk__3526 = null;
                var count__3527 = 0;
                var i__3528 = 0;
                while (true) {
                  if (i__3528 < count__3527) {
                    var v = cljs.core._nth.call(null, chunk__3526, i__3528);
                    var temp__5753__auto___3530 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                    if (cljs.core.truth_(temp__5753__auto___3530)) {
                      var t_3531 = temp__5753__auto___3530;
                      each_fixture_fn.call(null, function(seq__3525, chunk__3526, count__3527, i__3528, t_3531, temp__5753__auto___3530, v, each_fixture_fn, G__3524, G__3524__$1, env, once_fixtures, each_fixtures, vec__3521, ns, vars__$1) {
                        return function() {
                          return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_3531)));
                        };
                      }(seq__3525, chunk__3526, count__3527, i__3528, t_3531, temp__5753__auto___3530, v, each_fixture_fn, G__3524, G__3524__$1, env, once_fixtures, each_fixtures, vec__3521, ns, vars__$1));
                    } else {
                    }
                    var G__3532 = seq__3525;
                    var G__3533 = chunk__3526;
                    var G__3534 = count__3527;
                    var G__3535 = i__3528 + 1;
                    seq__3525 = G__3532;
                    chunk__3526 = G__3533;
                    count__3527 = G__3534;
                    i__3528 = G__3535;
                    continue;
                  } else {
                    var temp__5753__auto__ = cljs.core.seq.call(null, seq__3525);
                    if (temp__5753__auto__) {
                      var seq__3525__$1 = temp__5753__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__3525__$1)) {
                        var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__3525__$1);
                        var G__3536 = cljs.core.chunk_rest.call(null, seq__3525__$1);
                        var G__3537 = c__4609__auto__;
                        var G__3538 = cljs.core.count.call(null, c__4609__auto__);
                        var G__3539 = 0;
                        seq__3525 = G__3536;
                        chunk__3526 = G__3537;
                        count__3527 = G__3538;
                        i__3528 = G__3539;
                        continue;
                      } else {
                        var v = cljs.core.first.call(null, seq__3525__$1);
                        var temp__5753__auto___3540__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                        if (cljs.core.truth_(temp__5753__auto___3540__$1)) {
                          var t_3541 = temp__5753__auto___3540__$1;
                          each_fixture_fn.call(null, function(seq__3525, chunk__3526, count__3527, i__3528, t_3541, temp__5753__auto___3540__$1, v, seq__3525__$1, temp__5753__auto__, each_fixture_fn, G__3524, G__3524__$1, env, once_fixtures, each_fixtures, vec__3521, ns, vars__$1) {
                            return function() {
                              return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_3541)));
                            };
                          }(seq__3525, chunk__3526, count__3527, i__3528, t_3541, temp__5753__auto___3540__$1, v, seq__3525__$1, temp__5753__auto__, each_fixture_fn, G__3524, G__3524__$1, env, once_fixtures, each_fixtures, vec__3521, ns, vars__$1));
                        } else {
                        }
                        var G__3542 = cljs.core.next.call(null, seq__3525__$1);
                        var G__3543 = null;
                        var G__3544 = 0;
                        var G__3545 = 0;
                        seq__3525 = G__3542;
                        chunk__3526 = G__3543;
                        count__3527 = G__3544;
                        i__3528 = G__3545;
                        continue;
                      }
                    } else {
                      return null;
                    }
                  }
                  break;
                }
              });
            }], null);
            break;
          default:
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__3524__$1)].join(""));
        }
      }());
    };
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("sophitia.test.data.validation_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("sophitia.data.validation");
sophitia.test.data.validation_test.valid_malli_field1 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "id", "id", -1388402092), "id1", new cljs.core.Keyword(null, "name", "name", 1843675177), "name1", new cljs.core.Keyword(null, "class", "class", -2030961996), "class1", new cljs.core.Keyword(null, "description", "description", -1428560544), "first class", new cljs.core.Keyword(null, "error-message", "error-message", 1756021561), null, new cljs.core.Keyword(null, "default-error-mesage", 
"default-error-mesage", 963160337), "Field not valid.", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validation-group", "validation-group", -591747153), "g1"], null);
sophitia.test.data.validation_test.valid_malli_field2 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "id", "id", -1388402092), "id2", new cljs.core.Keyword(null, "name", "name", 1843675177), "name2", new cljs.core.Keyword(null, "class", "class", -2030961996), "class2", new cljs.core.Keyword(null, "description", "description", -1428560544), "Second class", new cljs.core.Keyword(null, "error-message", "error-message", 1756021561), null, new cljs.core.Keyword(null, "default-error-mesage", 
"default-error-mesage", 963160337), "Field not valid.", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validation-group", "validation-group", -591747153), "g2"], null);
sophitia.test.data.validation_test.valid_malli_form = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "fields", "fields", -1932066230), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sophitia.test.data.validation_test.valid_malli_field1, sophitia.test.data.validation_test.valid_malli_field2], null), new cljs.core.Keyword(null, "validation-behavior", "validation-behavior", 219743720), "on-change", new cljs.core.Keyword(null, "schema", "schema", 
-1582001791), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.core.PersistentVector.EMPTY], null)], null), new cljs.core.Keyword(null, "validation-group-order", "validation-group-order", 139870265), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["g1", "g2"], null)], null);
sophitia.test.data.validation_test.validate_form_schema_test = function sophitia$test$data$validation_test$validate_form_schema_test() {
  return cljs.test.test_var.call(null, sophitia.test.data.validation_test.validate_form_schema_test.cljs$lang$var);
};
sophitia.test.data.validation_test.validate_form_schema_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "Invalid schema for an empty map");
  try {
    try {
      var values__10386__auto___10605 = new cljs.core.List(null, false, new cljs.core.List(null, sophitia.data.validation.validate_form_schema.call(null, cljs.core.PersistentArrayMap.EMPTY), null, 1, null), 2, null);
      var result__10387__auto___10606 = cljs.core.apply.call(null, cljs.core._EQ_, values__10386__auto___10605);
      if (cljs.core.truth_(result__10387__auto___10606)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), false, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), cljs.core.PersistentArrayMap.EMPTY)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10386__auto___10605), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), false, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), cljs.core.PersistentArrayMap.EMPTY)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10386__auto___10605), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e10603) {
      var t__10431__auto___10607 = e10603;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), false, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), cljs.core.PersistentArrayMap.EMPTY)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__10431__auto___10607, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "Valid basic form schema");
  try {
    try {
      var values__10386__auto__ = new cljs.core.List(null, true, new cljs.core.List(null, sophitia.data.validation.validate_form_schema.call(null, sophitia.test.data.validation_test.valid_malli_form), null, 1, null), 2, null);
      var result__10387__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10386__auto__);
      if (cljs.core.truth_(result__10387__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), new cljs.core.Symbol(null, "valid-malli-form", 
        "valid-malli-form", -1255200911, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10386__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), new cljs.core.Symbol(null, "valid-malli-form", 
        "valid-malli-form", -1255200911, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10386__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__10387__auto__;
    } catch (e10604) {
      var t__10431__auto__ = e10604;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), true, cljs.core.list(new cljs.core.Symbol("v", "validate-form-schema", "v/validate-form-schema", 1639394235, null), new cljs.core.Symbol(null, "valid-malli-form", 
      "valid-malli-form", -1255200911, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10431__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
sophitia.test.data.validation_test.validate_form_schema_test.cljs$lang$var = new cljs.core.Var(function() {
  return sophitia.test.data.validation_test.validate_form_schema_test;
}, new cljs.core.Symbol("sophitia.test.data.validation-test", "validate-form-schema-test", "sophitia.test.data.validation-test/validate-form-schema-test", -996502674, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.validation-test", "sophitia.test.data.validation-test", -1188451718, null), new cljs.core.Symbol(null, "validate-form-schema-test", "validate-form-schema-test", 
758523569, null), "test-cljs/sophitia/test/data/validation_test.cljs", 35, 1, 32, 32, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.validation_test.validate_form_schema_test) ? sophitia.test.data.validation_test.validate_form_schema_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env10608 = cljs.test.empty_env.call(null);
  var summary10609 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env10608);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.data.validation-test", "sophitia.test.data.validation-test", -1188451718, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
    return cljs.test.block.call(null, function() {
      var env__10499__auto__ = cljs.test.get_current_env.call(null);
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__10499__auto__ == null) {
          cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
        } else {
        }
        return null;
      }], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
        return sophitia.test.data.validation_test.validate_form_schema_test;
      }, new cljs.core.Symbol("sophitia.test.data.validation-test", "validate-form-schema-test", "sophitia.test.data.validation-test/validate-form-schema-test", -996502674, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
      2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.validation-test", "sophitia.test.data.validation-test", -1188451718, null), new cljs.core.Symbol(null, "validate-form-schema-test", "validate-form-schema-test", 
      758523569, null), "test-cljs/sophitia/test/data/validation_test.cljs", 35, 1, 32, 32, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.validation_test.validate_form_schema_test) ? sophitia.test.data.validation_test.validate_form_schema_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__10499__auto__ == null) {
          return cljs.test.clear_env_BANG_.call(null);
        } else {
          return null;
        }
      }], null));
    }());
  }, function() {
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.data.validation-test", "sophitia.test.data.validation-test", -1188451718, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
  }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.core._vreset_BANG_.call(null, summary10609, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary10609), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
  }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env10608);
    cljs.test.do_report.call(null, cljs.core.deref.call(null, summary10609));
    cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary10609), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
    return cljs.test.clear_env_BANG_.call(null);
  }], null));
}());
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbolsType");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_ar_DZ");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_be");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_bs");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_CA");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_es_MX");
goog.provide("goog.i18n.DateTimeSymbols_es_US");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_ga");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mo");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_sh");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sr_Latn");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan.", "Feb.", "Mrt.", "Apr.", "Mei", "Jun.", "Jul.", "Aug.", "Sep.", "Okt.", "Nov.", "Des."], STANDALONESHORTMONTHS:["Jan.", "Feb.", "Mrt.", "Apr.", "Mei", "Jun.", "Jul.", "Aug.", "Sep.", "Okt.", "Nov.", "Des."], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So.", "Ma.", "Di.", "Wo.", "Do.", 
"Vr.", "Sa."], STANDALONESHORTWEEKDAYS:["So.", "Ma.", "Di.", "Wo.", "Do.", "Vr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["ዓ/ዓ", "ዓ/ም"], ERANAMES:["ዓመተ ዓለም", "ዓመተ ምሕረት"], NARROWMONTHS:["ጃ", "ፌ", "ማ", "ኤ", "ሜ", "ጁ", "ጁ", "ኦ", "ሴ", "ኦ", "ኖ", "ዲ"], STANDALONENARROWMONTHS:["ጃ", "ፌ", "ማ", "ኤ", "ሜ", "ጁ", "ጁ", "ኦ", "ሴ", "ኦ", "ኖ", "ዲ"], MONTHS:["ጃንዩወሪ", "ፌብሩወሪ", "ማርች", "ኤፕሪል", "ሜይ", "ጁን", "ጁላይ", "ኦገስት", "ሴፕቴምበር", "ኦክቶበር", "ኖቬምበር", "ዲሴምበር"], STANDALONEMONTHS:["ጃንዩወሪ", "ፌብሩወሪ", "ማርች", "ኤፕሪል", "ሜይ", "ጁን", "ጁላይ", "ኦገስት", "ሴፕቴምበር", "ኦክቶበር", "ኖቬምበር", "ዲሴምበር"], SHORTMONTHS:["ጃንዩ", "ፌብሩ", "ማርች", 
"ኤፕሪ", "ሜይ", "ጁን", "ጁላይ", "ኦገስ", "ሴፕቴ", "ኦክቶ", "ኖቬም", "ዲሴም"], STANDALONESHORTMONTHS:["ጃንዩ", "ፌብሩ", "ማርች", "ኤፕሪ", "ሜይ", "ጁን", "ጁላይ", "ኦገስ", "ሴፕቴ", "ኦክቶ", "ኖቬም", "ዲሴም"], WEEKDAYS:["እሑድ", "ሰኞ", "ማክሰኞ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], STANDALONEWEEKDAYS:["እሑድ", "ሰኞ", "ማክሰኞ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], SHORTWEEKDAYS:["እሑድ", "ሰኞ", "ማክሰ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], STANDALONESHORTWEEKDAYS:["እሑድ", "ሰኞ", "ማክሰ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], NARROWWEEKDAYS:["እ", "ሰ", "ማ", "ረ", "ሐ", "ዓ", "ቅ"], STANDALONENARROWWEEKDAYS:["እ", 
"ሰ", "ማ", "ረ", "ሐ", "ዓ", "ቅ"], SHORTQUARTERS:["ሩብ1", "ሩብ2", "ሩብ3", "ሩብ4"], QUARTERS:["1ኛው ሩብ", "2ኛው ሩብ", "3ኛው ሩብ", "4ኛው ሩብ"], AMPMS:["ጥዋት", "ከሰዓት"], DATEFORMATS:["EEEE ፣d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["ق.م", "م"], ERANAMES:["قبل الميلاد", "ميلادي"], NARROWMONTHS:["ي", "ف", "م", "أ", "و", "ن", "ل", "غ", "س", "ك", "ب", "د"], STANDALONENARROWMONTHS:["ي", "ف", "م", "أ", "و", "ن", "ل", "غ", "س", "ك", "ب", "د"], MONTHS:["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], STANDALONEMONTHS:["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", 
"ديسمبر"], SHORTMONTHS:["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], STANDALONESHORTMONTHS:["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], WEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], STANDALONEWEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], SHORTWEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", 
"الخميس", "الجمعة", "السبت"], STANDALONESHORTWEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], NARROWWEEKDAYS:["ح", "ن", "ث", "ر", "خ", "ج", "س"], STANDALONENARROWWEEKDAYS:["ح", "ن", "ث", "ر", "خ", "ج", "س"], SHORTQUARTERS:["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"], QUARTERS:["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"], AMPMS:["ص", "م"], DATEFORMATS:["EEEE، d MMMM، y", "d MMMM، y", "dd‏/MM‏/y", "d‏/M‏/y"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_ar_DZ = {ERAS:["ق.م", "م"], ERANAMES:["قبل الميلاد", "ميلادي"], NARROWMONTHS:["ج", "ف", "م", "أ", "م", "ج", "ج", "أ", "س", "أ", "ن", "د"], STANDALONENARROWMONTHS:["ج", "ف", "م", "أ", "م", "ج", "ج", "أ", "س", "أ", "ن", "د"], MONTHS:["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], STANDALONEMONTHS:["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], SHORTMONTHS:["جانفي", 
"فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], STANDALONESHORTMONTHS:["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], WEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], STANDALONEWEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], SHORTWEEKDAYS:["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], STANDALONESHORTWEEKDAYS:["الأحد", 
"الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], NARROWWEEKDAYS:["ح", "ن", "ث", "ر", "خ", "ج", "س"], STANDALONENARROWWEEKDAYS:["ح", "ن", "ث", "ر", "خ", "ج", "س"], SHORTQUARTERS:["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"], QUARTERS:["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"], AMPMS:["ص", "م"], DATEFORMATS:["EEEE، d MMMM، y", "d MMMM، y", "dd‏/MM‏/y", "d‏/M‏/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.ə.", "y.e."], ERANAMES:["eramızdan əvvəl", "yeni era"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "İyun", "İyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", 
"Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ertəsi", "çərşənbə axşamı", "çərşənbə", "cümə axşamı", "cümə", "şənbə"], STANDALONEWEEKDAYS:["bazar", "bazar ertəsi", "çərşənbə axşamı", "çərşənbə", "cümə axşamı", "cümə", "şənbə"], SHORTWEEKDAYS:["B.", "B.E.", "Ç.A.", "Ç.", "C.A.", "C.", "Ş."], STANDALONESHORTWEEKDAYS:["B.", 
"B.E.", "Ç.A.", "Ç.", "C.A.", "C.", "Ş."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-cü kv.", "4-cü kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-cü kvartal", "4-cü kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_be = {ERAS:["да н.э.", "н.э."], ERANAMES:["да нараджэння Хрыстова", "ад нараджэння Хрыстова"], NARROWMONTHS:["с", "л", "с", "к", "м", "ч", "л", "ж", "в", "к", "л", "с"], STANDALONENARROWMONTHS:["с", "л", "с", "к", "м", "ч", "л", "ж", "в", "к", "л", "с"], MONTHS:["студзеня", "лютага", "сакавіка", "красавіка", "мая", "чэрвеня", "ліпеня", "жніўня", "верасня", "кастрычніка", "лістапада", "снежня"], STANDALONEMONTHS:["студзень", "люты", "сакавік", "красавік", "май", "чэрвень", 
"ліпень", "жнівень", "верасень", "кастрычнік", "лістапад", "снежань"], SHORTMONTHS:["сту", "лют", "сак", "кра", "мая", "чэр", "ліп", "жні", "вер", "кас", "ліс", "сне"], STANDALONESHORTMONTHS:["сту", "лют", "сак", "кра", "май", "чэр", "ліп", "жні", "вер", "кас", "ліс", "сне"], WEEKDAYS:["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"], STANDALONEWEEKDAYS:["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"], SHORTWEEKDAYS:["нд", "пн", "аў", "ср", 
"чц", "пт", "сб"], STANDALONESHORTWEEKDAYS:["нд", "пн", "аў", "ср", "чц", "пт", "сб"], NARROWWEEKDAYS:["н", "п", "а", "с", "ч", "п", "с"], STANDALONENARROWWEEKDAYS:["н", "п", "а", "с", "ч", "п", "с"], SHORTQUARTERS:["1-шы кв.", "2-гі кв.", "3-ці кв.", "4-ты кв."], QUARTERS:["1-шы квартал", "2-гі квартал", "3-ці квартал", "4-ты квартал"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d.MM.y", "d.MM.yy"], TIMEFORMATS:["HH:mm:ss, zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'у' {0}", "{1} 'у' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["пр.Хр.", "сл.Хр."], ERANAMES:["преди Христа", "след Христа"], NARROWMONTHS:["я", "ф", "м", "а", "м", "ю", "ю", "а", "с", "о", "н", "д"], STANDALONENARROWMONTHS:["я", "ф", "м", "а", "м", "ю", "ю", "а", "с", "о", "н", "д"], MONTHS:["януари", "февруари", "март", "април", "май", "юни", "юли", "август", "септември", "октомври", "ноември", "декември"], STANDALONEMONTHS:["януари", "февруари", "март", "април", "май", "юни", "юли", "август", "септември", "октомври", 
"ноември", "декември"], SHORTMONTHS:["яну", "фев", "март", "апр", "май", "юни", "юли", "авг", "сеп", "окт", "ное", "дек"], STANDALONESHORTMONTHS:["яну", "фев", "март", "апр", "май", "юни", "юли", "авг", "сеп", "окт", "ное", "дек"], WEEKDAYS:["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"], STANDALONEWEEKDAYS:["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"], SHORTWEEKDAYS:["нд", "пн", "вт", "ср", "чт", "пт", "сб"], STANDALONESHORTWEEKDAYS:["нд", 
"пн", "вт", "ср", "чт", "пт", "сб"], NARROWWEEKDAYS:["н", "п", "в", "с", "ч", "п", "с"], STANDALONENARROWWEEKDAYS:["н", "п", "в", "с", "ч", "п", "с"], SHORTQUARTERS:["1. трим.", "2. трим.", "3. трим.", "4. трим."], QUARTERS:["1. тримесечие", "2. тримесечие", "3. тримесечие", "4. тримесечие"], AMPMS:["пр.об.", "сл.об."], DATEFORMATS:["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d.MM.y 'г'.", "d.MM.yy 'г'."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", 
"{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["খ্রিস্টপূর্ব", "খৃষ্টাব্দ"], ERANAMES:["খ্রিস্টপূর্ব", "খৃষ্টাব্দ"], NARROWMONTHS:["জা", "ফে", "মা", "এ", "মে", "জুন", "জু", "আ", "সে", "অ", "ন", "ডি"], STANDALONENARROWMONTHS:["জা", "ফে", "মা", "এ", "মে", "জুন", "জু", "আ", "সে", "অ", "ন", "ডি"], MONTHS:["জানুয়ারী", "ফেব্রুয়ারী", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], STANDALONEMONTHS:["জানুয়ারী", "ফেব্রুয়ারী", "মার্চ", "এপ্রিল", 
"মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], SHORTMONTHS:["জানু", "ফেব", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], STANDALONESHORTMONTHS:["জানুয়ারী", "ফেব্রুয়ারী", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], WEEKDAYS:["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার", "শুক্রবার", "শনিবার"], STANDALONEWEEKDAYS:["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", 
"বৃহষ্পতিবার", "শুক্রবার", "শনিবার"], SHORTWEEKDAYS:["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহস্পতি", "শুক্র", "শনি"], STANDALONESHORTWEEKDAYS:["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহস্পতি", "শুক্র", "শনি"], NARROWWEEKDAYS:["র", "সো", "ম", "বু", "বৃ", "শু", "শ"], STANDALONENARROWWEEKDAYS:["র", "সো", "ম", "বু", "বৃ", "শু", "শ"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ত্রৈমাসিক", "দ্বিতীয় ত্রৈমাসিক", "তৃতীয় ত্রৈমাসিক", "চতুর্থ ত্রৈমাসিক"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", 
"d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["a-raok J.K.", "goude J.K."], ERANAMES:["a-raok Jezuz-Krist", "goude Jezuz-Krist"], NARROWMONTHS:["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"], STANDALONENARROWMONTHS:["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"], MONTHS:["Genver", "Cʼhwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "Cʼhwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", 
"Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], SHORTMONTHS:["Gen.", "Cʼhwe.", "Meur.", "Ebr.", "Mae", "Mezh.", "Goue.", "Eost", "Gwen.", "Here", "Du", "Kzu."], STANDALONESHORTMONTHS:["Gen.", "Cʼhwe.", "Meur.", "Ebr.", "Mae", "Mezh.", "Goue.", "Eost", "Gwen.", "Here", "Du", "Ker."], WEEKDAYS:["Sul", "Lun", "Meurzh", "Mercʼher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Mercʼher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["Sul", "Lun", "Meu.", "Mer.", "Yaou", 
"Gwe.", "Sad."], STANDALONESHORTWEEKDAYS:["Sul", "Lun", "Meu.", "Mer.", "Yaou", "Gwe.", "Sad."], NARROWWEEKDAYS:["Su", "L", "Mz", "Mc", "Y", "G", "Sa"], STANDALONENARROWWEEKDAYS:["Su", "L", "Mz", "Mc", "Y", "G", "Sa"], SHORTQUARTERS:["1añ trim.", "2l trim.", "3e trim.", "4e trim."], QUARTERS:["1añ trimiziad", "2l trimiziad", "3e trimiziad", "4e trimiziad"], AMPMS:["A.M.", "G.M."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} 'da' {0}", "{1} 'da' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bs = {ERAS:["p. n. e.", "n. e."], ERANAMES:["prije nove ere", "nove ere"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"], STANDALONEMONTHS:["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", 
"novembar", "decembar"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "čet", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", 
"pon", "uto", "sri", "čet", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "Č", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Prvi kvartal", "Drugi kvartal", "Treći kvartal", "Četvrti kvartal"], AMPMS:["prijepodne", "popodne"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM. y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "després de Crist"], NARROWMONTHS:["GN", "FB", "MÇ", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "MÇ", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["de gener", "de febrer", "de març", "d’abril", "de maig", "de juny", "de juliol", "d’agost", "de setembre", "d’octubre", "de novembre", "de desembre"], STANDALONEMONTHS:["gener", "febrer", "març", "abril", "maig", 
"juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["de gen.", "de febr.", "de març", "d’abr.", "de maig", "de juny", "de jul.", "d’ag.", "de set.", "d’oct.", "de nov.", "de des."], STANDALONESHORTMONTHS:["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", 
"divendres", "dissabte"], SHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "d MMM y", "d/M/yy"], 
TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} 'a' 'les' {0}", "{1} 'a' 'les' {0}", "{1}, {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["BC", "AD"], ERANAMES:["ᏧᏓᎷᎸ ᎤᎷᎯᏍᏗ ᎦᎶᏁᏛ", "ᎠᏃ ᏙᎻᏂ"], NARROWMONTHS:["Ꭴ", "Ꭷ", "Ꭰ", "Ꭷ", "Ꭰ", "Ꮥ", "Ꭻ", "Ꭶ", "Ꮪ", "Ꮪ", "Ꮕ", "Ꭵ"], STANDALONENARROWMONTHS:["Ꭴ", "Ꭷ", "Ꭰ", "Ꭷ", "Ꭰ", "Ꮥ", "Ꭻ", "Ꭶ", "Ꮪ", "Ꮪ", "Ꮕ", "Ꭵ"], MONTHS:["ᎤᏃᎸᏔᏅ", "ᎧᎦᎵ", "ᎠᏅᏱ", "ᎧᏬᏂ", "ᎠᏂᏍᎬᏘ", "ᏕᎭᎷᏱ", "ᎫᏰᏉᏂ", "ᎦᎶᏂ", "ᏚᎵᏍᏗ", "ᏚᏂᏅᏗ", "ᏅᏓᏕᏆ", "ᎥᏍᎩᏱ"], STANDALONEMONTHS:["ᎤᏃᎸᏔᏅ", "ᎧᎦᎵ", "ᎠᏅᏱ", "ᎧᏬᏂ", "ᎠᏂᏍᎬᏘ", "ᏕᎭᎷᏱ", "ᎫᏰᏉᏂ", "ᎦᎶᏂ", "ᏚᎵᏍᏗ", "ᏚᏂᏅᏗ", "ᏅᏓᏕᏆ", "ᎥᏍᎩᏱ"], SHORTMONTHS:["ᎤᏃ", "ᎧᎦ", "ᎠᏅ", "ᎧᏬ", 
"ᎠᏂ", "ᏕᎭ", "ᎫᏰ", "ᎦᎶ", "ᏚᎵ", "ᏚᏂ", "ᏅᏓ", "ᎥᏍ"], STANDALONESHORTMONTHS:["ᎤᏃ", "ᎧᎦ", "ᎠᏅ", "ᎧᏬ", "ᎠᏂ", "ᏕᎭ", "ᎫᏰ", "ᎦᎶ", "ᏚᎵ", "ᏚᏂ", "ᏅᏓ", "ᎥᏍ"], WEEKDAYS:["ᎤᎾᏙᏓᏆᏍᎬ", "ᎤᎾᏙᏓᏉᏅᎯ", "ᏔᎵᏁᎢᎦ", "ᏦᎢᏁᎢᎦ", "ᏅᎩᏁᎢᎦ", "ᏧᎾᎩᎶᏍᏗ", "ᎤᎾᏙᏓᏈᏕᎾ"], STANDALONEWEEKDAYS:["ᎤᎾᏙᏓᏆᏍᎬ", "ᎤᎾᏙᏓᏉᏅᎯ", "ᏔᎵᏁᎢᎦ", "ᏦᎢᏁᎢᎦ", "ᏅᎩᏁᎢᎦ", "ᏧᎾᎩᎶᏍᏗ", "ᎤᎾᏙᏓᏈᏕᎾ"], SHORTWEEKDAYS:["ᏆᏍᎬ", "ᏉᏅᎯ", "ᏔᎵᏁ", "ᏦᎢᏁ", "ᏅᎩᏁ", "ᏧᎾᎩ", "ᏈᏕᎾ"], STANDALONESHORTWEEKDAYS:["ᏆᏍᎬ", "ᏉᏅᎯ", "ᏔᎵᏁ", "ᏦᎢᏁ", "ᏅᎩᏁ", "ᏧᎾᎩ", "ᏈᏕᎾ"], NARROWWEEKDAYS:["Ꮖ", "Ꮙ", "Ꮤ", "Ꮶ", "Ꮕ", "Ꮷ", 
"Ꭴ"], STANDALONENARROWWEEKDAYS:["Ꮖ", "Ꮙ", "Ꮤ", "Ꮶ", "Ꮕ", "Ꮷ", "Ꭴ"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st ᎩᏄᏙᏗ", "2nd ᎩᏄᏙᏗ", "3rd ᎩᏄᏙᏗ", "4th ᎩᏄᏙᏗ"], AMPMS:["ᏌᎾᎴ", "ᏒᎯᏱᎢᏗᏢ"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} ᎤᎾᎢ {0}", "{1} ᎤᎾᎢ {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_cs = {ERAS:["př. n. l.", "n. l."], ERANAMES:["př. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["ledna", "února", "března", "dubna", "května", "června", "července", "srpna", "září", "října", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "únor", "březen", "duben", "květen", "červen", "červenec", "srpen", "září", "říjen", 
"listopad", "prosinec"], SHORTMONTHS:["led", "úno", "bře", "dub", "kvě", "čvn", "čvc", "srp", "zář", "říj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "úno", "bře", "dub", "kvě", "čvn", "čvc", "srp", "zář", "říj", "lis", "pro"], WEEKDAYS:["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"], STANDALONEWEEKDAYS:["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"], SHORTWEEKDAYS:["ne", "po", "út", "st", "čt", "pá", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "út", 
"st", "čt", "pá", "so"], NARROWWEEKDAYS:["N", "P", "Ú", "S", "Č", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "Ú", "S", "Č", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"], AMPMS:["dop.", "odp."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Maw", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["yb", "yh"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], WEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], STANDALONEWEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], SHORTWEEKDAYS:["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."], STANDALONESHORTWEEKDAYS:["søn", 
"man", "tir", "ons", "tor", "fre", "lør"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMMM y", "d. MMM y", "dd/MM/y"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl'. {0}", "{1} 'kl'. {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", 
"Dezember"], SHORTMONTHS:["Jan.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", 
"Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'um' {0}", "{1} 'um' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Jänner", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Jänner", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", 
"Dezember"], SHORTMONTHS:["Jän.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jän", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", 
"Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'um' {0}", "{1} 'um' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["π.Χ.", "μ.Χ."], ERANAMES:["προ Χριστού", "μετά Χριστόν"], NARROWMONTHS:["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"], STANDALONENARROWMONTHS:["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"], MONTHS:["Ιανουαρίου", "Φεβρουαρίου", "Μαρτίου", "Απριλίου", "Μαΐου", "Ιουνίου", "Ιουλίου", "Αυγούστου", "Σεπτεμβρίου", "Οκτωβρίου", "Νοεμβρίου", "Δεκεμβρίου"], STANDALONEMONTHS:["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", 
"Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"], SHORTMONTHS:["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαΐ", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"], STANDALONESHORTMONTHS:["Ιαν", "Φεβ", "Μάρ", "Απρ", "Μάι", "Ιούν", "Ιούλ", "Αύγ", "Σεπ", "Οκτ", "Νοέ", "Δεκ"], WEEKDAYS:["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"], STANDALONEWEEKDAYS:["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"], SHORTWEEKDAYS:["Κυρ", "Δευ", 
"Τρί", "Τετ", "Πέμ", "Παρ", "Σάβ"], STANDALONESHORTWEEKDAYS:["Κυρ", "Δευ", "Τρί", "Τετ", "Πέμ", "Παρ", "Σάβ"], NARROWWEEKDAYS:["Κ", "Δ", "Τ", "Τ", "Π", "Π", "Σ"], STANDALONENARROWWEEKDAYS:["Κ", "Δ", "Τ", "Τ", "Π", "Π", "Σ"], SHORTQUARTERS:["Τ1", "Τ2", "Τ3", "Τ4"], QUARTERS:["1ο τρίμηνο", "2ο τρίμηνο", "3ο τρίμηνο", "4ο τρίμηνο"], AMPMS:["π.μ.", "μ.μ."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", 
"{1} - {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec."], STANDALONESHORTMONTHS:["Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec."], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun.", "Mon.", "Tue.", "Wed.", "Thu.", "Fri.", 
"Sat."], STANDALONESHORTWEEKDAYS:["Sun.", "Mon.", "Tue.", "Wed.", "Thu.", "Fri.", "Sat."], NARROWWEEKDAYS:["Su.", "M.", "Tu.", "W.", "Th.", "F.", "Sa."], STANDALONENARROWWEEKDAYS:["Su.", "M.", "Tu.", "W.", "Th.", "F.", "Sa."], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", 
"{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_CA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "después de Cristo"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], WEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], SHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", 
"vie.", "sáb."], STANDALONESHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.º trimestre", "3.er trimestre", "4.º trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "después de Cristo"], NARROWMONTHS:["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], WEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], SHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", 
"vie.", "sáb."], STANDALONESHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], NARROWWEEKDAYS:["d", "l", "m", "m", "j", "v", "s"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.º trimestre", "3.er trimestre", "4.º trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_es_MX = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "después de Cristo"], NARROWMONTHS:["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], STANDALONESHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], WEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], SHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], 
STANDALONESHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["1er. trim.", "2º. trim.", "3er. trim.", "4º trim."], QUARTERS:["1er. trimestre", "2º. trimestre", "3er. trimestre", "4o. trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es_US = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "después de Cristo"], NARROWMONTHS:["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], WEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], SHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", 
"vie.", "sáb."], STANDALONESHORTWEEKDAYS:["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], NARROWWEEKDAYS:["d", "l", "m", "m", "j", "v", "s"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.º trimestre", "3.er trimestre", "4.º trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", 
"h:mm a"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_et = {ERAS:["eKr", "pKr"], ERANAMES:["enne Kristust", "pärast Kristust"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", 
"oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"], STANDALONEWEEKDAYS:["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"], SHORTWEEKDAYS:["P", "E", "T", "K", 
"N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "Kristo ondoren"], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"], STANDALONEMONTHS:["urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", 
"Urria", "Azaroa", "Abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "yy/M/d"], TIMEFORMATS:["HH:mm:ss (zzzz)", "HH:mm:ss (z)", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["ق.م.", "م."], ERANAMES:["قبل از میلاد", "میلادی"], NARROWMONTHS:["ژ", "ف", "م", "آ", "م", "ژ", "ژ", "ا", "س", "ا", "ن", "د"], STANDALONENARROWMONTHS:["ژ", "ف", "م", "آ", "م", "ژ", "ژ", "ا", "س", "ا", "ن", "د"], MONTHS:["ژانویهٔ", "فوریهٔ", "مارس", "آوریل", "مهٔ", "ژوئن", "ژوئیهٔ", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], STANDALONEMONTHS:["ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], 
SHORTMONTHS:["ژانویهٔ", "فوریهٔ", "مارس", "آوریل", "مهٔ", "ژوئن", "ژوئیهٔ", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], STANDALONESHORTMONTHS:["ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], WEEKDAYS:["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], STANDALONEWEEKDAYS:["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], SHORTWEEKDAYS:["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", 
"شنبه"], STANDALONESHORTWEEKDAYS:["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], NARROWWEEKDAYS:["ی", "د", "س", "چ", "پ", "ج", "ش"], STANDALONENARROWWEEKDAYS:["ی", "د", "س", "چ", "پ", "ج", "ش"], SHORTQUARTERS:["س‌م۱", "س‌م۲", "س‌م۳", "س‌م۴"], QUARTERS:["سه‌ماههٔ اول", "سه‌ماههٔ دوم", "سه‌ماههٔ سوم", "سه‌ماههٔ چهارم"], AMPMS:["قبل‌ازظهر", "بعدازظهر"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}، ساعت {0}", "{1}، ساعت {0}", "{1}،‏ {0}", "{1}،‏ {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntymää", "jälkeen Kristuksen syntymän"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kesäkuuta", "heinäkuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", "helmikuu", 
"maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammik.", "helmik.", "maalisk.", "huhtik.", "toukok.", "kesäk.", "heinäk.", "elok.", "syysk.", "lokak.", "marrask.", "jouluk."], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", "tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], 
STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. neljännes", "2. neljännes", "3. neljännes", "4. neljännes"], AMPMS:["ap.", 
"ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} 'klo' {0}", "{1} 'klo' {0}", "{1} 'klo' {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", 
"Oktubre", "Nobyembre", "Disyembre"], SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", 
"Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONENARROWWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'nang' {0}", "{1} 'nang' {0}", 
"{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant Jésus-Christ", "après Jésus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"], STANDALONEMONTHS:["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", 
"septembre", "octobre", "novembre", "décembre"], SHORTMONTHS:["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], STANDALONESHORTMONTHS:["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", 
"mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'à' {0}", 
"{1} 'à' {0}", "{1} 'à' {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant Jésus-Christ", "après Jésus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"], STANDALONEMONTHS:["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", 
"septembre", "octobre", "novembre", "décembre"], SHORTMONTHS:["janv.", "févr.", "mars", "avr.", "mai", "juin", "juill.", "août", "sept.", "oct.", "nov.", "déc."], STANDALONESHORTMONTHS:["janv.", "févr.", "mars", "avr.", "mai", "juin", "juill.", "août", "sept.", "oct.", "nov.", "déc."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", 
"mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "yy-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH 'h' mm"], 
DATETIMEFORMATS:["{1} 'à' {0}", "{1} 'à' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ga = {ERAS:["RC", "AD"], ERANAMES:["Roimh Chríost", "Anno Domini"], NARROWMONTHS:["E", "F", "M", "A", "B", "M", "I", "L", "M", "D", "S", "N"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "B", "M", "I", "L", "M", "D", "S", "N"], MONTHS:["Eanáir", "Feabhra", "Márta", "Aibreán", "Bealtaine", "Meitheamh", "Iúil", "Lúnasa", "Meán Fómhair", "Deireadh Fómhair", "Samhain", "Nollaig"], STANDALONEMONTHS:["Eanáir", "Feabhra", "Márta", "Aibreán", "Bealtaine", "Meitheamh", "Iúil", "Lúnasa", 
"Meán Fómhair", "Deireadh Fómhair", "Samhain", "Nollaig"], SHORTMONTHS:["Ean", "Feabh", "Márta", "Aib", "Beal", "Meith", "Iúil", "Lún", "MFómh", "DFómh", "Samh", "Noll"], STANDALONESHORTMONTHS:["Ean", "Feabh", "Márta", "Aib", "Beal", "Meith", "Iúil", "Lún", "MFómh", "DFómh", "Samh", "Noll"], WEEKDAYS:["Dé Domhnaigh", "Dé Luain", "Dé Máirt", "Dé Céadaoin", "Déardaoin", "Dé hAoine", "Dé Sathairn"], STANDALONEWEEKDAYS:["Dé Domhnaigh", "Dé Luain", "Dé Máirt", "Dé Céadaoin", "Déardaoin", "Dé hAoine", 
"Dé Sathairn"], SHORTWEEKDAYS:["Domh", "Luan", "Máirt", "Céad", "Déar", "Aoine", "Sath"], STANDALONESHORTWEEKDAYS:["Domh", "Luan", "Máirt", "Céad", "Déar", "Aoine", "Sath"], NARROWWEEKDAYS:["D", "L", "M", "C", "D", "A", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "C", "D", "A", "S"], SHORTQUARTERS:["R1", "R2", "R3", "R4"], QUARTERS:["1ú ráithe", "2ú ráithe", "3ú ráithe", "4ú ráithe"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["x.", "f.", "m.", "a.", "m.", "x.", "x.", "a.", "s.", "o.", "n.", "d."], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xuño", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xuño", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan.", "feb.", "mar.", "abr.", "maio", "xuño", "xul.", "ago.", "set.", "out.", "nov.", "dec."], STANDALONESHORTMONTHS:["Xan.", "Feb.", "Mar.", "Abr.", "Maio", "Xuño", "Xul.", "Ago.", "Set.", "Out.", "Nov.", "Dec."], WEEKDAYS:["domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado"], SHORTWEEKDAYS:["dom.", "luns", "mar.", "mér.", "xov.", 
"ven.", "sáb."], STANDALONESHORTWEEKDAYS:["Dom.", "Luns", "Mar.", "Mér.", "Xov.", "Ven.", "Sáb."], NARROWWEEKDAYS:["d.", "l.", "m.", "m.", "x.", "v.", "s."], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.º trimestre", "2.º trimestre", "3.º trimestre", "4.º trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d 'de' MMM 'de' y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} 'do' {1}", "{0} 'do' {1}", "{0}, {1}", "{0}, {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "Auguscht", "Septämber", "Oktoober", "Novämber", "Dezämber"], STANDALONEMONTHS:["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "Auguscht", "Septämber", "Oktoober", 
"Novämber", "Dezämber"], SHORTMONTHS:["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "Määntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "Määntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], SHORTWEEKDAYS:["Su.", "Mä.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", 
"Mä.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["am Vormittag", "am Namittag"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["ઈ.સ.પૂર્વે", "ઈ.સ."], ERANAMES:["ઈસવીસન પૂર્વે", "ઇસવીસન"], NARROWMONTHS:["જા", "ફે", "મા", "એ", "મે", "જૂ", "જુ", "ઑ", "સ", "ઑ", "ન", "ડિ"], STANDALONENARROWMONTHS:["જા", "ફે", "મા", "એ", "મે", "જૂ", "જુ", "ઑ", "સ", "ઑ", "ન", "ડિ"], MONTHS:["જાન્યુઆરી", "ફેબ્રુઆરી", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટેમ્બર", "ઑક્ટોબર", "નવેમ્બર", "ડિસેમ્બર"], STANDALONEMONTHS:["જાન્યુઆરી", "ફેબ્રુઆરી", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટેમ્બર", 
"ઑક્ટોબર", "નવેમ્બર", "ડિસેમ્બર"], SHORTMONTHS:["જાન્યુ", "ફેબ્રુ", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટે", "ઑક્ટો", "નવે", "ડિસે"], STANDALONESHORTMONTHS:["જાન્યુ", "ફેબ્રુ", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટે", "ઑક્ટો", "નવે", "ડિસે"], WEEKDAYS:["રવિવાર", "સોમવાર", "મંગળવાર", "બુધવાર", "ગુરુવાર", "શુક્રવાર", "શનિવાર"], STANDALONEWEEKDAYS:["રવિવાર", "સોમવાર", "મંગળવાર", "બુધવાર", "ગુરુવાર", "શુક્રવાર", "શનિવાર"], SHORTWEEKDAYS:["રવિ", "સોમ", "મંગળ", "બુધ", 
"ગુરુ", "શુક્ર", "શનિ"], STANDALONESHORTWEEKDAYS:["રવિ", "સોમ", "મંગળ", "બુધ", "ગુરુ", "શુક્ર", "શનિ"], NARROWWEEKDAYS:["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"], STANDALONENARROWWEEKDAYS:["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["પહેલો ત્રિમાસ", "બીજો ત્રિમાસ", "ત્રીજો ત્રિમાસ", "ચોથો ત્રિમાસ"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "ʻApelila", "Mei", "Iune", "Iulai", "ʻAukake", "Kepakemapa", "ʻOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "ʻApelila", "Mei", "Iune", "Iulai", "ʻAukake", "Kepakemapa", "ʻOkakopa", 
"Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "ʻAp.", "Mei", "Iun.", "Iul.", "ʻAu.", "Kep.", "ʻOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "ʻAp.", "Mei", "Iun.", "Iul.", "ʻAu.", "Kep.", "ʻOk.", "Now.", "Kek."], WEEKDAYS:["Lāpule", "Poʻakahi", "Poʻalua", "Poʻakolu", "Poʻahā", "Poʻalima", "Poʻaono"], STANDALONEWEEKDAYS:["Lāpule", "Poʻakahi", "Poʻalua", "Poʻakolu", "Poʻahā", "Poʻalima", "Poʻaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", 
"P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["לפנה״ס", "לספירה"], ERANAMES:["לפני הספירה", "לספירה"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], STANDALONEMONTHS:["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], 
SHORTMONTHS:["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], STANDALONESHORTMONTHS:["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], WEEKDAYS:["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"], STANDALONEWEEKDAYS:["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"], SHORTWEEKDAYS:["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", 
"שבת"], STANDALONESHORTWEEKDAYS:["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", "שבת"], NARROWWEEKDAYS:["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], STANDALONENARROWWEEKDAYS:["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["רבעון 1", "רבעון 2", "רבעון 3", "רבעון 4"], AMPMS:["לפנה״צ", "אחה״צ"], DATEFORMATS:["EEEE, d בMMMM y", "d בMMMM y", "d בMMM y", "d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} בשעה {0}", 
"{1} בשעה {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["ईसा-पूर्व", "ईस्वी"], ERANAMES:["ईसा-पूर्व", "ईसवी सन"], NARROWMONTHS:["ज", "फ़", "मा", "अ", "म", "जू", "जु", "अ", "सि", "अ", "न", "दि"], STANDALONENARROWMONTHS:["ज", "फ़", "मा", "अ", "म", "जू", "जु", "अ", "सि", "अ", "न", "दि"], MONTHS:["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितंबर", "अक्तूबर", "नवंबर", "दिसंबर"], STANDALONEMONTHS:["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितंबर", "अक्तूबर", "नवंबर", 
"दिसंबर"], SHORTMONTHS:["जन॰", "फ़र॰", "मार्च", "अप्रैल", "मई", "जून", "जुल॰", "अग॰", "सित॰", "अक्तू॰", "नव॰", "दिस॰"], STANDALONESHORTMONTHS:["जन॰", "फ़र॰", "मार्च", "अप्रैल", "मई", "जून", "जुल॰", "अग॰", "सित॰", "अक्तू॰", "नव॰", "दिस॰"], WEEKDAYS:["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], STANDALONEWEEKDAYS:["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], SHORTWEEKDAYS:["रवि", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"], STANDALONESHORTWEEKDAYS:["रवि", 
"सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"], NARROWWEEKDAYS:["र", "सो", "मं", "बु", "गु", "शु", "श"], STANDALONENARROWWEEKDAYS:["र", "सो", "मं", "बु", "गु", "शु", "श"], SHORTQUARTERS:["ति1", "ति2", "ति3", "ति4"], QUARTERS:["पहली तिमाही", "दूसरी तिमाही", "तीसरी तिमाही", "चौथी तिमाही"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} को {0}", "{1} को {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "po. Kr."], ERANAMES:["prije Krista", "poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["siječnja", "veljače", "ožujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["siječanj", "veljača", "ožujak", "travanj", 
"svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"], SHORTWEEKDAYS:["ned", 
"pon", "uto", "sri", "čet", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "čet", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "Č", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "dd. MM. y."], TIMEFORMATS:["HH:mm:ss (zzzz)", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["időszámításunk előtt", "időszámításunk szerint"], NARROWMONTHS:["J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"], STANDALONEMONTHS:["január", "február", "március", "április", "május", "június", 
"július", "augusztus", "szeptember", "október", "november", "december"], SHORTMONTHS:["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"], STANDALONEWEEKDAYS:["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"], SHORTWEEKDAYS:["V", 
"H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], QUARTERS:["I. negyedév", "II. negyedév", "III. negyedév", "IV. negyedév"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["մ.թ.ա.", "մ.թ."], ERANAMES:["Քրիստոսից առաջ", "Քրիստոսից հետո"], NARROWMONTHS:["Հ", "Փ", "Մ", "Ա", "Մ", "Հ", "Հ", "Օ", "Ս", "Հ", "Ն", "Դ"], STANDALONENARROWMONTHS:["Հ", "Փ", "Մ", "Ա", "Մ", "Հ", "Հ", "Օ", "Ս", "Հ", "Ն", "Դ"], MONTHS:["հունվարի", "փետրվարի", "մարտի", "ապրիլի", "մայիսի", "հունիսի", "հուլիսի", "օգոստոսի", "սեպտեմբերի", "հոկտեմբերի", "նոյեմբերի", "դեկտեմբերի"], STANDALONEMONTHS:["հունվար", "փետրվար", "մարտ", "ապրիլ", "մայիս", "հունիս", "հուլիս", 
"օգոստոս", "սեպտեմբեր", "հոկտեմբեր", "նոյեմբեր", "դեկտեմբեր"], SHORTMONTHS:["հնվ", "փտվ", "մրտ", "ապր", "մյս", "հնս", "հլս", "օգս", "սեպ", "հոկ", "նոյ", "դեկ"], STANDALONESHORTMONTHS:["հնվ", "փտվ", "մրտ", "ապր", "մյս", "հնս", "հլս", "օգս", "սեպ", "հոկ", "նոյ", "դեկ"], WEEKDAYS:["կիրակի", "երկուշաբթի", "երեքշաբթի", "չորեքշաբթի", "հինգշաբթի", "ուրբաթ", "շաբաթ"], STANDALONEWEEKDAYS:["կիրակի", "երկուշաբթի", "երեքշաբթի", "չորեքշաբթի", "հինգշաբթի", "ուրբաթ", "շաբաթ"], SHORTWEEKDAYS:["կիր", "երկ", "երք", 
"չրք", "հնգ", "ուր", "շբթ"], STANDALONESHORTWEEKDAYS:["կիր", "երկ", "երք", "չրք", "հնգ", "ուր", "շբթ"], NARROWWEEKDAYS:["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"], STANDALONENARROWWEEKDAYS:["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"], SHORTQUARTERS:["1-ին եռմս.", "2-րդ եռմս.", "3-րդ եռմս.", "4-րդ եռմս."], QUARTERS:["1-ին եռամսյակ", "2-րդ եռամսյակ", "3-րդ եռամսյակ", "4-րդ եռամսյակ"], AMPMS:["AM", "PM"], DATEFORMATS:["y թ. MMMM d, EEEE", "dd MMMM, y թ.", "dd MMM, y թ.", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["Sebelum Masehi", "Masehi"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", 
"Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", 
"Jum", "Sab"], NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["Sebelum Masehi", "Masehi"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", 
"Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", 
"Jum", "Sab"], NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "Á", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "Á", "S", "O", "N", "D"], MONTHS:["janúar", "febrúar", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "september", "október", "nóvember", "desember"], STANDALONEMONTHS:["janúar", "febrúar", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "september", "október", "nóvember", 
"desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maí", "jún.", "júl.", "ágú.", "sep.", "okt.", "nóv.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maí", "jún.", "júl.", "ágú.", "sep.", "okt.", "nóv.", "des."], WEEKDAYS:["sunnudagur", "mánudagur", "þriðjudagur", "miðvikudagur", "fimmtudagur", "föstudagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "mánudagur", "þriðjudagur", "miðvikudagur", "fimmtudagur", "föstudagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "mán.", 
"þri.", "mið.", "fim.", "fös.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "mán.", "þri.", "mið.", "fim.", "fös.", "lau."], NARROWWEEKDAYS:["S", "M", "Þ", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "Þ", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fjórðungur", "2. fjórðungur", "3. fjórðungur", "4. fjórðungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} 'kl'. {0}", "{1} 'kl'. {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["a.C.", "d.C."], ERANAMES:["avanti Cristo", "dopo Cristo"], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", 
"ottobre", "novembre", "dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"], STANDALONEWEEKDAYS:["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", 
"lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["לפנה״ס", "לספירה"], ERANAMES:["לפני הספירה", "לספירה"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], STANDALONEMONTHS:["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], 
SHORTMONTHS:["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], STANDALONESHORTMONTHS:["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], WEEKDAYS:["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"], STANDALONEWEEKDAYS:["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"], SHORTWEEKDAYS:["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", 
"שבת"], STANDALONESHORTWEEKDAYS:["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", "שבת"], NARROWWEEKDAYS:["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], STANDALONENARROWWEEKDAYS:["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["רבעון 1", "רבעון 2", "רבעון 3", "רבעון 4"], AMPMS:["לפנה״צ", "אחה״צ"], DATEFORMATS:["EEEE, d בMMMM y", "d בMMMM y", "d בMMM y", "d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} בשעה {0}", 
"{1} בשעה {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["紀元前", "西暦"], ERANAMES:["紀元前", "西暦"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], STANDALONEMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], SHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", 
"12月"], STANDALONESHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], WEEKDAYS:["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"], STANDALONEWEEKDAYS:["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"], SHORTWEEKDAYS:["日", "月", "火", "水", "木", "金", "土"], STANDALONESHORTWEEKDAYS:["日", "月", "火", "水", "木", "金", "土"], NARROWWEEKDAYS:["日", "月", "火", "水", "木", "金", "土"], STANDALONENARROWWEEKDAYS:["日", "月", "火", "水", "木", "金", "土"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], 
QUARTERS:["第1四半期", "第2四半期", "第3四半期", "第4四半期"], AMPMS:["午前", "午後"], DATEFORMATS:["y年M月d日EEEE", "y年M月d日", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H時mm分ss秒 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["ძვ. წ.", "ახ. წ."], ERANAMES:["ძველი წელთაღრიცხვით", "ახალი წელთაღრიცხვით"], NARROWMONTHS:["ი", "თ", "მ", "ა", "მ", "ი", "ი", "ა", "ს", "ო", "ნ", "დ"], STANDALONENARROWMONTHS:["ი", "თ", "მ", "ა", "მ", "ი", "ი", "ა", "ს", "ო", "ნ", "დ"], MONTHS:["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"], STANDALONEMONTHS:["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", 
"აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"], SHORTMONTHS:["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"], STANDALONESHORTMONTHS:["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"], WEEKDAYS:["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"], STANDALONEWEEKDAYS:["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"], SHORTWEEKDAYS:["კვი", "ორშ", "სამ", 
"ოთხ", "ხუთ", "პარ", "შაბ"], STANDALONESHORTWEEKDAYS:["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"], NARROWWEEKDAYS:["კ", "ო", "ს", "ო", "ხ", "პ", "შ"], STANDALONENARROWWEEKDAYS:["კ", "ო", "ს", "ო", "ხ", "პ", "შ"], SHORTQUARTERS:["I კვ.", "II კვ.", "III კვ.", "IV კვ."], QUARTERS:["I კვარტალი", "II კვარტალი", "III კვარტალი", "IV კვარტალი"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM. y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["б.з.д.", "б.з."], ERANAMES:["Біздің заманымызға дейін", "Біздің заманымыз"], NARROWMONTHS:["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"], STANDALONENARROWMONTHS:["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"], MONTHS:["қаңтар", "ақпан", "наурыз", "сәуір", "мамыр", "маусым", "шілде", "тамыз", "қыркүйек", "қазан", "қараша", "желтоқсан"], STANDALONEMONTHS:["Қаңтар", "Ақпан", "Наурыз", "Сәуір", "Мамыр", "Маусым", "Шілде", "Тамыз", "Қыркүйек", 
"Қазан", "Қараша", "Желтоқсан"], SHORTMONTHS:["қаң.", "ақп.", "нау.", "сәу.", "мам.", "мау.", "шіл.", "там.", "қыр.", "қаз.", "қар.", "жел."], STANDALONESHORTMONTHS:["Қаң.", "Ақп.", "Нау.", "Сәу.", "Мам.", "Мау.", "Шіл.", "Там.", "Қыр.", "Қаз.", "Қар.", "Жел."], WEEKDAYS:["жексенбі", "дүйсенбі", "сейсенбі", "сәрсенбі", "бейсенбі", "жұма", "сенбі"], STANDALONEWEEKDAYS:["Жексенбі", "Дүйсенбі", "Сейсенбі", "Сәрсенбі", "Бейсенбі", "Жұма", "Сенбі"], SHORTWEEKDAYS:["Жс", "Дс", "Сс", "Ср", "Бс", "Жм", "Сб"], 
STANDALONESHORTWEEKDAYS:["Жс", "Дс", "Сс", "Ср", "Бс", "Жм", "Сб"], NARROWWEEKDAYS:["Ж", "Д", "С", "С", "Б", "Ж", "С"], STANDALONENARROWWEEKDAYS:["Ж", "Д", "С", "С", "Б", "Ж", "С"], SHORTQUARTERS:["І ш.", "ІІ ш.", "ІІІ ш.", "IV ш."], QUARTERS:["І ширек", "ІІ ширек", "ІІІ ширек", "IV ширек"], AMPMS:["AM", "PM"], DATEFORMATS:["y 'ж'. d MMMM, EEEE", "y 'ж'. d MMMM", "y 'ж'. dd MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", 
"{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["មុន គ.ស.", "គ.ស."], ERANAMES:["មុន​គ្រិស្តសករាជ", "គ្រិស្តសករាជ"], NARROWMONTHS:["ម", "ក", "ម", "ម", "ឧ", "ម", "ក", "ស", "ក", "ត", "វ", "ធ"], STANDALONENARROWMONTHS:["ម", "ក", "ម", "ម", "ឧ", "ម", "ក", "ស", "ក", "ត", "វ", "ធ"], MONTHS:["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], STANDALONEMONTHS:["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], 
SHORTMONTHS:["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], STANDALONESHORTMONTHS:["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], WEEKDAYS:["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"], STANDALONEWEEKDAYS:["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"], SHORTWEEKDAYS:["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"], 
STANDALONESHORTWEEKDAYS:["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"], NARROWWEEKDAYS:["អ", "ច", "អ", "ព", "ព", "ស", "ស"], STANDALONENARROWWEEKDAYS:["អ", "ច", "អ", "ព", "ព", "ស", "ស"], SHORTQUARTERS:["ត្រីមាសទី 1", "ត្រីមាសទី 2", "ត្រីមាសទី 3", "ត្រីមាសទី 4"], QUARTERS:["ត្រីមាសទី 1", "ត្រីមាសទី 2", "ត្រីមាសទី 3", "ត្រីមាសទី 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], 
DATETIMEFORMATS:["{1} នៅ​ម៉ោង {0}", "{1} នៅ​ម៉ោង {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"], ERANAMES:["ಕ್ರಿಸ್ತ ಪೂರ್ವ", "ಕ್ರಿಸ್ತ ಶಕ"], NARROWMONTHS:["ಜ", "ಫೆ", "ಮಾ", "ಏ", "ಮೇ", "ಜೂ", "ಜು", "ಆ", "ಸೆ", "ಅ", "ನ", "ಡಿ"], STANDALONENARROWMONTHS:["ಜ", "ಫೆ", "ಮಾ", "ಏ", "ಮೇ", "ಜೂ", "ಜು", "ಆ", "ಸೆ", "ಅ", "ನ", "ಡಿ"], MONTHS:["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಏಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟೆಂಬರ್", "ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"], STANDALONEMONTHS:["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಏಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟೆಂಬರ್", 
"ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"], SHORTMONTHS:["ಜನ", "ಫೆಬ್ರ", "ಮಾರ್ಚ್", "ಏಪ್ರಿ", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗ", "ಸೆಪ್ಟೆಂ", "ಅಕ್ಟೋ", "ನವೆಂ", "ಡಿಸೆಂ"], STANDALONESHORTMONTHS:["ಜನ", "ಫೆಬ್ರ", "ಮಾರ್ಚ್", "ಏಪ್ರಿ", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗ", "ಸೆಪ್ಟೆಂ", "ಅಕ್ಟೋ", "ನವೆಂ", "ಡಿಸೆಂ"], WEEKDAYS:["ಭಾನುವಾರ", "ಸೋಮವಾರ", "ಮಂಗಳವಾರ", "ಬುಧವಾರ", "ಗುರುವಾರ", "ಶುಕ್ರವಾರ", "ಶನಿವಾರ"], STANDALONEWEEKDAYS:["ಭಾನುವಾರ", "ಸೋಮವಾರ", "ಮಂಗಳವಾರ", "ಬುಧವಾರ", "ಗುರುವಾರ", "ಶುಕ್ರವಾರ", "ಶನಿವಾರ"], SHORTWEEKDAYS:["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", 
"ಶುಕ್ರ", "ಶನಿ"], STANDALONESHORTWEEKDAYS:["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"], NARROWWEEKDAYS:["ಭಾ", "ಸೋ", "ಮಂ", "ಬು", "ಗು", "ಶು", "ಶ"], STANDALONENARROWWEEKDAYS:["ಭಾ", "ಸೋ", "ಮಂ", "ಬು", "ಗು", "ಶು", "ಶ"], SHORTQUARTERS:["ತ್ರೈ 1", "ತ್ರೈ 2", "ತ್ರೈ 3", "ತ್ರೈ 4"], QUARTERS:["1ನೇ ತ್ರೈಮಾಸಿಕ", "2ನೇ ತ್ರೈಮಾಸಿಕ", "3ನೇ ತ್ರೈಮಾಸಿಕ", "4ನೇ ತ್ರೈಮಾಸಿಕ"], AMPMS:["ಪೂರ್ವಾಹ್ನ", "ಅಪರಾಹ್ನ"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "d/M/yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", 
"hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["BC", "AD"], ERANAMES:["기원전", "서기"], NARROWMONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], STANDALONENARROWMONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], MONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], STANDALONEMONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], SHORTMONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", 
"9월", "10월", "11월", "12월"], STANDALONESHORTMONTHS:["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], WEEKDAYS:["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"], STANDALONEWEEKDAYS:["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"], SHORTWEEKDAYS:["일", "월", "화", "수", "목", "금", "토"], STANDALONESHORTWEEKDAYS:["일", "월", "화", "수", "목", "금", "토"], NARROWWEEKDAYS:["일", "월", "화", "수", "목", "금", "토"], STANDALONENARROWWEEKDAYS:["일", "월", "화", "수", "목", "금", "토"], SHORTQUARTERS:["1분기", 
"2분기", "3분기", "4분기"], QUARTERS:["제 1/4분기", "제 2/4분기", "제 3/4분기", "제 4/4분기"], AMPMS:["오전", "오후"], DATEFORMATS:["y년 M월 d일 EEEE", "y년 M월 d일", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h시 m분 s초 zzzz", "a h시 m분 s초 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["б.з.ч.", "б.з."], ERANAMES:["биздин заманга чейин", "биздин заман"], NARROWMONTHS:["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], STANDALONENARROWMONTHS:["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], MONTHS:["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"], STANDALONEMONTHS:["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", 
"Ноябрь", "Декабрь"], SHORTMONTHS:["янв.", "фев.", "мар.", "апр.", "май", "июн.", "июл.", "авг.", "сен.", "окт.", "ноя.", "дек."], STANDALONESHORTMONTHS:["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"], WEEKDAYS:["жекшемби", "дүйшөмбү", "шейшемби", "шаршемби", "бейшемби", "жума", "ишемби"], STANDALONEWEEKDAYS:["жекшемби", "дүйшөмбү", "шейшемби", "шаршемби", "бейшемби", "жума", "ишемби"], SHORTWEEKDAYS:["жек.", "дүй.", "шейш.", "шарш.", "бейш.", "жума", "ишм."], 
STANDALONESHORTWEEKDAYS:["жек.", "дүй.", "шейш.", "шарш.", "бейш.", "жума", "ишм."], NARROWWEEKDAYS:["Ж", "Д", "Ш", "Ш", "Б", "Ж", "И"], STANDALONENARROWWEEKDAYS:["Ж", "Д", "Ш", "Ш", "Б", "Ж", "И"], SHORTQUARTERS:["1-чей.", "2-чей.", "3-чей.", "4-чей."], QUARTERS:["1-чейрек", "2-чейрек", "3-чейрек", "4-чейрек"], AMPMS:["таңкы", "түштөн кийинки"], DATEFORMATS:["y-'ж'., d-MMMM, EEEE", "y-'ж'., d-MMMM", "y-'ж'., d-MMM", "d/M/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["libóso ya", "nsima ya Y"], ERANAMES:["Yambo ya Yézu Krís", "Nsima ya Yézu Krís"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "ɔ", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "ɔ", "n", "d"], MONTHS:["sánzá ya yambo", "sánzá ya míbalé", "sánzá ya mísáto", "sánzá ya mínei", "sánzá ya mítáno", "sánzá ya motóbá", "sánzá ya nsambo", "sánzá ya mwambe", "sánzá ya libwa", "sánzá ya zómi", "sánzá ya zómi na mɔ̌kɔ́", 
"sánzá ya zómi na míbalé"], STANDALONEMONTHS:["sánzá ya yambo", "sánzá ya míbalé", "sánzá ya mísáto", "sánzá ya mínei", "sánzá ya mítáno", "sánzá ya motóbá", "sánzá ya nsambo", "sánzá ya mwambe", "sánzá ya libwa", "sánzá ya zómi", "sánzá ya zómi na mɔ̌kɔ́", "sánzá ya zómi na míbalé"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "ɔtb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "ɔtb", "nvb", "dsb"], WEEKDAYS:["eyenga", 
"mokɔlɔ mwa yambo", "mokɔlɔ mwa míbalé", "mokɔlɔ mwa mísáto", "mokɔlɔ ya mínéi", "mokɔlɔ ya mítáno", "mpɔ́sɔ"], STANDALONEWEEKDAYS:["eyenga", "mokɔlɔ mwa yambo", "mokɔlɔ mwa míbalé", "mokɔlɔ mwa mísáto", "mokɔlɔ ya mínéi", "mokɔlɔ ya mítáno", "mpɔ́sɔ"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", 
"p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["sánzá mísáto ya yambo", "sánzá mísáto ya míbalé", "sánzá mísáto ya mísáto", "sánzá mísáto ya mínei"], AMPMS:["ntɔ́ngɔ́", "mpókwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["ກ່ອນ ຄ.ສ.", "ຄ.ສ."], ERANAMES:["ກ່ອນຄຣິດສັກກະລາດ", "ຄຣິດສັກກະລາດ"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["ມັງກອນ", "ກຸມພາ", "ມີນາ", "ເມສາ", "ພຶດສະພາ", "ມິຖຸນາ", "ກໍລະກົດ", "ສິງຫາ", "ກັນຍາ", "ຕຸລາ", "ພະຈິກ", "ທັນວາ"], STANDALONEMONTHS:["ມັງກອນ", "ກຸມພາ", "ມີນາ", "ເມສາ", "ພຶດສະພາ", "ມິຖຸນາ", "ກໍລະກົດ", "ສິງຫາ", "ກັນຍາ", "ຕຸລາ", 
"ພະຈິກ", "ທັນວາ"], SHORTMONTHS:["ມ.ກ.", "ກ.ພ.", "ມ.ນ.", "ມ.ສ.", "ພ.ພ.", "ມິ.ຖ.", "ກ.ລ.", "ສ.ຫ.", "ກ.ຍ.", "ຕ.ລ.", "ພ.ຈ.", "ທ.ວ."], STANDALONESHORTMONTHS:["ມ.ກ.", "ກ.ພ.", "ມ.ນ.", "ມ.ສ.", "ພ.ພ.", "ມິ.ຖ.", "ກ.ລ.", "ສ.ຫ.", "ກ.ຍ.", "ຕ.ລ.", "ພ.ຈ.", "ທ.ວ."], WEEKDAYS:["ວັນອາທິດ", "ວັນຈັນ", "ວັນອັງຄານ", "ວັນພຸດ", "ວັນພະຫັດ", "ວັນສຸກ", "ວັນເສົາ"], STANDALONEWEEKDAYS:["ວັນອາທິດ", "ວັນຈັນ", "ວັນອັງຄານ", "ວັນພຸດ", "ວັນພະຫັດ", "ວັນສຸກ", "ວັນເສົາ"], SHORTWEEKDAYS:["ອາທິດ", "ຈັນ", "ອັງຄານ", "ພຸດ", "ພະຫັດ", "ສຸກ", 
"ເສົາ"], STANDALONESHORTWEEKDAYS:["ອາທິດ", "ຈັນ", "ອັງຄານ", "ພຸດ", "ພະຫັດ", "ສຸກ", "ເສົາ"], NARROWWEEKDAYS:["ອາ", "ຈ", "ອ", "ພ", "ພຫ", "ສຸ", "ສ"], STANDALONENARROWWEEKDAYS:["ອາ", "ຈ", "ອ", "ພ", "ພຫ", "ສຸ", "ສ"], SHORTQUARTERS:["ຕມ1", "ຕມ2", "ຕມ3", "ຕມ4"], QUARTERS:["ໄຕຣມາດ 1", "ໄຕຣມາດ 2", "ໄຕຣມາດ 3", "ໄຕຣມາດ 4"], AMPMS:["ກ່ອນທ່ຽງ", "ຫຼັງທ່ຽງ"], DATEFORMATS:["EEEE ທີ d MMMM G y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H ໂມງ m ນາທີ ss ວິນາທີ zzzz", "H ໂມງ m ນາທີ ss ວິນາທີ z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prieš Kristų", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausio", "vasario", "kovo", "balandžio", "gegužės", "birželio", "liepos", "rugpjūčio", "rugsėjo", "spalio", "lapkričio", "gruodžio"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", "balandis", "gegužė", "birželis", "liepa", "rugpjūtis", 
"rugsėjis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "birž.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "birž.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "trečiadienis", "ketvirtadienis", "penktadienis", "šeštadienis"], STANDALONEWEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "trečiadienis", "ketvirtadienis", 
"penktadienis", "šeštadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "št"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "št"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "Š"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "Š"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["priešpiet", "popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y-MM-dd", 
"y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.ē.", "m.ē."], ERANAMES:["pirms mūsu ēras", "mūsu ērā"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvāris", "februāris", "marts", "aprīlis", "maijs", "jūnijs", "jūlijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["janvāris", "februāris", "marts", "aprīlis", "maijs", "jūnijs", "jūlijs", "augusts", 
"septembris", "oktobris", "novembris", "decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "jūn.", "jūl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "jūn.", "jūl.", "aug.", "sept.", "okt.", "nov.", "dec."], WEEKDAYS:["svētdiena", "pirmdiena", "otrdiena", "trešdiena", "ceturtdiena", "piektdiena", "sestdiena"], STANDALONEWEEKDAYS:["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"], 
SHORTWEEKDAYS:["svētd.", "pirmd.", "otrd.", "trešd.", "ceturtd.", "piektd.", "sestd."], STANDALONESHORTWEEKDAYS:["Svētd.", "Pirmd.", "Otrd.", "Trešd.", "Ceturtd.", "Piektd.", "Sestd."], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["1. cet.", "2. cet.", "3. cet.", "4. cet."], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priekšpusdienā", "pēcpusdienā"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", 
"y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["пр.н.е.", "н.е."], ERANAMES:["пред нашата ера", "од нашата ера"], NARROWMONTHS:["ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д"], STANDALONENARROWMONTHS:["ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д"], MONTHS:["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"], STANDALONEMONTHS:["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", 
"ноември", "декември"], SHORTMONTHS:["јан.", "фев.", "мар.", "апр.", "мај", "јун.", "јул.", "авг.", "септ.", "окт.", "ноем.", "дек."], STANDALONESHORTMONTHS:["јан.", "фев.", "мар.", "апр.", "мај", "јун.", "јул.", "авг.", "септ.", "окт.", "ноем.", "дек."], WEEKDAYS:["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"], STANDALONEWEEKDAYS:["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"], SHORTWEEKDAYS:["нед.", "пон.", "вт.", "сре.", "чет.", "пет.", "саб."], 
STANDALONESHORTWEEKDAYS:["нед.", "пон.", "вто.", "сре.", "чет.", "пет.", "саб."], NARROWWEEKDAYS:["н", "п", "в", "с", "ч", "п", "с"], STANDALONENARROWWEEKDAYS:["н", "п", "в", "с", "ч", "п", "с"], SHORTQUARTERS:["јан-мар", "апр-јун", "јул-сеп", "окт-дек"], QUARTERS:["прво тромесечје", "второ тромесечје", "трето тромесечје", "четврто тромесечје"], AMPMS:["претпладне", "попладне"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["ക്രി.മു.", "എഡി"], ERANAMES:["ക്രിസ്‌തുവിന് മുമ്പ്", "ആന്നോ ഡൊമിനി"], NARROWMONTHS:["ജ", "ഫ", "മാ", "ഏ", "മെ", "ജൂൺ", "ജൂ", "ഓ", "സെ", "ഒ", "ന", "ഡി"], STANDALONENARROWMONTHS:["ജ", "ഫെ", "മാ", "ഏ", "മെ", "ജൂൺ", "ജൂ", "ഓ", "സെ", "ഒ", "ന", "ഡി"], MONTHS:["ജനുവരി", "ഫെബ്രുവരി", "മാർച്ച്", "ഏപ്രിൽ", "മേയ്", "ജൂൺ", "ജൂലൈ", "ഓഗസ്റ്റ്", "സെപ്റ്റംബർ", "ഒക്‌ടോബർ", "നവംബർ", "ഡിസംബർ"], STANDALONEMONTHS:["ജനുവരി", "ഫെബ്രുവരി", "മാർച്ച്", "ഏപ്രിൽ", "മേയ്", "ജൂൺ", "ജൂലൈ", 
"ഓഗസ്റ്റ്", "സെപ്റ്റംബർ", "ഒക്‌ടോബർ", "നവംബർ", "ഡിസംബർ"], SHORTMONTHS:["ജനു", "ഫെബ്രു", "മാർ", "ഏപ്രി", "മേയ്", "ജൂൺ", "ജൂലൈ", "ഓഗ", "സെപ്റ്റം", "ഒക്ടോ", "നവം", "ഡിസം"], STANDALONESHORTMONTHS:["ജനു", "ഫെബ്രു", "മാർ", "ഏപ്രി", "മേയ്", "ജൂൺ", "ജൂലൈ", "ഓഗ", "സെപ്റ്റം", "ഒക്ടോ", "നവം", "ഡിസം"], WEEKDAYS:["ഞായറാഴ്‌ച", "തിങ്കളാഴ്‌ച", "ചൊവ്വാഴ്ച", "ബുധനാഴ്‌ച", "വ്യാഴാഴ്‌ച", "വെള്ളിയാഴ്‌ച", "ശനിയാഴ്‌ച"], STANDALONEWEEKDAYS:["ഞായറാഴ്‌ച", "തിങ്കളാഴ്‌ച", "ചൊവ്വാഴ്‌ച", "ബുധനാഴ്‌ച", "വ്യാഴാഴ്‌ച", "വെള്ളിയാഴ്‌ച", 
"ശനിയാഴ്‌ച"], SHORTWEEKDAYS:["ഞായർ", "തിങ്കൾ", "ചൊവ്വ", "ബുധൻ", "വ്യാഴം", "വെള്ളി", "ശനി"], STANDALONESHORTWEEKDAYS:["ഞായർ", "തിങ്കൾ", "ചൊവ്വ", "ബുധൻ", "വ്യാഴം", "വെള്ളി", "ശനി"], NARROWWEEKDAYS:["ഞ", "തി", "ചൊ", "ബു", "വ്യാ", "വെ", "ശ"], STANDALONENARROWWEEKDAYS:["ഞാ", "തി", "ചൊ", "ബു", "വ്യാ", "വെ", "ശ"], SHORTQUARTERS:["ഒന്നാം പാദം", "രണ്ടാം പാദം", "മൂന്നാം പാദം", "നാലാം പാദം"], QUARTERS:["ഒന്നാം പാദം", "രണ്ടാം പാദം", "മൂന്നാം പാദം", "നാലാം പാദം"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", 
"y, MMMM d", "y, MMM d", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["м.э.ө", "м.э."], ERANAMES:["манай эриний өмнөх", "манай эриний"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Нэгдүгээр сар", "Хоёрдугаар сар", "Гуравдугаар сар", "Дөрөвдүгээр сар", "Тавдугаар сар", "Зургадугаар сар", "Долдугаар сар", "Наймдугаар сар", "Есдүгээр сар", "Аравдугаар сар", "Арван нэгдүгээр сар", "Арван хоёрдугаар сар"], 
STANDALONEMONTHS:["Нэгдүгээр сар", "Хоёрдугаар сар", "Гуравдугаар сар", "Дөрөвдүгээр сар", "Тавдугаар сар", "Зургадугаар сар", "Долдугаар сар", "Наймдугаар сар", "Есдүгээр сар", "Аравдугаар сар", "Арван нэгдүгээр сар", "Арван хоёрдугаар сар"], SHORTMONTHS:["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], STANDALONESHORTMONTHS:["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", 
"9-р сар", "10-р сар", "11-р сар", "12-р сар"], WEEKDAYS:["ням", "даваа", "мягмар", "лхагва", "пүрэв", "баасан", "бямба"], STANDALONEWEEKDAYS:["ням", "даваа", "мягмар", "лхагва", "пүрэв", "баасан", "бямба"], SHORTWEEKDAYS:["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], STANDALONESHORTWEEKDAYS:["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], NARROWWEEKDAYS:["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], STANDALONENARROWWEEKDAYS:["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], SHORTQUARTERS:["У1", "У2", "У3", "У4"], 
QUARTERS:["1-р улирал", "2-р улирал", "3-р улирал", "4-р улирал"], AMPMS:["ү.ө", "ү.х"], DATEFORMATS:["EEEE, y 'оны' MM 'сарын' d", "y'оны' MMMM'сарын' d'өдөр'", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mo = {ERAS:["î.Hr.", "d.Hr."], ERANAMES:["înainte de Hristos", "după Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", 
"septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"], STANDALONEWEEKDAYS:["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"], SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", 
"Vin", "Sâm"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "Sâm"], NARROWWEEKDAYS:["D", "L", "Ma", "Mi", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "Ma", "Mi", "J", "V", "S"], SHORTQUARTERS:["trim. 1", "trim. 2", "trim. 3", "trim. 4"], QUARTERS:["trimestrul 1", "trimestrul 2", "trimestrul 3", "trimestrul 4"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", 
"{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["इ. स. पू.", "इ. स."], ERANAMES:["ईसवीसनपूर्व", "ईसवीसन"], NARROWMONTHS:["जा", "फे", "मा", "ए", "मे", "जू", "जु", "ऑ", "स", "ऑ", "नो", "डि"], STANDALONENARROWMONTHS:["जा", "फे", "मा", "ए", "मे", "जू", "जु", "ऑ", "स", "ऑ", "नो", "डि"], MONTHS:["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोव्हेंबर", "डिसेंबर"], STANDALONEMONTHS:["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", 
"ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोव्हेंबर", "डिसेंबर"], SHORTMONTHS:["जाने", "फेब्रु", "मार्च", "एप्रि", "मे", "जून", "जुलै", "ऑग", "सप्टें", "ऑक्टो", "नोव्हें", "डिसें"], STANDALONESHORTMONTHS:["जाने", "फेब्रु", "मार्च", "एप्रि", "मे", "जून", "जुलै", "ऑग", "सप्टें", "ऑक्टो", "नोव्हें", "डिसें"], WEEKDAYS:["रविवार", "सोमवार", "मंगळवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], STANDALONEWEEKDAYS:["रविवार", "सोमवार", "मंगळवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], SHORTWEEKDAYS:["रवि", 
"सोम", "मंगळ", "बुध", "गुरु", "शुक्र", "शनि"], STANDALONESHORTWEEKDAYS:["रवि", "सोम", "मंगळ", "बुध", "गुरु", "शुक्र", "शनि"], NARROWWEEKDAYS:["र", "सो", "मं", "बु", "गु", "शु", "श"], STANDALONENARROWWEEKDAYS:["र", "सो", "मं", "बु", "गु", "शु", "श"], SHORTQUARTERS:["ति१", "ति२", "ति३", "ति४"], QUARTERS:["प्रथम तिमाही", "द्वितीय तिमाही", "तृतीय तिमाही", "चतुर्थ तिमाही"], AMPMS:["म.पू.", "म.उ."], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} रोजी {0}", "{1} रोजी {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "Ġ", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Jn", "Fr", "Mz", "Ap", "Mj", "Ġn", "Lj", "Aw", "St", "Ob", "Nv", "Dċ"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "Ġunju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Diċembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "Ġunju", "Lulju", "Awwissu", "Settembru", 
"Ottubru", "Novembru", "Diċembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "Ġun", "Lul", "Aww", "Set", "Ott", "Nov", "Diċ"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "Ġun", "Lul", "Aww", "Set", "Ott", "Nov", "Diċ"], WEEKDAYS:["Il-Ħadd", "It-Tnejn", "It-Tlieta", "L-Erbgħa", "Il-Ħamis", "Il-Ġimgħa", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-Ħadd", "It-Tnejn", "It-Tlieta", "L-Erbgħa", "Il-Ħamis", "Il-Ġimgħa", "Is-Sibt"], SHORTWEEKDAYS:["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"], 
STANDALONESHORTWEEKDAYS:["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"], NARROWWEEKDAYS:["Ħd", "T", "Tl", "Er", "Ħm", "Ġm", "Sb"], STANDALONENARROWWEEKDAYS:["Ħd", "Tn", "Tl", "Er", "Ħm", "Ġm", "Sb"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1el kwart", "2ni kwart", "3et kwart", "4ba’ kwart"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'ta'’ MMMM y", "d 'ta'’ MMMM y", "dd MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["ဘီစီ", "အေဒီ"], ERANAMES:["ခရစ်တော် မပေါ်မီနှစ်", "ခရစ်နှစ်"], NARROWMONTHS:["ဇ", "ဖ", "မ", "ဧ", "မ", "ဇ", "ဇ", "ဩ", "စ", "အ", "န", "ဒ"], STANDALONENARROWMONTHS:["ဇ", "ဖ", "မ", "ဧ", "မ", "ဇ", "ဇ", "ဩ", "စ", "အ", "န", "ဒ"], MONTHS:["ဇန်နဝါရီ", "ဖေဖော်ဝါရီ", "မတ်", "ဧပြီ", "မေ", "ဇွန်", "ဇူလိုင်", "ဩဂုတ်", "စက်တင်ဘာ", "အောက်တိုဘာ", "နိုဝင်ဘာ", "ဒီဇင်ဘာ"], STANDALONEMONTHS:["ဇန်နဝါရီ", "ဖေဖော်ဝါရီ", "မတ်", "ဧပြီ", "မေ", "ဇွန်", "ဇူလိုင်", "ဩဂုတ်", 
"စက်တင်ဘာ", "အောက်တိုဘာ", "နိုဝင်ဘာ", "ဒီဇင်ဘာ"], SHORTMONTHS:["ဇန်", "ဖေ", "မတ်", "ဧ", "မေ", "ဇွန်", "ဇူ", "ဩ", "စက်", "အောက်", "နို", "ဒီ"], STANDALONESHORTMONTHS:["ဇန်", "ဖေ", "မတ်", "ဧ", "မေ", "ဇွန်", "ဇူ", "ဩ", "စက်", "အောက်", "နို", "ဒီ"], WEEKDAYS:["တနင်္ဂနွေ", "တနင်္လာ", "အင်္ဂါ", "ဗုဒ္ဓဟူး", "ကြာသပတေး", "သောကြာ", "စနေ"], STANDALONEWEEKDAYS:["တနင်္ဂနွေ", "တနင်္လာ", "အင်္ဂါ", "ဗုဒ္ဓဟူး", "ကြာသပတေး", "သောကြာ", "စနေ"], SHORTWEEKDAYS:["တနင်္ဂနွေ", "တနင်္လာ", "အင်္ဂါ", "ဗုဒ္ဓဟူး", "ကြာသပတေး", 
"သောကြာ", "စနေ"], STANDALONESHORTWEEKDAYS:["တနင်္ဂနွေ", "တနင်္လာ", "အင်္ဂါ", "ဗုဒ္ဓဟူး", "ကြာသပတေး", "သောကြာ", "စနေ"], NARROWWEEKDAYS:["တ", "တ", "အ", "ဗ", "က", "သ", "စ"], STANDALONENARROWWEEKDAYS:["တ", "တ", "အ", "ဗ", "က", "သ", "စ"], SHORTQUARTERS:["ပထမ သုံးလပတ်", "ဒုတိယ သုံးလပတ်", "တတိယ သုံးလပတ်", "စတုတ္ထ သုံးလပတ်"], QUARTERS:["ပထမ သုံးလပတ်", "ဒုတိယ သုံးလပတ်", "တတိယ သုံးလပတ်", "စတုတ္ထ သုံးလပတ်"], AMPMS:["နံနက်", "ညနေ"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["zzzz HH:mm:ss", 
"z HH:mm:ss", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["før Kristus", "etter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", 
"november", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], STANDALONEWEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], SHORTWEEKDAYS:["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."], STANDALONESHORTWEEKDAYS:["søn.", 
"man.", "tir.", "ons.", "tor.", "fre.", "lør."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl'. {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["ईसा पूर्व", "सन्"], ERANAMES:["ईसा पूर्व", "सन्"], NARROWMONTHS:["१", "२", "३", "४", "५", "६", "७", "८", "९", "१०", "११", "१२"], STANDALONENARROWMONTHS:["१", "२", "३", "४", "५", "६", "७", "८", "९", "१०", "११", "१२"], MONTHS:["जनवरी", "फेब्रुअरी", "मार्च", "अप्रिल", "मई", "जुन", "जुलाई", "अगस्ट", "सेप्टेम्बर", "अक्टोबर", "नोभेम्बर", "डिसेम्बर"], STANDALONEMONTHS:["जनवरी", "फेब्रुअरी", "मार्च", "अप्रिल", "मे", "जुन", "जुलाई", "अगस्ट", "सेप्टेम्बर", 
"अक्टोबर", "नोभेम्बर", "डिसेम्बर"], SHORTMONTHS:["जनवरी", "फेब्रुअरी", "मार्च", "अप्रिल", "मे", "जुन", "जुलाई", "अगस्ट", "सेप्टेम्बर", "अक्टोबर", "नोभेम्बर", "डिसेम्बर"], STANDALONESHORTMONTHS:["जनवरी", "फेब्रुअरी", "मार्च", "अप्रिल", "मे", "जुन", "जुलाई", "अगस्ट", "सेप्टेम्बर", "अक्टोबर", "नोभेम्बर", "डिसेम्बर"], WEEKDAYS:["आइतबार", "सोमबार", "मङ्गलबार", "बुधबार", "बिहिबार", "शुक्रबार", "शनिबार"], STANDALONEWEEKDAYS:["आइतबार", "सोमबार", "मङ्गलबार", "बुधबार", "बिहिबार", "शुक्रबार", "शनिबार"], SHORTWEEKDAYS:["आइत", 
"सोम", "मङ्गल", "बुध", "बिहि", "शुक्र", "शनि"], STANDALONESHORTWEEKDAYS:["आइत", "सोम", "मङ्गल", "बुध", "बिहि", "शुक्र", "शनि"], NARROWWEEKDAYS:["आ", "सो", "म", "बु", "बि", "शु", "श"], STANDALONENARROWWEEKDAYS:["आ", "सो", "म", "बु", "बि", "शु", "श"], SHORTQUARTERS:["पहिलो सत्र", "दोस्रो सत्र", "तेस्रो सत्र", "चौथो सत्र"], QUARTERS:["पहिलो सत्र", "दोस्रो सत्र", "तेस्रो सत्र", "चौथो सत्र"], AMPMS:["पूर्वाह्न", "अपराह्न"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", 
"vr", "za"], STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'om' {0}", "{1} 'om' {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["før Kristus", "etter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", 
"november", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], STANDALONEWEEKDAYS:["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], SHORTWEEKDAYS:["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."], STANDALONESHORTWEEKDAYS:["søn.", 
"man.", "tir.", "ons.", "tor.", "fre.", "lør."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl'. {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["ଜା", "ଫେ", "ମା", "ଅ", "ମଇ", "ଜୁ", "ଜୁ", "ଅ", "ସେ", "ଅ", "ନ", "ଡି"], STANDALONENARROWMONTHS:["ଜା", "ଫେ", "ମା", "ଅ", "ମଇ", "ଜୁ", "ଜୁ", "ଅ", "ସେ", "ଅ", "ନ", "ଡି"], MONTHS:["ଜାନୁଆରୀ", "ଫେବୃଆରୀ", "ମାର୍ଚ୍ଚ", "ଅପ୍ରେଲ", "ମଇ", "ଜୁନ", "ଜୁଲାଇ", "ଅଗଷ୍ଟ", "ସେପ୍ଟେମ୍ବର", "ଅକ୍ଟୋବର", "ନଭେମ୍ବର", "ଡିସେମ୍ବର"], STANDALONEMONTHS:["ଜାନୁଆରୀ", "ଫେବୃଆରୀ", "ମାର୍ଚ୍ଚ", "ଅପ୍ରେଲ", "ମଇ", "ଜୁନ", "ଜୁଲାଇ", "ଅଗଷ୍ଟ", "ସେପ୍ଟେମ୍ବର", "ଅକ୍ଟୋବର", "ନଭେମ୍ବର", 
"ଡିସେମ୍ବର"], SHORTMONTHS:["ଜାନୁଆରୀ", "ଫେବୃଆରୀ", "ମାର୍ଚ୍ଚ", "ଅପ୍ରେଲ", "ମଇ", "ଜୁନ", "ଜୁଲାଇ", "ଅଗଷ୍ଟ", "ସେପ୍ଟେମ୍ବର", "ଅକ୍ଟୋବର", "ନଭେମ୍ବର", "ଡିସେମ୍ବର"], STANDALONESHORTMONTHS:["ଜାନୁଆରୀ", "ଫେବୃଆରୀ", "ମାର୍ଚ୍ଚ", "ଅପ୍ରେଲ", "ମଇ", "ଜୁନ", "ଜୁଲାଇ", "ଅଗଷ୍ଟ", "ସେପ୍ଟେମ୍ବର", "ଅକ୍ଟୋବର", "ନଭେମ୍ବର", "ଡିସେମ୍ବର"], WEEKDAYS:["ରବିବାର", "ସୋମବାର", "ମଙ୍ଗଳବାର", "ବୁଧବାର", "ଗୁରୁବାର", "ଶୁକ୍ରବାର", "ଶନିବାର"], STANDALONEWEEKDAYS:["ରବିବାର", "ସୋମବାର", "ମଙ୍ଗଳବାର", "ବୁଧବାର", "ଗୁରୁବାର", "ଶୁକ୍ରବାର", "ଶନିବାର"], SHORTWEEKDAYS:["ରବି", "ସୋମ", 
"ମଙ୍ଗଳ", "ବୁଧ", "ଗୁରୁ", "ଶୁକ୍ର", "ଶନି"], STANDALONESHORTWEEKDAYS:["ରବି", "ସୋମ", "ମଙ୍ଗଳ", "ବୁଧ", "ଗୁରୁ", "ଶୁକ୍ର", "ଶନି"], NARROWWEEKDAYS:["ର", "ସୋ", "ମ", "ବୁ", "ଗୁ", "ଶୁ", "ଶ"], STANDALONENARROWWEEKDAYS:["ର", "ସୋ", "ମ", "ବୁ", "ଗୁ", "ଶୁ", "ଶ"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["ਈ. ਪੂ.", "ਸੰਨ"], ERANAMES:["ਈਸਵੀ ਪੂਰਵ", "ਈਸਵੀ ਸੰਨ"], NARROWMONTHS:["ਜ", "ਫ਼", "ਮਾ", "ਅ", "ਮ", "ਜੂ", "ਜੁ", "ਅ", "ਸ", "ਅ", "ਨ", "ਦ"], STANDALONENARROWMONTHS:["ਜ", "ਫ਼", "ਮਾ", "ਅ", "ਮ", "ਜੂ", "ਜੁ", "ਅ", "ਸ", "ਅ", "ਨ", "ਦ"], MONTHS:["ਜਨਵਰੀ", "ਫ਼ਰਵਰੀ", "ਮਾਰਚ", "ਅਪ੍ਰੈਲ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾਈ", "ਅਗਸਤ", "ਸਤੰਬਰ", "ਅਕਤੂਬਰ", "ਨਵੰਬਰ", "ਦਸੰਬਰ"], STANDALONEMONTHS:["ਜਨਵਰੀ", "ਫ਼ਰਵਰੀ", "ਮਾਰਚ", "ਅਪ੍ਰੈਲ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾਈ", "ਅਗਸਤ", "ਸਤੰਬਰ", "ਅਕਤੂਬਰ", "ਨਵੰਬਰ", "ਦਸੰਬਰ"], SHORTMONTHS:["ਜਨ", 
"ਫ਼ਰ", "ਮਾਰਚ", "ਅਪ੍ਰੈ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾ", "ਅਗ", "ਸਤੰ", "ਅਕਤੂ", "ਨਵੰ", "ਦਸੰ"], STANDALONESHORTMONTHS:["ਜਨ", "ਫ਼ਰ", "ਮਾਰਚ", "ਅਪ੍ਰੈ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾ", "ਅਗ", "ਸਤੰ", "ਅਕਤੂ", "ਨਵੰ", "ਦਸੰ"], WEEKDAYS:["ਐਤਵਾਰ", "ਸੋਮਵਾਰ", "ਮੰਗਲਵਾਰ", "ਬੁੱਧਵਾਰ", "ਵੀਰਵਾਰ", "ਸ਼ੁੱਕਰਵਾਰ", "ਸ਼ਨਿੱਚਰਵਾਰ"], STANDALONEWEEKDAYS:["ਐਤਵਾਰ", "ਸੋਮਵਾਰ", "ਮੰਗਲਵਾਰ", "ਬੁੱਧਵਾਰ", "ਵੀਰਵਾਰ", "ਸ਼ੁੱਕਰਵਾਰ", "ਸ਼ਨਿੱਚਰਵਾਰ"], SHORTWEEKDAYS:["ਐਤ", "ਸੋਮ", "ਮੰਗਲ", "ਬੁੱਧ", "ਵੀਰ", "ਸ਼ੁੱਕਰ", "ਸ਼ਨਿੱਚਰ"], STANDALONESHORTWEEKDAYS:["ਐਤ", "ਸੋਮ", "ਮੰਗਲ", "ਬੁੱਧ", 
"ਵੀਰ", "ਸ਼ੁੱਕਰ", "ਸ਼ਨਿੱਚਰ"], NARROWWEEKDAYS:["ਐ", "ਸੋ", "ਮੰ", "ਬੁੱ", "ਵੀ", "ਸ਼ੁੱ", "ਸ਼"], STANDALONENARROWWEEKDAYS:["ਐ", "ਸੋ", "ਮੰ", "ਬੁੱ", "ਵੀ", "ਸ਼ੁੱ", "ਸ਼"], SHORTQUARTERS:["ਤਿਮਾਹੀ1", "ਤਿਮਾਹੀ2", "ਤਿਮਾਹੀ3", "ਤਿਮਾਹੀ4"], QUARTERS:["ਪਹਿਲੀ ਤਿਮਾਹੀ", "ਦੂਜੀ ਤਿਮਾਹੀ", "ਤੀਜੀ ਤਿਮਾਹੀ", "ਚੌਥੀ ਤਿਮਾਹੀ"], AMPMS:["ਪੂ.ਦੁ.", "ਬਾ.ਦੁ."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", 
"{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["przed naszą erą", "naszej ery"], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "września", "października", "listopada", "grudnia"], STANDALONEMONTHS:["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", 
"wrzesień", "październik", "listopad", "grudzień"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], WEEKDAYS:["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"], SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "śr.", "czw.", 
"pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["n", "p", "w", "ś", "c", "p", "s"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "Ś", "C", "P", "S"], SHORTQUARTERS:["I kw.", "II kw.", "III kw.", "IV kw."], QUARTERS:["I kwartał", "II kwartał", "III kwartał", "IV kwartał"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "depois de Cristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", 
"outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"], SHORTWEEKDAYS:["dom", "seg", 
"ter", "qua", "qui", "sex", "sáb"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "sáb"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d 'de' MMM 'de' y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "depois de Cristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", 
"outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"], SHORTWEEKDAYS:["domingo", "segunda", 
"terça", "quarta", "quinta", "sexta", "sábado"], STANDALONESHORTWEEKDAYS:["domingo", "segunda", "terça", "quarta", "quinta", "sexta", "sábado"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.º trimestre", "2.º trimestre", "3.º trimestre", "4.º trimestre"], AMPMS:["da manhã", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'às' {0}", "{1} 'às' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["î.Hr.", "d.Hr."], ERANAMES:["înainte de Hristos", "după Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", 
"septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"], STANDALONEWEEKDAYS:["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"], SHORTWEEKDAYS:["dum.", "lun.", "mar.", "mie.", 
"joi", "vin.", "sâm."], STANDALONESHORTWEEKDAYS:["dum.", "lun.", "mar.", "mie.", "joi", "vin.", "sâm."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["до н. э.", "н. э."], ERANAMES:["до Рождества Христова", "от Рождества Христова"], NARROWMONTHS:["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], STANDALONENARROWMONTHS:["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], MONTHS:["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"], STANDALONEMONTHS:["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", 
"октябрь", "ноябрь", "декабрь"], SHORTMONTHS:["янв.", "февр.", "мар.", "апр.", "мая", "июн.", "июл.", "авг.", "сент.", "окт.", "нояб.", "дек."], STANDALONESHORTMONTHS:["янв.", "февр.", "март", "апр.", "май", "июнь", "июль", "авг.", "сент.", "окт.", "нояб.", "дек."], WEEKDAYS:["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"], STANDALONEWEEKDAYS:["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"], SHORTWEEKDAYS:["вс", "пн", "вт", "ср", 
"чт", "пт", "сб"], STANDALONESHORTWEEKDAYS:["вс", "пн", "вт", "ср", "чт", "пт", "сб"], NARROWWEEKDAYS:["вс", "пн", "вт", "ср", "чт", "пт", "сб"], STANDALONENARROWWEEKDAYS:["В", "П", "В", "С", "Ч", "П", "С"], SHORTQUARTERS:["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."], QUARTERS:["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"], AMPMS:["ДП", "ПП"], DATEFORMATS:["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d MMM y 'г'.", "dd.MM.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sh = {ERAS:["p. n. e.", "n. e."], ERANAMES:["pre nove ere", "nove ere"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"], STANDALONEMONTHS:["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", 
"decembar"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sre", "čet", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", 
"uto", "sre", "čet", "pet", "sub"], NARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["prvi kvartal", "drugi kvartal", "treći kvartal", "četvrti kvartal"], AMPMS:["pre podne", "po podne"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["ක්‍රි.පූ.", "ක්‍රි.ව."], ERANAMES:["ක්‍රිස්තු පූර්ව", "ක්‍රිස්තු වර්ෂ"], NARROWMONTHS:["ජ", "පෙ", "මා", "අ", "මැ", "ජූ", "ජූ", "අ", "සැ", "ඔ", "නෙ", "දෙ"], STANDALONENARROWMONTHS:["ජ", "පෙ", "මා", "අ", "මැ", "ජූ", "ජූ", "අ", "සැ", "ඔ", "නෙ", "දෙ"], MONTHS:["ජනවාරි", "පෙබරවාරි", "මාර්තු", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝස්තු", "සැප්තැම්බර්", "ඔක්තෝබර්", "නොවැම්බර්", "දෙසැම්බර්"], STANDALONEMONTHS:["ජනවාරි", "පෙබරවාරි", "මාර්තු", "අප්‍රේල්", "මැයි", "ජූනි", 
"ජූලි", "අගෝස්තු", "සැප්තැම්බර්", "ඔක්තෝබර්", "නොවැම්බර්", "දෙසැම්බර්"], SHORTMONTHS:["ජන", "පෙබ", "මාර්තු", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝ", "සැප්", "ඔක්", "නොවැ", "දෙසැ"], STANDALONESHORTMONTHS:["ජන", "පෙබ", "මාර්", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝ", "සැප්", "ඔක්", "නොවැ", "දෙසැ"], WEEKDAYS:["ඉරිදා", "සඳුදා", "අඟහරුවාදා", "බදාදා", "බ්‍රහස්පතින්දා", "සිකුරාදා", "සෙනසුරාදා"], STANDALONEWEEKDAYS:["ඉරිදා", "සඳුදා", "අඟහරුවාදා", "බදාදා", "බ්‍රහස්පතින්දා", "සිකුරාදා", "සෙනසුරාදා"], 
SHORTWEEKDAYS:["ඉරිදා", "සඳුදා", "අඟහ", "බදාදා", "බ්‍රහස්", "සිකු", "සෙන"], STANDALONESHORTWEEKDAYS:["ඉරිදා", "සඳුදා", "අඟහ", "බදාදා", "බ්‍රහස්", "සිකු", "සෙන"], NARROWWEEKDAYS:["ඉ", "ස", "අ", "බ", "බ්‍ර", "සි", "සෙ"], STANDALONENARROWWEEKDAYS:["ඉ", "ස", "අ", "බ", "බ්‍ර", "සි", "සෙ"], SHORTQUARTERS:["කාර්:1", "කාර්:2", "කාර්:3", "කාර්:4"], QUARTERS:["1 වන කාර්තුව", "2 වන කාර්තුව", "3 වන කාර්තුව", "4 වන කාර්තුව"], AMPMS:["පෙ.ව.", "ප.ව."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], 
TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred Kr.", "po Kr."], ERANAMES:["pred Kristom", "po Kristovi"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januára", "februára", "marca", "apríla", "mája", "júna", "júla", "augusta", "septembra", "októbra", "novembra", "decembra"], STANDALONEMONTHS:["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", 
"november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "št", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", 
"ut", "st", "št", "pi", "so"], NARROWWEEKDAYS:["n", "p", "u", "s", "š", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "š", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. štvrťrok", "2. štvrťrok", "3. štvrťrok", "4. štvrťrok"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. M. y", "d. M. y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["pred Kristusom", "po Kristusu"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", 
"november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."], 
STANDALONESHORTWEEKDAYS:["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."], NARROWWEEKDAYS:["n", "p", "t", "s", "č", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "č", "p", "s"], SHORTQUARTERS:["1. čet.", "2. čet.", "3. čet.", "4. čet."], QUARTERS:["1. četrtletje", "2. četrtletje", "3. četrtletje", "4. četrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.K.", "mb.K."], ERANAMES:["para Krishtit", "mbas Krishtit"], NARROWMONTHS:["j", "s", "m", "p", "m", "q", "k", "g", "s", "t", "n", "d"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "nëntor", "dhjetor"], STANDALONEMONTHS:["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", 
"Dhjetor"], SHORTMONTHS:["jan", "shk", "mar", "pri", "maj", "qer", "kor", "gsh", "sht", "tet", "nën", "dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "Nën", "Dhj"], WEEKDAYS:["e diel", "e hënë", "e martë", "e mërkurë", "e enjte", "e premte", "e shtunë"], STANDALONEWEEKDAYS:["E diel", "E hënë", "E martë", "E mërkurë", "E enjte", "E premte", "E shtunë"], SHORTWEEKDAYS:["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", 
"Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["tremujori I", "tremujori II", "tremujori III", "tremujori IV"], QUARTERS:["tremujori i parë", "tremujori i dytë", "tremujori i tretë", "tremujori i katërt"], AMPMS:["e paradites", "e pasdites"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d.M.yy"], TIMEFORMATS:["h:mm:ss a, zzzz", "h:mm:ss a, z", "h:mm:ss a", "h:mm a"], 
DATETIMEFORMATS:["{1} 'në' {0}", "{1} 'në' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["п. н. е.", "н. е."], ERANAMES:["пре нове ере", "нове ере"], NARROWMONTHS:["ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д"], STANDALONENARROWMONTHS:["ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д"], MONTHS:["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"], STANDALONEMONTHS:["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", 
"децембар"], SHORTMONTHS:["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"], STANDALONESHORTMONTHS:["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"], WEEKDAYS:["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"], STANDALONEWEEKDAYS:["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"], SHORTWEEKDAYS:["нед", "пон", "уто", "сре", "чет", "пет", "суб"], STANDALONESHORTWEEKDAYS:["нед", "пон", 
"уто", "сре", "чет", "пет", "суб"], NARROWWEEKDAYS:["н", "п", "у", "с", "ч", "п", "с"], STANDALONENARROWWEEKDAYS:["н", "п", "у", "с", "ч", "п", "с"], SHORTQUARTERS:["К1", "К2", "К3", "К4"], QUARTERS:["први квартал", "други квартал", "трећи квартал", "четврти квартал"], AMPMS:["пре подне", "по подне"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr_Latn = {ERAS:["p. n. e.", "n. e."], ERANAMES:["pre nove ere", "nove ere"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"], STANDALONEMONTHS:["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", 
"novembar", "decembar"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sre", "čet", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", 
"pon", "uto", "sre", "čet", "pet", "sub"], NARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "č", "p", "s"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["prvi kvartal", "drugi kvartal", "treći kvartal", "četvrti kvartal"], AMPMS:["pre podne", "po podne"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["före Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", 
"november", "december"], SHORTMONTHS:["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."], WEEKDAYS:["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"], STANDALONEWEEKDAYS:["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"], SHORTWEEKDAYS:["sön", "mån", "tis", "ons", "tors", "fre", "lör"], STANDALONESHORTWEEKDAYS:["sön", 
"mån", "tis", "ons", "tors", "fre", "lör"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Robo ya 1", "Robo ya 2", "Robo ya 3", "Robo ya 4"], QUARTERS:["Robo ya 1", "Robo ya 2", "Robo ya 3", "Robo ya 4"], AMPMS:["Asubuhi", "Mchana"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["கி.மு.", "கி.பி."], ERANAMES:["கிறிஸ்துவுக்கு முன்", "அன்னோ டோமினி"], NARROWMONTHS:["ஜ", "பி", "மா", "ஏ", "மே", "ஜூ", "ஜூ", "ஆ", "செ", "அ", "ந", "டி"], STANDALONENARROWMONTHS:["ஜ", "பி", "மா", "ஏ", "மே", "ஜூ", "ஜூ", "ஆ", "செ", "அ", "ந", "டி"], MONTHS:["ஜனவரி", "பிப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்ட்", "செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"], STANDALONEMONTHS:["ஜனவரி", "பிப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்ட்", 
"செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"], SHORTMONTHS:["ஜன.", "பிப்.", "மார்.", "ஏப்.", "மே", "ஜூன்", "ஜூலை", "ஆக.", "செப்.", "அக்.", "நவ.", "டிச."], STANDALONESHORTMONTHS:["ஜன.", "பிப்.", "மார்.", "ஏப்.", "மே", "ஜூன்", "ஜூலை", "ஆக.", "செப்.", "அக்.", "நவ.", "டிச."], WEEKDAYS:["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"], STANDALONEWEEKDAYS:["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"], SHORTWEEKDAYS:["ஞாயி.", "திங்.", "செவ்.", "புத.", "வியா.", 
"வெள்.", "சனி"], STANDALONESHORTWEEKDAYS:["ஞாயி.", "திங்.", "செவ்.", "புத.", "வியா.", "வெள்.", "சனி"], NARROWWEEKDAYS:["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"], STANDALONENARROWWEEKDAYS:["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"], SHORTQUARTERS:["காலா.1", "காலா.2", "காலா.3", "காலா.4"], QUARTERS:["ஒன்றாம் காலாண்டு", "இரண்டாம் காலாண்டு", "மூன்றாம் காலாண்டு", "நான்காம் காலாண்டு"], AMPMS:["முற்பகல்", "பிற்பகல்"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["a h:mm:ss zzzz", 
"a h:mm:ss z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} ’அன்று’ {0}", "{1} ’அன்று’ {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["క్రీపూ", "క్రీశ"], ERANAMES:["క్రీస్తు పూర్వం", "క్రీస్తు శకం"], NARROWMONTHS:["జ", "ఫి", "మా", "ఏ", "మే", "జూ", "జు", "ఆ", "సె", "అ", "న", "డి"], STANDALONENARROWMONTHS:["జ", "ఫి", "మా", "ఏ", "మే", "జూ", "జు", "ఆ", "సె", "అ", "న", "డి"], MONTHS:["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జులై", "ఆగస్టు", "సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"], STANDALONEMONTHS:["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జులై", "ఆగస్టు", 
"సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"], SHORTMONTHS:["జన", "ఫిబ్ర", "మార్చి", "ఏప్రి", "మే", "జూన్", "జులై", "ఆగ", "సెప్టెం", "అక్టో", "నవం", "డిసెం"], STANDALONESHORTMONTHS:["జన", "ఫిబ్ర", "మార్చి", "ఏప్రి", "మే", "జూన్", "జులై", "ఆగస్టు", "సెప్టెం", "అక్టో", "నవం", "డిసెం"], WEEKDAYS:["ఆదివారం", "సోమవారం", "మంగళవారం", "బుధవారం", "గురువారం", "శుక్రవారం", "శనివారం"], STANDALONEWEEKDAYS:["ఆదివారం", "సోమవారం", "మంగళవారం", "బుధవారం", "గురువారం", "శుక్రవారం", "శనివారం"], SHORTWEEKDAYS:["ఆది", 
"సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"], STANDALONESHORTWEEKDAYS:["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"], NARROWWEEKDAYS:["ఆ", "సో", "మ", "బు", "గు", "శు", "శ"], STANDALONENARROWWEEKDAYS:["ఆ", "సో", "మ", "బు", "గు", "శు", "శ"], SHORTQUARTERS:["త్రై1", "త్రై2", "త్రై3", "త్రై4"], QUARTERS:["1వ త్రైమాసం", "2వ త్రైమాసం", "3వ త్రైమాసం", "4వ త్రైమాసం"], AMPMS:["AM", "PM"], DATEFORMATS:["d, MMMM y, EEEE", "d MMMM, y", "d MMM, y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["ปีก่อน ค.ศ.", "ค.ศ."], ERANAMES:["ปีก่อนคริสต์ศักราช", "คริสต์ศักราช"], NARROWMONTHS:["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], STANDALONENARROWMONTHS:["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], MONTHS:["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"], STANDALONEMONTHS:["มกราคม", 
"กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"], SHORTMONTHS:["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], STANDALONESHORTMONTHS:["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], WEEKDAYS:["วันอาทิตย์", "วันจันทร์", "วันอังคาร", "วันพุธ", "วันพฤหัสบดี", "วันศุกร์", "วันเสาร์"], STANDALONEWEEKDAYS:["วันอาทิตย์", "วันจันทร์", 
"วันอังคาร", "วันพุธ", "วันพฤหัสบดี", "วันศุกร์", "วันเสาร์"], SHORTWEEKDAYS:["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], STANDALONESHORTWEEKDAYS:["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], NARROWWEEKDAYS:["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"], STANDALONENARROWWEEKDAYS:["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"], SHORTQUARTERS:["ไตรมาส 1", "ไตรมาส 2", "ไตรมาส 3", "ไตรมาส 4"], QUARTERS:["ไตรมาส 1", "ไตรมาส 2", "ไตรมาส 3", "ไตรมาส 4"], AMPMS:["ก่อนเที่ยง", "หลังเที่ยง"], DATEFORMATS:["EEEEที่ d MMMM G y", 
"d MMMM G y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H นาฬิกา mm นาที ss วินาที zzzz", "H นาฬิกา mm นาที ss วินาที z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", 
"Oktubre", "Nobyembre", "Disyembre"], SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", 
"Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONENARROWWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'nang' {0}", "{1} 'nang' {0}", 
"{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["MÖ", "MS"], ERANAMES:["Milattan Önce", "Milattan Sonra"], NARROWMONTHS:["O", "Ş", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "Ş", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], STANDALONEMONTHS:["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], 
SHORTMONTHS:["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "Çar", 
"Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "Ç", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "Ç", "P", "C", "C"], SHORTQUARTERS:["Ç1", "Ç2", "Ç3", "Ç4"], QUARTERS:["1. çeyrek", "2. çeyrek", "3. çeyrek", "4. çeyrek"], AMPMS:["ÖÖ", "ÖS"], DATEFORMATS:["d MMMM y EEEE", "d MMMM y", "d MMM y", "d.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["до н. е.", "н. е."], ERANAMES:["до нашої ери", "нашої ери"], NARROWMONTHS:["с", "л", "б", "к", "т", "ч", "л", "с", "в", "ж", "л", "г"], STANDALONENARROWMONTHS:["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"], MONTHS:["січня", "лютого", "березня", "квітня", "травня", "червня", "липня", "серпня", "вересня", "жовтня", "листопада", "грудня"], STANDALONEMONTHS:["січень", "лютий", "березень", "квітень", "травень", "червень", "липень", "серпень", "вересень", 
"жовтень", "листопад", "грудень"], SHORTMONTHS:["січ.", "лют.", "бер.", "квіт.", "трав.", "черв.", "лип.", "серп.", "вер.", "жовт.", "лист.", "груд."], STANDALONESHORTMONTHS:["січ", "лют", "бер", "кві", "тра", "чер", "лип", "сер", "вер", "жов", "лис", "гру"], WEEKDAYS:["неділя", "понеділок", "вівторок", "середа", "четвер", "пʼятниця", "субота"], STANDALONEWEEKDAYS:["неділя", "понеділок", "вівторок", "середа", "четвер", "пʼятниця", "субота"], SHORTWEEKDAYS:["нд", "пн", "вт", "ср", "чт", "пт", "сб"], 
STANDALONESHORTWEEKDAYS:["нд", "пн", "вт", "ср", "чт", "пт", "сб"], NARROWWEEKDAYS:["Н", "П", "В", "С", "Ч", "П", "С"], STANDALONENARROWWEEKDAYS:["Н", "П", "В", "С", "Ч", "П", "С"], SHORTQUARTERS:["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."], QUARTERS:["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"], AMPMS:["дп", "пп"], DATEFORMATS:["EEEE, d MMMM y 'р'.", "d MMMM y 'р'.", "d MMM y 'р'.", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'о' {0}", 
"{1} 'о' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["قبل مسیح", "عیسوی"], ERANAMES:["قبل مسیح", "عیسوی"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"], STANDALONEMONTHS:["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"], SHORTMONTHS:["جنوری", 
"فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"], STANDALONESHORTMONTHS:["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"], WEEKDAYS:["اتوار", "سوموار", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"], STANDALONEWEEKDAYS:["اتوار", "سوموار", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"], SHORTWEEKDAYS:["اتوار", "سوموار", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"], STANDALONESHORTWEEKDAYS:["اتوار", "سوموار", "منگل", 
"بدھ", "جمعرات", "جمعہ", "ہفتہ"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["پہلی سہ ماہی", "دوسری سہ ماہی", "تیسری سہ ماہی", "چوتهی سہ ماہی"], QUARTERS:["پہلی سہ ماہی", "دوسری سہ ماہی", "تیسری سہ ماہی", "چوتهی سہ ماہی"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE، d MMMM، y", "d MMMM، y", "y MMM d", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["m.a.", "milodiy"], ERANAMES:["miloddan avvalgi", "milodiy"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avgust", "sentabr", "oktabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"], 
SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avg", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["Yan", "Fev", "Mar", "Apr", "May", "Iyn", "Iyl", "Avg", "Sen", "Okt", "Noy", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yak", 
"Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["TO", "TK"], DATEFORMATS:["EEEE, d-MMMM, y", "d-MMMM, y", "d-MMM, y", "dd/MM/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["Trước CN", "sau CN"], ERANAMES:["Trước CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["tháng 1", "tháng 2", "tháng 3", "tháng 4", "tháng 5", "tháng 6", "tháng 7", "tháng 8", "tháng 9", "tháng 10", "tháng 11", "tháng 12"], STANDALONEMONTHS:["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", 
"Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"], STANDALONEWEEKDAYS:["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"], SHORTWEEKDAYS:["CN", 
"Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Quý 1", "Quý 2", "Quý 3", "Quý 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", 
"{0} {1}", "{0}, {1}", "{0}, {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["公元前", "公元"], ERANAMES:["公元前", "公元"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], STANDALONEMONTHS:["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], SHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], 
STANDALONESHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], WEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], STANDALONEWEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], SHORTWEEKDAYS:["周日", "周一", "周二", "周三", "周四", "周五", "周六"], STANDALONESHORTWEEKDAYS:["周日", "周一", "周二", "周三", "周四", "周五", "周六"], NARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], STANDALONENARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], SHORTQUARTERS:["1季度", "2季度", "3季度", 
"4季度"], QUARTERS:["第一季度", "第二季度", "第三季度", "第四季度"], AMPMS:["上午", "下午"], DATEFORMATS:["y年M月d日EEEE", "y年M月d日", "y年M月d日", "y/M/d"], TIMEFORMATS:["zzzz ah:mm:ss", "z ah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["公元前", "公元"], ERANAMES:["公元前", "公元"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], STANDALONEMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], SHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", 
"12月"], STANDALONESHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], WEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], STANDALONEWEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], SHORTWEEKDAYS:["週日", "週一", "週二", "週三", "週四", "週五", "週六"], STANDALONESHORTWEEKDAYS:["週日", "週一", "週二", "週三", "週四", "週五", "週六"], NARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], STANDALONENARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], SHORTQUARTERS:["Q1", "Q2", 
"Q3", "Q4"], QUARTERS:["第1季度", "第2季度", "第3季度", "第4季度"], AMPMS:["上午", "下午"], DATEFORMATS:["y年M月d日EEEE", "y年M月d日", "y年M月d日", "d/M/y"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["西元前", "西元"], ERANAMES:["西元前", "西元"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], STANDALONEMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], SHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", 
"12月"], STANDALONESHORTMONTHS:["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], WEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], STANDALONEWEEKDAYS:["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], SHORTWEEKDAYS:["週日", "週一", "週二", "週三", "週四", "週五", "週六"], STANDALONESHORTWEEKDAYS:["週日", "週一", "週二", "週三", "週四", "週五", "週六"], NARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], STANDALONENARROWWEEKDAYS:["日", "一", "二", "三", "四", "五", "六"], SHORTQUARTERS:["1季", "2季", 
"3季", "4季"], QUARTERS:["第1季", "第2季", "第3季", "第4季"], AMPMS:["上午", "下午"], DATEFORMATS:["y年M月d日 EEEE", "y年M月d日", "y年M月d日", "y/M/d"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "E", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["UMasingana", "Februwari", "Mashi", "Ephreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["Januwari", "Februwari", "Mashi", "Ephreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", 
"Disemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Eph", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Eph", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["ISonto", "UMsombuluko", "ULwesibili", "ULwesithathu", "ULwesine", "ULwesihlanu", "UMgqibelo"], STANDALONEWEEKDAYS:["ISonto", "UMsombuluko", "ULwesibili", "ULwesithathu", "ULwesine", "ULwesihlanu", "UMgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota yesi-1", "ikota yesi-2", "ikota yesi-3", "ikota yesi-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbolsType = function() {
};
goog.i18n.DateTimeSymbolsType.prototype.ERAS;
goog.i18n.DateTimeSymbolsType.prototype.ERANAMES;
goog.i18n.DateTimeSymbolsType.prototype.NARROWMONTHS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONENARROWMONTHS;
goog.i18n.DateTimeSymbolsType.prototype.MONTHS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONEMONTHS;
goog.i18n.DateTimeSymbolsType.prototype.SHORTMONTHS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONESHORTMONTHS;
goog.i18n.DateTimeSymbolsType.prototype.WEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.SHORTWEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONESHORTWEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONEWEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.NARROWWEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.STANDALONENARROWWEEKDAYS;
goog.i18n.DateTimeSymbolsType.prototype.SHORTQUARTERS;
goog.i18n.DateTimeSymbolsType.prototype.QUARTERS;
goog.i18n.DateTimeSymbolsType.prototype.AMPMS;
goog.i18n.DateTimeSymbolsType.prototype.DATEFORMATS;
goog.i18n.DateTimeSymbolsType.prototype.TIMEFORMATS;
goog.i18n.DateTimeSymbolsType.prototype.DATETIMEFORMATS;
goog.i18n.DateTimeSymbolsType.prototype.ZERODIGIT;
goog.i18n.DateTimeSymbolsType.prototype.FIRSTDAYOFWEEK;
goog.i18n.DateTimeSymbolsType.prototype.WEEKENDRANGE;
goog.i18n.DateTimeSymbolsType.prototype.FIRSTWEEKCUTOFFDAY;
goog.i18n.DateTimeSymbols;
goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
switch(goog.LOCALE) {
  case "en_ISO":
  case "en-ISO":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ISO;
    break;
  case "af":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
    break;
  case "am":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
    break;
  case "ar":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    break;
  case "ar_DZ":
  case "ar-DZ":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar_DZ;
    break;
  case "az":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
    break;
  case "be":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_be;
    break;
  case "bg":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
    break;
  case "bn":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
    break;
  case "br":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
    break;
  case "bs":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bs;
    break;
  case "ca":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
    break;
  case "chr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
    break;
  case "cs":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
    break;
  case "cy":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
    break;
  case "da":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
    break;
  case "de":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
    break;
  case "de_AT":
  case "de-AT":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
    break;
  case "de_CH":
  case "de-CH":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_CH;
    break;
  case "el":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
    break;
  case "en":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
    break;
  case "en_AU":
  case "en-AU":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
    break;
  case "en_CA":
  case "en-CA":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_CA;
    break;
  case "en_GB":
  case "en-GB":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
    break;
  case "en_IE":
  case "en-IE":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
    break;
  case "en_IN":
  case "en-IN":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
    break;
  case "en_SG":
  case "en-SG":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
    break;
  case "en_US":
  case "en-US":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_US;
    break;
  case "en_ZA":
  case "en-ZA":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
    break;
  case "es":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
    break;
  case "es_419":
  case "es-419":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_419;
    break;
  case "es_ES":
  case "es-ES":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_ES;
    break;
  case "es_MX":
  case "es-MX":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_MX;
    break;
  case "es_US":
  case "es-US":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_US;
    break;
  case "et":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
    break;
  case "eu":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
    break;
  case "fa":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
    break;
  case "fi":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
    break;
  case "fil":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
    break;
  case "fr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
    break;
  case "fr_CA":
  case "fr-CA":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
    break;
  case "ga":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ga;
    break;
  case "gl":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
    break;
  case "gsw":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
    break;
  case "gu":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
    break;
  case "haw":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
    break;
  case "he":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
    break;
  case "hi":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
    break;
  case "hr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
    break;
  case "hu":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
    break;
  case "hy":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
    break;
  case "id":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
    break;
  case "in":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
    break;
  case "is":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
    break;
  case "it":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
    break;
  case "iw":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
    break;
  case "ja":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
    break;
  case "ka":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
    break;
  case "kk":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
    break;
  case "km":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
    break;
  case "kn":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
    break;
  case "ko":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
    break;
  case "ky":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
    break;
  case "ln":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
    break;
  case "lo":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
    break;
  case "lt":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
    break;
  case "lv":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
    break;
  case "mk":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
    break;
  case "ml":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
    break;
  case "mn":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
    break;
  case "mo":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mo;
    break;
  case "mr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
    break;
  case "ms":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
    break;
  case "mt":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
    break;
  case "my":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
    break;
  case "nb":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
    break;
  case "ne":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
    break;
  case "nl":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
    break;
  case "no":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
    break;
  case "no_NO":
  case "no-NO":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no_NO;
    break;
  case "or":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
    break;
  case "pa":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
    break;
  case "pl":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
    break;
  case "pt":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
    break;
  case "pt_BR":
  case "pt-BR":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_BR;
    break;
  case "pt_PT":
  case "pt-PT":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
    break;
  case "ro":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
    break;
  case "ru":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
    break;
  case "sh":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sh;
    break;
  case "si":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
    break;
  case "sk":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
    break;
  case "sl":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
    break;
  case "sq":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
    break;
  case "sr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
    break;
  case "sr_Latn":
  case "sr-Latn":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr_Latn;
    break;
  case "sv":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
    break;
  case "sw":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
    break;
  case "ta":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
    break;
  case "te":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
    break;
  case "th":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
    break;
  case "tl":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
    break;
  case "tr":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
    break;
  case "uk":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
    break;
  case "ur":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
    break;
  case "uz":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
    break;
  case "vi":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
    break;
  case "zh":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
    break;
  case "zh_CN":
  case "zh-CN":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_CN;
    break;
  case "zh_HK":
  case "zh-HK":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
    break;
  case "zh_TW":
  case "zh-TW":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
    break;
  case "zu":
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
    break;
}
;goog.provide("goog.date.DateLike");
goog.forwardDeclare("goog.date.Date");
goog.date.DateLike;
goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":String(yearNum)});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.MS_PER_DAY = 24 * 60 * 60 * 1000;
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    case goog.date.month.SEP:
    case goog.date.month.NOV:
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = goog.isDef(opt_weekDay) ? opt_weekDay : goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * goog.date.MS_PER_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / goog.date.MS_PER_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2000);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay;
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = Number(parts[2]) * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? Number(parts[4]) * 1000 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 60000);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = opt_months;
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = opt_years || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return ((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      var expectedDate = this.date.getDate();
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
      this.maybeFixDst_(expectedDate);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return this.date.getMonth();
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return this.date.getDay();
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return (this.getDay() + 6) % 7;
};
goog.date.Date.prototype.getWeekday = function() {
  return (this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return this.date.getUTCMonth();
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return this.date.getDay();
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return (this.date.getUTCDay() + 6) % 7;
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return (this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1; m >= 0; m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 86400000);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return !!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year && opt_year.getTime ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return !isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return this.date.getUTCDay();
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setUTCHours(this.date.getUTCHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setUTCMinutes(this.date.getUTCMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setUTCSeconds(this.date.getUTCSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.toUTCRfc3339String = function() {
  var date = this.toUTCIsoString(true).replace(" ", "T");
  var millis = this.getUTCMilliseconds();
  return (millis ? date + "." + millis : date) + "Z";
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    label += isPM ? " PM" : " AM";
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("sophitia.test.runner");
goog.require("cljs.core");
goog.require("cljs.test");
sophitia.test.runner.run = function sophitia$test$runner$run() {
  return cljs.test.run_block.call(null, function() {
    var env3067 = cljs.test.empty_env.call(null);
    var summary3068 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3067);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.runner", "sophitia.test.runner", -897785334, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__2965__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2965__auto__ == null) {
            cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
          } else {
          }
          return null;
        }], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2965__auto__ == null) {
            return cljs.test.clear_env_BANG_.call(null);
          } else {
            return null;
          }
        }], null));
      }());
    }, function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.runner", "sophitia.test.runner", -897785334, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      return cljs.core._vreset_BANG_.call(null, summary3068, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary3068), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3067);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary3068));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary3068), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    }], null));
  }());
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2000);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1000 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("malli.transform");
goog.require("cljs.core");
goog.require("malli.core");
goog.require("goog.date.UtcDateTime");
goog.require("goog.date.Date");
malli.transform._STAR_max_compile_depth_STAR_ = 10;
malli.transform._interceptor = function malli$transform$_interceptor(_QMARK_interceptor, schema, options) {
  if (cljs.core.fn_QMARK_.call(null, _QMARK_interceptor)) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enter", "enter", 1792452624), _QMARK_interceptor], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, _QMARK_interceptor) && cljs.core.contains_QMARK_.call(null, _QMARK_interceptor, new cljs.core.Keyword(null, "compile", "compile", 608186429))) {
      var compiled = (new cljs.core.Keyword("malli.transform", "compiled", "malli.transform/compiled", -1910053091)).cljs$core$IFn$_invoke$arity$2(options, 0);
      var options__$1 = cljs.core.assoc.call(null, options, new cljs.core.Keyword("malli.transform", "compiled", "malli.transform/compiled", -1910053091), compiled + 1);
      if (compiled >= malli.transform._STAR_max_compile_depth_STAR_) {
        malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.transform", "too-deep-compilation", "malli.transform/too-deep-compilation", -1157462070), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "this", "this", -611633625), _QMARK_interceptor, new cljs.core.Keyword(null, "schema", "schema", -1582001791), schema, new cljs.core.Keyword(null, "options", "options", 99638489), options__$1], null));
      } else {
      }
      var temp__5753__auto__ = malli.transform._interceptor.call(null, (new cljs.core.Keyword(null, "compile", "compile", 608186429)).cljs$core$IFn$_invoke$arity$1(_QMARK_interceptor).call(null, schema, options__$1), schema, options__$1);
      if (cljs.core.truth_(temp__5753__auto__)) {
        var interceptor = temp__5753__auto__;
        return cljs.core.merge.call(null, cljs.core.dissoc.call(null, _QMARK_interceptor, new cljs.core.Keyword(null, "compile", "compile", 608186429)), interceptor);
      } else {
        return null;
      }
    } else {
      if (cljs.core.map_QMARK_.call(null, _QMARK_interceptor) && (cljs.core.contains_QMARK_.call(null, _QMARK_interceptor, new cljs.core.Keyword(null, "enter", "enter", 1792452624)) || cljs.core.contains_QMARK_.call(null, _QMARK_interceptor, new cljs.core.Keyword(null, "leave", "leave", 1022579443)))) {
        return _QMARK_interceptor;
      } else {
        if (cljs.core.coll_QMARK_.call(null, _QMARK_interceptor)) {
          return cljs.core.reduce.call(null, function(p__9496, p__9497) {
            var map__9498 = p__9496;
            var map__9498__$1 = (!(map__9498 == null) ? map__9498.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9498.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9498) : map__9498;
            var enter = cljs.core.get.call(null, map__9498__$1, new cljs.core.Keyword(null, "enter", "enter", 1792452624));
            var leave = cljs.core.get.call(null, map__9498__$1, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
            var map__9499 = p__9497;
            var map__9499__$1 = (!(map__9499 == null) ? map__9499.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9499.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9499) : map__9499;
            var new_enter = cljs.core.get.call(null, map__9499__$1, new cljs.core.Keyword(null, "enter", "enter", 1792452624));
            var new_leave = cljs.core.get.call(null, map__9499__$1, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
            var enter__$1 = cljs.core.truth_(function() {
              var and__4174__auto__ = enter;
              if (cljs.core.truth_(and__4174__auto__)) {
                return new_enter;
              } else {
                return and__4174__auto__;
              }
            }()) ? function(p1__9493_SHARP_) {
              return new_enter.call(null, enter.call(null, p1__9493_SHARP_));
            } : function() {
              var or__4185__auto__ = enter;
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return new_enter;
              }
            }();
            var leave__$1 = cljs.core.truth_(function() {
              var and__4174__auto__ = leave;
              if (cljs.core.truth_(and__4174__auto__)) {
                return new_leave;
              } else {
                return and__4174__auto__;
              }
            }()) ? function(p1__9494_SHARP_) {
              return leave.call(null, new_leave.call(null, p1__9494_SHARP_));
            } : function() {
              var or__4185__auto__ = leave;
              if (cljs.core.truth_(or__4185__auto__)) {
                return or__4185__auto__;
              } else {
                return new_leave;
              }
            }();
            return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "enter", "enter", 1792452624), enter__$1, new cljs.core.Keyword(null, "leave", "leave", 1022579443), leave__$1], null);
          }, cljs.core.keep.call(null, function(p1__9495_SHARP_) {
            return malli.transform._interceptor.call(null, p1__9495_SHARP_, schema, options);
          }, _QMARK_interceptor));
        } else {
          if (_QMARK_interceptor == null) {
            return null;
          } else {
            if (cljs.core.ifn_QMARK_.call(null, _QMARK_interceptor)) {
              return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enter", "enter", 1792452624), _QMARK_interceptor], null);
            } else {
              return malli.core._fail_BANG_.call(null, new cljs.core.Keyword("malli.transform", "invalid-transformer", "malli.transform/invalid-transformer", -1717093616), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), _QMARK_interceptor], null));
            }
          }
        }
      }
    }
  }
};
malli.transform._safe = function malli$transform$_safe(f) {
  return function(p1__9502_SHARP_) {
    try {
      return f.call(null, p1__9502_SHARP_);
    } catch (e9503) {
      if (e9503 instanceof Error) {
        var _ = e9503;
        return p1__9502_SHARP_;
      } else {
        throw e9503;
      }
    }
  };
};
malli.transform._string__GT_long = function malli$transform$_string__GT_long(x) {
  if (typeof x === "string") {
    try {
      var x_SINGLEQUOTE_ = cljs.core.truth_(cljs.core.re_find.call(null, /\D/, cljs.core.subs.call(null, x, 1))) ? NaN : parseInt(x, 10);
      if (cljs.core.truth_(isNaN(x_SINGLEQUOTE_))) {
        return x;
      } else {
        if (x_SINGLEQUOTE_ > Number.MAX_SAFE_INTEGER) {
          return x;
        } else {
          if (x_SINGLEQUOTE_ < Number.MIN_SAFE_INTEGER) {
            return x;
          } else {
            return x_SINGLEQUOTE_;
          }
        }
      }
    } catch (e9504) {
      if (e9504 instanceof Error) {
        var _ = e9504;
        return x;
      } else {
        throw e9504;
      }
    }
  } else {
    return x;
  }
};
malli.transform._string__GT_double = function malli$transform$_string__GT_double(x) {
  if (typeof x === "string") {
    try {
      var x_SINGLEQUOTE_ = parseFloat(x);
      if (cljs.core.truth_(isNaN(x_SINGLEQUOTE_))) {
        return x;
      } else {
        return x_SINGLEQUOTE_;
      }
    } catch (e9505) {
      if (e9505 instanceof Error) {
        var _ = e9505;
        return x;
      } else {
        throw e9505;
      }
    }
  } else {
    return x;
  }
};
malli.transform._number__GT_double = function malli$transform$_number__GT_double(x) {
  if (typeof x === "number") {
    return x;
  } else {
    return x;
  }
};
malli.transform._string__GT_keyword = function malli$transform$_string__GT_keyword(x) {
  if (typeof x === "string") {
    return cljs.core.keyword.call(null, x);
  } else {
    return x;
  }
};
malli.transform._string__GT_boolean = function malli$transform$_string__GT_boolean(x) {
  if (typeof x === "string") {
    if (cljs.core._EQ_.call(null, "true", x)) {
      return true;
    } else {
      if (cljs.core._EQ_.call(null, "false", x)) {
        return false;
      } else {
        return x;
      }
    }
  } else {
    return x;
  }
};
malli.transform._string__GT_uuid = function malli$transform$_string__GT_uuid(x) {
  if (typeof x === "string") {
    try {
      if (cljs.core.truth_(cljs.core.re_find.call(null, /^[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, x))) {
        return cljs.core.uuid.call(null, x);
      } else {
        return x;
      }
    } catch (e9506) {
      if (e9506 instanceof Error) {
        var _ = e9506;
        return x;
      } else {
        throw e9506;
      }
    }
  } else {
    return x;
  }
};
malli.transform._string__GT_date = function malli$transform$_string__GT_date(x) {
  if (typeof x === "string") {
    try {
      return new Date(goog.date.UtcDateTime.fromIsoString(x).getTime());
    } catch (e9507) {
      if (e9507 instanceof Error) {
        var _ = e9507;
        return x;
      } else {
        throw e9507;
      }
    }
  } else {
    return x;
  }
};
malli.transform._string__GT_symbol = function malli$transform$_string__GT_symbol(x) {
  if (typeof x === "string") {
    return cljs.core.symbol.call(null, x);
  } else {
    return x;
  }
};
malli.transform._string__GT_nil = function malli$transform$_string__GT_nil(x) {
  if (cljs.core._EQ_.call(null, "", x)) {
    return null;
  } else {
    return x;
  }
};
malli.transform._any__GT_string = function malli$transform$_any__GT_string(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
  }
};
malli.transform._any__GT_any = function malli$transform$_any__GT_any(x) {
  return x;
};
malli.transform._date__GT_string = function malli$transform$_date__GT_string(x) {
  if (cljs.core.inst_QMARK_.call(null, x)) {
    try {
      return x.toISOString();
    } catch (e9508) {
      if (e9508 instanceof Error) {
        var _ = e9508;
        return x;
      } else {
        throw e9508;
      }
    }
  } else {
    return x;
  }
};
malli.transform._transform_map_keys = function malli$transform$_transform_map_keys(f) {
  return function(p1__9509_SHARP_) {
    var G__9510 = p1__9509_SHARP_;
    if (cljs.core.map_QMARK_.call(null, p1__9509_SHARP_)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__9511) {
        var vec__9512 = p__9511;
        var k = cljs.core.nth.call(null, vec__9512, 0, null);
        var v = cljs.core.nth.call(null, vec__9512, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, k), v], null);
      }), G__9510);
    } else {
      return G__9510;
    }
  };
};
malli.transform._sequential__GT_set = function malli$transform$_sequential__GT_set(x) {
  if (cljs.core.set_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return x;
    }
  }
};
malli.transform._sequential__GT_vector = function malli$transform$_sequential__GT_vector(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.vec.call(null, x);
    } else {
      return x;
    }
  }
};
malli.transform._sequential_or_set__GT_vector = function malli$transform$_sequential_or_set__GT_vector(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.set_QMARK_.call(null, x)) {
      return cljs.core.vec.call(null, x);
    } else {
      if (cljs.core.sequential_QMARK_.call(null, x)) {
        return cljs.core.vec.call(null, x);
      } else {
        return x;
      }
    }
  }
};
malli.transform._sequential_or_set__GT_seq = function malli$transform$_sequential_or_set__GT_seq(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return cljs.core.seq.call(null, x);
  } else {
    if (cljs.core.set_QMARK_.call(null, x)) {
      return cljs.core.seq.call(null, x);
    } else {
      return x;
    }
  }
};
malli.transform._json_decoders = function malli$transform$_json_decoders() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null), new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null), new cljs.core.Symbol(null, "simple-ident?", "simple-ident?", 194189851, null), new cljs.core.Keyword(null, 
  "symbol", "symbol", -1038572696), new cljs.core.Symbol(null, "ident?", "ident?", -2061359468, null), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "qualified-ident?", "qualified-ident?", -928894763, null), new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null), new cljs.core.Keyword(null, 
  "keyword", "keyword", 811389747), new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null), new cljs.core.Symbol(null, "qualified-symbol?", "qualified-symbol?", 98763807, null), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719), new cljs.core.Keyword(null, "set", "set", 304602554), new cljs.core.Symbol(null, "double?", "double?", -2146564276, null)], [malli.transform._string__GT_symbol, malli.transform._string__GT_keyword, malli.transform._number__GT_double, 
  malli.transform._string__GT_uuid, malli.transform._string__GT_date, malli.transform._string__GT_keyword, malli.transform._string__GT_symbol, malli.transform._string__GT_keyword, malli.transform._string__GT_keyword, malli.transform._string__GT_symbol, malli.transform._string__GT_keyword, malli.transform._string__GT_keyword, malli.transform._string__GT_symbol, malli.transform._string__GT_keyword, malli.transform._string__GT_keyword, malli.transform._string__GT_symbol, malli.transform._string__GT_uuid, 
  malli.transform._sequential__GT_set, malli.transform._number__GT_double]);
};
malli.transform._json_encoders = function malli$transform$_json_encoders() {
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "qualified-symbol", "qualified-symbol", -665513695), new cljs.core.Symbol(null, "simple-keyword?", "simple-keyword?", -367134735, null), new cljs.core.Symbol(null, "uuid?", "uuid?", 400077689, null), new cljs.core.Symbol(null, "inst?", "inst?", 1614698981, null), new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), new cljs.core.Keyword(null, "qualified-keyword", "qualified-keyword", 736041675), new cljs.core.Symbol(null, 
  "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "simple-symbol?", "simple-symbol?", 1408454822, null), new cljs.core.Keyword(null, "keyword", "keyword", 811389747), new cljs.core.Symbol(null, "qualified-keyword?", "qualified-keyword?", 375456001, null), new cljs.core.Symbol(null, "qualified-symbol?", "qualified-symbol?", 98763807, null), new cljs.core.Keyword(null, "uuid", "uuid", -2145095719)], [malli.transform._any__GT_string, 
  malli.core._keyword__GT_string, malli.transform._any__GT_string, malli.transform._date__GT_string, malli.transform._any__GT_string, malli.core._keyword__GT_string, malli.transform._any__GT_string, malli.core._keyword__GT_string, malli.transform._any__GT_string, malli.core._keyword__GT_string, malli.core._keyword__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string]);
};
malli.transform._string_decoders = function malli$transform$_string_decoders() {
  return cljs.core.merge.call(null, malli.transform._json_decoders.call(null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, "true?", "true?", -1600332395, null), new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323), new cljs.core.Symbol(null, "int?", "int?", 1799729645, null), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, 
  "\x3e", "\x3e", -555517146), new cljs.core.Symbol(null, "float?", "float?", 673884616, null), new cljs.core.Symbol(null, "false?", "false?", -1522377573, null), new cljs.core.Symbol(null, "neg-int?", "neg-int?", -1610409390, null), new cljs.core.Keyword(null, "vector", "vector", 1902966158), new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505), new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.Symbol(null, 
  "zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null), new cljs.core.Symbol(null, "boolean?", "boolean?", 1790940868, null), new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "double?", "double?", -2146564276, null), new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628), new cljs.core.Keyword(null, "boolean", "boolean", -1919418404), new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291), new cljs.core.Symbol(null, 
  "pos-int?", "pos-int?", -1205815015, null)], [malli.transform._string__GT_boolean, malli.transform._string__GT_long, malli.transform._string__GT_double, malli.transform._string__GT_long, malli.transform._string__GT_long, malli.transform._string__GT_long, malli.transform._string__GT_long, malli.transform._string__GT_double, malli.transform._string__GT_boolean, malli.transform._string__GT_long, malli.transform._sequential__GT_vector, malli.transform._string__GT_long, malli.transform._string__GT_long, 
  malli.transform._transform_map_keys.call(null, malli.core._keyword__GT_string), malli.transform._string__GT_long, malli.transform._string__GT_long, malli.transform._string__GT_boolean, malli.transform._string__GT_double, malli.transform._string__GT_double, malli.transform._string__GT_long, malli.transform._string__GT_boolean, malli.transform._string__GT_long, malli.transform._string__GT_long]));
};
malli.transform._string_encoders = function malli$transform$_string_encoders() {
  return cljs.core.merge.call(null, malli.transform._json_encoders.call(null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "\x3c\x3d", "\x3c\x3d", -395636158), new cljs.core.Keyword(null, "double", "double", 884886883), new cljs.core.Keyword(null, "not\x3d", "not\x3d", -173995323), new cljs.core.Symbol(null, "int?", "int?", 1799729645, null), new cljs.core.Keyword(null, "int", "int", -1741416922), new cljs.core.Keyword(null, "\x3e", "\x3e", -555517146), new cljs.core.Symbol(null, 
  "neg-int?", "neg-int?", -1610409390, null), new cljs.core.Keyword(null, "\x3e\x3d", "\x3e\x3d", -623615505), new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "nat-int?", "nat-int?", -1879663400, null), new cljs.core.Symbol(null, "double", "double", -1769548886, null), new cljs.core.Keyword(null, "\x3d", "\x3d", 1152933628), new cljs.core.Keyword(null, "\x3c", "\x3c", -646864291), new cljs.core.Symbol(null, 
  "pos-int?", "pos-int?", -1205815015, null)], [malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, malli.transform._any__GT_string, 
  malli.transform._any__GT_string]));
};
malli.transform.transformer = function malli$transform$transformer(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___9529 = arguments.length;
  var i__4790__auto___9530 = 0;
  while (true) {
    if (i__4790__auto___9530 < len__4789__auto___9529) {
      args__4795__auto__.push(arguments[i__4790__auto___9530]);
      var G__9531 = i__4790__auto___9530 + 1;
      i__4790__auto___9530 = G__9531;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return malli.transform.transformer.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
malli.transform.transformer.cljs$core$IFn$_invoke$arity$variadic = function(_QMARK_transformers) {
  var __GT_data = function(ts, default$, name, key) {
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "transformers", "transformers", -734201565), ts, new cljs.core.Keyword(null, "default", "default", -1987822328), default$, new cljs.core.Keyword(null, "keys", "keys", 1068423698), cljs.core.truth_(name) ? function() {
      var G__9519 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, key), name], null)], null);
      if (!cljs.core.qualified_keyword_QMARK_.call(null, name)) {
        return cljs.core.conj.call(null, G__9519, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, key, cljs.core.name.call(null, name))], null));
      } else {
        return G__9519;
      }
    }() : null], null);
  };
  var __GT_eval = function(x, options) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.reduce_kv.call(null, function(x__$1, k, v) {
        return cljs.core.assoc.call(null, x__$1, k, malli.core.eval.call(null, v, options));
      }, x, x);
    } else {
      return malli.core.eval.call(null, x);
    }
  };
  var __GT_chain = malli.core._comp.call(null, malli.core._transformer_chain, malli.core._into_transformer);
  var chain = cljs.core.vec.call(null, cljs.core.mapcat.call(null, function(p1__9515_SHARP_) {
    if (cljs.core.map_QMARK_.call(null, p1__9515_SHARP_)) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9515_SHARP_], null);
    } else {
      return __GT_chain.call(null, p1__9515_SHARP_);
    }
  }, cljs.core.keep.call(null, cljs.core.identity, _QMARK_transformers)));
  var chain_SINGLEQUOTE_ = cljs.core.mapv.call(null, function(p1__9516_SHARP_) {
    var name = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(p1__9516_SHARP_);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "decode", "decode", -1306165281), __GT_data.call(null, (new cljs.core.Keyword(null, "decoders", "decoders", 1132818244)).cljs$core$IFn$_invoke$arity$1(p1__9516_SHARP_), (new cljs.core.Keyword(null, "default-decoder", "default-decoder", 808357161)).cljs$core$IFn$_invoke$arity$1(p1__9516_SHARP_), name, "decode"), new cljs.core.Keyword(null, "encode", "encode", -1753429702), __GT_data.call(null, (new cljs.core.Keyword(null, 
    "encoders", "encoders", -111722908)).cljs$core$IFn$_invoke$arity$1(p1__9516_SHARP_), (new cljs.core.Keyword(null, "default-encoder", "default-encoder", 117541207)).cljs$core$IFn$_invoke$arity$1(p1__9516_SHARP_), name, "encode")], null);
  }, chain);
  if (cljs.core.seq.call(null, chain)) {
    if (typeof malli !== "undefined" && typeof malli.transform !== "undefined" && typeof malli.transform.t_malli$transform9520 !== "undefined") {
    } else {
      malli.transform.t_malli$transform9520 = function(_QMARK_transformers, __GT_data, __GT_eval, __GT_chain, chain, chain_SINGLEQUOTE_, meta9521) {
        this._QMARK_transformers = _QMARK_transformers;
        this.__GT_data = __GT_data;
        this.__GT_eval = __GT_eval;
        this.__GT_chain = __GT_chain;
        this.chain = chain;
        this.chain_SINGLEQUOTE_ = chain_SINGLEQUOTE_;
        this.meta9521 = meta9521;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      malli.transform.t_malli$transform9520.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9522, meta9521__$1) {
        var self__ = this;
        var _9522__$1 = this;
        return new malli.transform.t_malli$transform9520(self__._QMARK_transformers, self__.__GT_data, self__.__GT_eval, self__.__GT_chain, self__.chain, self__.chain_SINGLEQUOTE_, meta9521__$1);
      };
      malli.transform.t_malli$transform9520.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9522) {
        var self__ = this;
        var _9522__$1 = this;
        return self__.meta9521;
      };
      malli.transform.t_malli$transform9520.prototype.malli$core$Transformer$ = cljs.core.PROTOCOL_SENTINEL;
      malli.transform.t_malli$transform9520.prototype.malli$core$Transformer$_transformer_chain$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.chain;
      };
      malli.transform.t_malli$transform9520.prototype.malli$core$Transformer$_value_transformer$arity$4 = function(_, schema, method, options) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.reduce.call(null, function(acc, p__9523) {
          var map__9524 = p__9523;
          var map__9524__$1 = (!(map__9524 == null) ? map__9524.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9524.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9524) : map__9524;
          var map__9525 = cljs.core.get.call(null, map__9524__$1, method);
          var map__9525__$1 = (!(map__9525 == null) ? map__9525.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9525.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9525) : map__9525;
          var keys = cljs.core.get.call(null, map__9525__$1, new cljs.core.Keyword(null, "keys", "keys", 1068423698));
          var default$ = cljs.core.get.call(null, map__9525__$1, new cljs.core.Keyword(null, "default", "default", -1987822328));
          var transformers = cljs.core.get.call(null, map__9525__$1, new cljs.core.Keyword(null, "transformers", "transformers", -734201565));
          var options__$1 = function() {
            var or__4185__auto__ = options;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return malli.core.options.call(null, schema);
            }
          }();
          var from = function(f) {
            return function(p1__9517_SHARP_) {
              var G__9528 = cljs.core.get_in.call(null, f.call(null, schema), p1__9517_SHARP_);
              if (G__9528 == null) {
                return null;
              } else {
                return self__.__GT_eval.call(null, G__9528, options__$1);
              }
            };
          };
          var from_properties = cljs.core.some_fn.call(null, from.call(null, malli.core.properties), from.call(null, malli.core.type_properties));
          var temp__5751__auto__ = function() {
            var or__4185__auto__ = cljs.core.some.call(null, from_properties, keys);
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              var or__4185__auto____$1 = cljs.core.get.call(null, transformers, malli.core.type.call(null, schema));
              if (cljs.core.truth_(or__4185__auto____$1)) {
                return or__4185__auto____$1;
              } else {
                return default$;
              }
            }
          }();
          if (cljs.core.truth_(temp__5751__auto__)) {
            var _QMARK_interceptor = temp__5751__auto__;
            var interceptor = malli.transform._interceptor.call(null, _QMARK_interceptor, schema, options__$1);
            if (acc == null) {
              return interceptor;
            } else {
              return malli.transform._interceptor.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, interceptor], null), schema, options__$1);
            }
          } else {
            return acc;
          }
        }, null, self__.chain_SINGLEQUOTE_);
      };
      malli.transform.t_malli$transform9520.getBasis = function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "?transformers", "?transformers", 1611212010, null), new cljs.core.Symbol(null, "-\x3edata", "-\x3edata", 912474639, null), new cljs.core.Symbol(null, "-\x3eeval", "-\x3eeval", 1090195269, null), new cljs.core.Symbol(null, "-\x3echain", "-\x3echain", 923961567, null), new cljs.core.Symbol(null, "chain", "chain", 1656162556, null), new cljs.core.Symbol(null, "chain'", "chain'", 
        -156051191, null), new cljs.core.Symbol(null, "meta9521", "meta9521", -484959177, null)], null);
      };
      malli.transform.t_malli$transform9520.cljs$lang$type = true;
      malli.transform.t_malli$transform9520.cljs$lang$ctorStr = "malli.transform/t_malli$transform9520";
      malli.transform.t_malli$transform9520.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
        return cljs.core._write.call(null, writer__4429__auto__, "malli.transform/t_malli$transform9520");
      };
      malli.transform.__GT_t_malli$transform9520 = function malli$transform$__GT_t_malli$transform9520(_QMARK_transformers__$1, __GT_data__$1, __GT_eval__$1, __GT_chain__$1, chain__$1, chain_SINGLEQUOTE___$1, meta9521) {
        return new malli.transform.t_malli$transform9520(_QMARK_transformers__$1, __GT_data__$1, __GT_eval__$1, __GT_chain__$1, chain__$1, chain_SINGLEQUOTE___$1, meta9521);
      };
    }
    return new malli.transform.t_malli$transform9520(_QMARK_transformers, __GT_data, __GT_eval, __GT_chain, chain, chain_SINGLEQUOTE_, cljs.core.PersistentArrayMap.EMPTY);
  } else {
    return null;
  }
};
malli.transform.transformer.cljs$lang$maxFixedArity = 0;
malli.transform.transformer.cljs$lang$applyTo = function(seq9518) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq9518));
};
malli.transform.json_transformer = function malli$transform$json_transformer(var_args) {
  var G__9533 = arguments.length;
  switch(G__9533) {
    case 0:
      return malli.transform.json_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.transform.json_transformer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.transform.json_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.transform.json_transformer.call(null, null);
};
malli.transform.json_transformer.cljs$core$IFn$_invoke$arity$1 = function(p__9534) {
  var map__9535 = p__9534;
  var map__9535__$1 = (!(map__9535 == null) ? map__9535.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9535.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9535) : map__9535;
  var json_vectors = cljs.core.get.call(null, map__9535__$1, new cljs.core.Keyword("malli.transform", "json-vectors", "malli.transform/json-vectors", -1108071835));
  var map_of_key_decoders = cljs.core.get.call(null, map__9535__$1, new cljs.core.Keyword("malli.transform", "map-of-key-decoders", "malli.transform/map-of-key-decoders", -1029175759), malli.transform._string_decoders.call(null));
  return malli.transform.transformer.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "json", "json", 1279968570), new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), function() {
    var G__9537 = cljs.core.assoc.call(null, malli.transform._json_decoders.call(null), new cljs.core.Keyword(null, "map-of", "map-of", 1189682355), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "compile", "compile", 608186429), function(schema, _) {
      var or__4185__auto__ = function() {
        var G__9539 = schema;
        var G__9539__$1 = G__9539 == null ? null : malli.core.children.call(null, G__9539);
        var G__9539__$2 = G__9539__$1 == null ? null : cljs.core.first.call(null, G__9539__$1);
        var G__9539__$3 = G__9539__$2 == null ? null : malli.core.type.call(null, G__9539__$2);
        var G__9539__$4 = G__9539__$3 == null ? null : map_of_key_decoders.call(null, G__9539__$3);
        var G__9539__$5 = G__9539__$4 == null ? null : malli.core._comp.call(null, G__9539__$4, malli.core._keyword__GT_string);
        if (G__9539__$5 == null) {
          return null;
        } else {
          return malli.transform._transform_map_keys.call(null, G__9539__$5);
        }
      }();
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return malli.transform._transform_map_keys.call(null, malli.core._keyword__GT_string);
      }
    }], null));
    if (cljs.core.truth_(json_vectors)) {
      return cljs.core.assoc.call(null, G__9537, new cljs.core.Keyword(null, "vector", "vector", 1902966158), malli.transform._sequential__GT_vector);
    } else {
      return G__9537;
    }
  }(), new cljs.core.Keyword(null, "encoders", "encoders", -111722908), malli.transform._json_encoders.call(null)], null));
};
malli.transform.json_transformer.cljs$lang$maxFixedArity = 1;
malli.transform.string_transformer = function malli$transform$string_transformer() {
  return malli.transform.transformer.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "string", "string", -1989541586), new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), malli.transform._string_decoders.call(null), new cljs.core.Keyword(null, "encoders", "encoders", -111722908), malli.transform._string_encoders.call(null)], null));
};
malli.transform.strip_extra_keys_transformer = function malli$transform$strip_extra_keys_transformer(var_args) {
  var G__9543 = arguments.length;
  switch(G__9543) {
    case 0:
      return malli.transform.strip_extra_keys_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.transform.strip_extra_keys_transformer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.transform.strip_extra_keys_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.transform.strip_extra_keys_transformer.call(null, null);
};
malli.transform.strip_extra_keys_transformer.cljs$core$IFn$_invoke$arity$1 = function(p__9544) {
  var map__9545 = p__9544;
  var map__9545__$1 = (!(map__9545 == null) ? map__9545.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9545.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9545) : map__9545;
  var accept = cljs.core.get.call(null, map__9545__$1, new cljs.core.Keyword(null, "accept", "accept", 1874130431), malli.core._comp.call(null, function(p1__9541_SHARP_) {
    return p1__9541_SHARP_ == null || p1__9541_SHARP_ === true;
  }, new cljs.core.Keyword(null, "closed", "closed", -919675359), malli.core.properties));
  var transform = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "compile", "compile", 608186429), function(schema, _) {
    if (cljs.core.truth_(accept.call(null, schema))) {
      var temp__5753__auto__ = function() {
        var G__9547 = schema;
        var G__9547__$1 = G__9547 == null ? null : malli.core.entries.call(null, G__9547);
        var G__9547__$2 = G__9547__$1 == null ? null : cljs.core.map.call(null, cljs.core.first, G__9547__$1);
        var G__9547__$3 = G__9547__$2 == null ? null : cljs.core.seq.call(null, G__9547__$2);
        if (G__9547__$3 == null) {
          return null;
        } else {
          return cljs.core.set.call(null, G__9547__$3);
        }
      }();
      if (cljs.core.truth_(temp__5753__auto__)) {
        var ks = temp__5753__auto__;
        return function(x) {
          return cljs.core.reduce.call(null, function(acc, k) {
            if (cljs.core.not.call(null, ks.call(null, k))) {
              return cljs.core.dissoc.call(null, acc, k);
            } else {
              return acc;
            }
          }, x, cljs.core.keys.call(null, x));
        };
      } else {
        return null;
      }
    } else {
      return null;
    }
  }], null);
  return malli.transform.transformer.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "map", "map", 1371690461), transform], null), new cljs.core.Keyword(null, "encoders", "encoders", -111722908), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "map", "map", 1371690461), transform], null)], null));
};
malli.transform.strip_extra_keys_transformer.cljs$lang$maxFixedArity = 1;
malli.transform.key_transformer = function malli$transform$key_transformer(p__9549) {
  var map__9550 = p__9549;
  var map__9550__$1 = (!(map__9550 == null) ? map__9550.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9550.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9550) : map__9550;
  var decode = cljs.core.get.call(null, map__9550__$1, new cljs.core.Keyword(null, "decode", "decode", -1306165281));
  var encode = cljs.core.get.call(null, map__9550__$1, new cljs.core.Keyword(null, "encode", "encode", -1753429702));
  var types = cljs.core.get.call(null, map__9550__$1, new cljs.core.Keyword(null, "types", "types", 590030639), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "map", "map", 1371690461), null], null), null));
  var transform = function(f, stage) {
    if (cljs.core.truth_(f)) {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([stage, malli.transform._transform_map_keys.call(null, f)]);
    } else {
      return null;
    }
  };
  return malli.transform.transformer.call(null, cljs.core.set_QMARK_.call(null, types) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), cljs.core.zipmap.call(null, types, cljs.core.repeat.call(null, transform.call(null, decode, new cljs.core.Keyword(null, "enter", "enter", 1792452624)))), new cljs.core.Keyword(null, "encoders", "encoders", -111722908), cljs.core.zipmap.call(null, types, cljs.core.repeat.call(null, transform.call(null, encode, 
  new cljs.core.Keyword(null, "leave", "leave", 1022579443))))], null) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), types) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "default-decoder", "default-decoder", 808357161), transform.call(null, decode, new cljs.core.Keyword(null, "enter", "enter", 1792452624)), new cljs.core.Keyword(null, "default-encoder", "default-encoder", 117541207), transform.call(null, encode, new cljs.core.Keyword(null, 
  "leave", "leave", 1022579443))], null) : null);
};
malli.transform.default_value_transformer = function malli$transform$default_value_transformer(var_args) {
  var G__9554 = arguments.length;
  switch(G__9554) {
    case 0:
      return malli.transform.default_value_transformer.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return malli.transform.default_value_transformer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
malli.transform.default_value_transformer.cljs$core$IFn$_invoke$arity$0 = function() {
  return malli.transform.default_value_transformer.call(null, null);
};
malli.transform.default_value_transformer.cljs$core$IFn$_invoke$arity$1 = function(p__9555) {
  var map__9556 = p__9555;
  var map__9556__$1 = (!(map__9556 == null) ? map__9556.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9556.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9556) : map__9556;
  var key = cljs.core.get.call(null, map__9556__$1, new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "default", "default", -1987822328));
  var defaults = cljs.core.get.call(null, map__9556__$1, new cljs.core.Keyword(null, "defaults", "defaults", 976027214));
  var get_default = function(schema) {
    var temp__5755__auto__ = function() {
      var G__9558 = schema;
      var G__9558__$1 = G__9558 == null ? null : malli.core.properties.call(null, G__9558);
      if (G__9558__$1 == null) {
        return null;
      } else {
        return cljs.core.find.call(null, G__9558__$1, key);
      }
    }();
    if (temp__5755__auto__ == null) {
      var G__9559 = schema;
      var G__9559__$1 = G__9559 == null ? null : malli.core.type.call(null, G__9559);
      var G__9559__$2 = G__9559__$1 == null ? null : cljs.core.get.call(null, defaults, G__9559__$1);
      if (G__9559__$2 == null) {
        return null;
      } else {
        return function(p1__9552_SHARP_) {
          return cljs.core.constantly.call(null, p1__9552_SHARP_.call(null, schema));
        }.call(null, G__9559__$2);
      }
    } else {
      var e = temp__5755__auto__;
      return cljs.core.constantly.call(null, cljs.core.val.call(null, e));
    }
  };
  var set_default = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "compile", "compile", 608186429), function(schema, _) {
    var temp__5757__auto__ = get_default.call(null, schema);
    if (temp__5757__auto__ == null) {
      return null;
    } else {
      var f = temp__5757__auto__;
      return function(x) {
        if (x == null) {
          return f.call(null);
        } else {
          return x;
        }
      };
    }
  }], null);
  var add_defaults = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "compile", "compile", 608186429), function(schema, _) {
    var defaults__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.keep.call(null, function(p__9560) {
      var vec__9561 = p__9560;
      var k = cljs.core.nth.call(null, vec__9561, 0, null);
      var map__9564 = cljs.core.nth.call(null, vec__9561, 1, null);
      var map__9564__$1 = (!(map__9564 == null) ? map__9564.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__9564.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9564) : map__9564;
      var p = map__9564__$1;
      var optional = cljs.core.get.call(null, map__9564__$1, new cljs.core.Keyword(null, "optional", "optional", 2053951509));
      var v = cljs.core.nth.call(null, vec__9561, 2, null);
      if (cljs.core.truth_(optional)) {
        return null;
      } else {
        var e = cljs.core.find.call(null, p, key);
        var temp__5757__auto__ = cljs.core.truth_(e) ? cljs.core.constantly.call(null, cljs.core.val.call(null, e)) : get_default.call(null, v);
        if (temp__5757__auto__ == null) {
          return null;
        } else {
          var f = temp__5757__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, f], null);
        }
      }
    }), malli.core.children.call(null, schema));
    if (cljs.core.seq.call(null, defaults__$1)) {
      return function(x) {
        if (cljs.core.map_QMARK_.call(null, x)) {
          return cljs.core.reduce_kv.call(null, function(acc, k, f) {
            if (!cljs.core.contains_QMARK_.call(null, x, k)) {
              return cljs.core.assoc.call(null, acc, k, f.call(null));
            } else {
              return acc;
            }
          }, x, defaults__$1);
        } else {
          return x;
        }
      };
    } else {
      return null;
    }
  }], null);
  return malli.transform.transformer.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "default-decoder", "default-decoder", 808357161), set_default, new cljs.core.Keyword(null, "default-encoder", "default-encoder", 117541207), set_default], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "map", "map", 1371690461), add_defaults], 
  null), new cljs.core.Keyword(null, "encoders", "encoders", -111722908), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "map", "map", 1371690461), add_defaults], null)], null));
};
malli.transform.default_value_transformer.cljs$lang$maxFixedArity = 1;
malli.transform.collection_transformer = function malli$transform$collection_transformer() {
  var coders = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "vector", "vector", 1902966158), malli.transform._sequential_or_set__GT_vector, new cljs.core.Keyword(null, "sequential", "sequential", -1082983960), malli.transform._sequential_or_set__GT_seq, new cljs.core.Keyword(null, "set", "set", 304602554), malli.transform._sequential__GT_set], null);
  return malli.transform.transformer.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "decoders", "decoders", 1132818244), coders, new cljs.core.Keyword(null, "encoders", "encoders", -111722908), coders], null));
};
goog.provide("sophitia.data.transformation");
goog.require("cljs.core");
goog.require("malli.transform");
sophitia.data.transformation.create_field_title = function sophitia$data$transformation$create_field_title(field) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(field)], null);
};
sophitia.data.transformation.create_field_error = function sophitia$data$transformation$create_field_error(field) {
  var error_text = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "error-message", "error-message", 1756021561)).cljs$core$IFn$_invoke$arity$1(field);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return (new cljs.core.Keyword(null, "default-error-mesage", "default-error-mesage", 963160337)).cljs$core$IFn$_invoke$arity$1(field);
    }
  }();
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), error_text], null);
};
sophitia.data.transformation.collect_html_attrs = function sophitia$data$transformation$collect_html_attrs(field) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(field), new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(field), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(field)], 
  null);
};
sophitia.data.transformation.create_input = function sophitia$data$transformation$create_input(field) {
  var attrs = sophitia.data.transformation.collect_html_attrs.call(null, field);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), attrs], null);
};
sophitia.data.transformation.s_field__GT_reagent_field = function sophitia$data$transformation$s_field__GT_reagent_field(field) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), sophitia.data.transformation.create_field_title.call(null, field), sophitia.data.transformation.create_input.call(null, field), sophitia.data.transformation.create_field_error.call(null, field)], null);
};
sophitia.data.transformation.s_form__GT_reagent_form = function sophitia$data$transformation$s_form__GT_reagent_form(sophitia_form) {
  var pre_form = cljs.core.map.call(null, function(field) {
    return sophitia.data.transformation.s_field__GT_reagent_field.call(null, field);
  }, (new cljs.core.Keyword(null, "fields", "fields", -1932066230)).cljs$core$IFn$_invoke$arity$1(sophitia_form));
  return cljs.core.reduce.call(null, function(acc, field) {
    return cljs.core.conj.call(null, acc, field);
  }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632)], null), pre_form);
};
goog.provide("sophitia.core");
goog.require("cljs.core");
goog.require("sophitia.data.validation");
goog.require("sophitia.data.transformation");
sophitia.core.generate_form = function sophitia$core$generate_form(sophitia_form, state) {
  if (cljs.core.truth_(sophitia.data.validation.validate_form_schema.call(null, sophitia_form))) {
    return sophitia.data.transformation.s_form__GT_reagent_form.call(null, sophitia_form);
  } else {
    return null;
  }
};
sophitia.core.validate_data = function sophitia$core$validate_data(schema, state) {
  return null;
};
goog.provide("sophitia.test");
goog.require("cljs.core");
goog.require("sophitia.test.runner");
sophitia.test.success = 0;
sophitia.test.run = function sophitia$test$run() {
  console.log("Tests started.");
  sophitia.test.runner.run.call(null);
  return sophitia.test.success;
};
goog.exportSymbol("sophitia.test.run", sophitia.test.run);
goog.provide("sophitia.test.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("sophitia.core");
goog.provide("sophitia.config");
goog.require("cljs.core");
goog.provide("sophitia.test.data.transformation");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("sophitia.data.transformation");
sophitia.test.data.transformation.valid_malli_field = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "id", "id", -1388402092), "id1", new cljs.core.Keyword(null, "name", "name", 1843675177), "name1", new cljs.core.Keyword(null, "class", "class", -2030961996), "class1", new cljs.core.Keyword(null, "description", "description", -1428560544), "first class", new cljs.core.Keyword(null, "error-message", "error-message", 1756021561), null, new cljs.core.Keyword(null, "default-error-mesage", 
"default-error-mesage", 963160337), "Field not valid.", new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "validation-group", "validation-group", -591747153), "g1"], null);
sophitia.test.data.transformation.create_field_title_test = function sophitia$test$data$transformation$create_field_title_test() {
  return cljs.test.test_var.call(null, sophitia.test.data.transformation.create_field_title_test.cljs$lang$var);
};
sophitia.test.data.transformation.create_field_title_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "create-field-title is working properly with a valid field");
  try {
    var input_field = sophitia.test.data.transformation.valid_malli_field;
    var actual_title = sophitia.data.transformation.create_field_title.call(null, input_field);
    var expected_title = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), "name1"], null);
    try {
      var values__2852__auto__ = new cljs.core.List(null, actual_title, new cljs.core.List(null, expected_title, null, 1, null), 2, null);
      var result__2853__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2852__auto__);
      if (cljs.core.truth_(result__2853__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-title", "actual-title", 1711293683, null), new cljs.core.Symbol(null, "expected-title", "expected-title", -80767923, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2852__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-title", "actual-title", 1711293683, null), new cljs.core.Symbol(null, "expected-title", "expected-title", -80767923, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2852__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__2853__auto__;
    } catch (e7745) {
      var t__2897__auto__ = e7745;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-title", "actual-title", 1711293683, null), new cljs.core.Symbol(null, "expected-title", "expected-title", -80767923, null)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2897__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
sophitia.test.data.transformation.create_field_title_test.cljs$lang$var = new cljs.core.Var(function() {
  return sophitia.test.data.transformation.create_field_title_test;
}, new cljs.core.Symbol("sophitia.test.data.transformation", "create-field-title-test", "sophitia.test.data.transformation/create-field-title-test", -572290949, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "create-field-title-test", "create-field-title-test", 
883805075, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 15, 15, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.create_field_title_test) ? sophitia.test.data.transformation.create_field_title_test.cljs$lang$test : null]));
sophitia.test.data.transformation.create_field_error_test = function sophitia$test$data$transformation$create_field_error_test() {
  return cljs.test.test_var.call(null, sophitia.test.data.transformation.create_field_error_test.cljs$lang$var);
};
sophitia.test.data.transformation.create_field_error_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "create-field-error is working properly with a valid field");
  try {
    var input_field = sophitia.test.data.transformation.valid_malli_field;
    var actual_error = sophitia.data.transformation.create_field_error.call(null, input_field);
    var expected_error = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Field not valid."], null);
    try {
      var values__2852__auto__ = new cljs.core.List(null, actual_error, new cljs.core.List(null, expected_error, null, 1, null), 2, null);
      var result__2853__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2852__auto__);
      if (cljs.core.truth_(result__2853__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-error", "actual-error", 2139923361, null), new cljs.core.Symbol(null, "expected-error", "expected-error", 1892149637, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2852__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-error", "actual-error", 2139923361, null), new cljs.core.Symbol(null, "expected-error", "expected-error", 1892149637, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2852__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__2853__auto__;
    } catch (e7746) {
      var t__2897__auto__ = e7746;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-error", "actual-error", 2139923361, null), new cljs.core.Symbol(null, "expected-error", "expected-error", 1892149637, null)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2897__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
sophitia.test.data.transformation.create_field_error_test.cljs$lang$var = new cljs.core.Var(function() {
  return sophitia.test.data.transformation.create_field_error_test;
}, new cljs.core.Symbol("sophitia.test.data.transformation", "create-field-error-test", "sophitia.test.data.transformation/create-field-error-test", 1626325082, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "create-field-error-test", "create-field-error-test", 
1176604194, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.create_field_error_test) ? sophitia.test.data.transformation.create_field_error_test.cljs$lang$test : null]));
sophitia.test.data.transformation.collect_html_attrs_test = function sophitia$test$data$transformation$collect_html_attrs_test() {
  return cljs.test.test_var.call(null, sophitia.test.data.transformation.collect_html_attrs_test.cljs$lang$var);
};
sophitia.test.data.transformation.collect_html_attrs_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "collect-html-attrs is working properly with a valid field");
  try {
    var input_field = sophitia.test.data.transformation.valid_malli_field;
    var actual_attrs = sophitia.data.transformation.collect_html_attrs.call(null, input_field);
    var expected_attrs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), "id1", new cljs.core.Keyword(null, "class", "class", -2030961996), "class1", new cljs.core.Keyword(null, "type", "type", 1174270348), "text"], null);
    try {
      var values__2852__auto__ = new cljs.core.List(null, actual_attrs, new cljs.core.List(null, expected_attrs, null, 1, null), 2, null);
      var result__2853__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2852__auto__);
      if (cljs.core.truth_(result__2853__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-attrs", "actual-attrs", -898884608, null), new cljs.core.Symbol(null, "expected-attrs", "expected-attrs", 1534364773, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2852__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-attrs", "actual-attrs", -898884608, null), new cljs.core.Symbol(null, "expected-attrs", "expected-attrs", 1534364773, null)), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2852__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__2853__auto__;
    } catch (e7747) {
      var t__2897__auto__ = e7747;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "actual-attrs", "actual-attrs", -898884608, null), new cljs.core.Symbol(null, "expected-attrs", "expected-attrs", 1534364773, null)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2897__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
sophitia.test.data.transformation.collect_html_attrs_test.cljs$lang$var = new cljs.core.Var(function() {
  return sophitia.test.data.transformation.collect_html_attrs_test;
}, new cljs.core.Symbol("sophitia.test.data.transformation", "collect-html-attrs-test", "sophitia.test.data.transformation/collect-html-attrs-test", 1382605158, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "collect-html-attrs-test", "collect-html-attrs-test", 
760292318, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 29, 29, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.collect_html_attrs_test) ? sophitia.test.data.transformation.collect_html_attrs_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env7748 = cljs.test.empty_env.call(null);
  var summary7749 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env7748);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
    return cljs.test.block.call(null, function() {
      var env__2965__auto__ = cljs.test.get_current_env.call(null);
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__2965__auto__ == null) {
          cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
        } else {
        }
        return null;
      }], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
        return sophitia.test.data.transformation.create_field_title_test;
      }, new cljs.core.Symbol("sophitia.test.data.transformation", "create-field-title-test", "sophitia.test.data.transformation/create-field-title-test", -572290949, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "create-field-title-test", "create-field-title-test", 
      883805075, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 15, 15, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.create_field_title_test) ? sophitia.test.data.transformation.create_field_title_test.cljs$lang$test : null])), new cljs.core.Var(function() {
        return sophitia.test.data.transformation.create_field_error_test;
      }, new cljs.core.Symbol("sophitia.test.data.transformation", "create-field-error-test", "sophitia.test.data.transformation/create-field-error-test", 1626325082, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "create-field-error-test", "create-field-error-test", 
      1176604194, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 22, 22, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.create_field_error_test) ? sophitia.test.data.transformation.create_field_error_test.cljs$lang$test : null])), new cljs.core.Var(function() {
        return sophitia.test.data.transformation.collect_html_attrs_test;
      }, new cljs.core.Symbol("sophitia.test.data.transformation", "collect-html-attrs-test", "sophitia.test.data.transformation/collect-html-attrs-test", 1382605158, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Symbol(null, "collect-html-attrs-test", "collect-html-attrs-test", 
      760292318, null), "test-cljs/sophitia/test/data/transformation_test.cljs", 33, 1, 29, 29, cljs.core.List.EMPTY, null, cljs.core.truth_(sophitia.test.data.transformation.collect_html_attrs_test) ? sophitia.test.data.transformation.collect_html_attrs_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__2965__auto__ == null) {
          return cljs.test.clear_env_BANG_.call(null);
        } else {
          return null;
        }
      }], null));
    }());
  }, function() {
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "sophitia.test.data.transformation", "sophitia.test.data.transformation", -1549504505, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
  }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.core._vreset_BANG_.call(null, summary7749, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary7749), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
  }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env7748);
    cljs.test.do_report.call(null, cljs.core.deref.call(null, summary7749));
    cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary7749), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
    return cljs.test.clear_env_BANG_.call(null);
  }], null));
}());
